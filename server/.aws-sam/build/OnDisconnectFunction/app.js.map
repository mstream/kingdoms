{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/flow-runtime/dist/flow-runtime.es2015.js","webpack:///./src/clients/redis.js","webpack:///./src/handlers/types.js","webpack:///external \"ioredis\"","webpack:///./src/handlers/on-disconnect/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","primitiveTypes","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","_extends","assign","arguments","source","inherits","subClass","superClass","constructor","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","slicedToArray","arr","Array","isArray","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","sliceIterator","toConsumableArray","arr2","from","makeJSONError","validation","hasErrors","input","context","errors","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","_ref","_ref2","path","message","expectedType","expected","toString","actual","typeOf","_resolvePath","field","stringifyPath","concat","pointer","join","return","cyclicValidation","WeakMap","cyclicToString","WeakSet","inValidationCycle","type","tracked","weakSetHas","e","startValidationCycle","set","weakSetAdd","endValidationCycle","weakSetDelete","inToStringCycle","has","startToStringCycle","add","endToStringCycle","delete","weakset","validIdentifierOrAccessor","Validation","this","prefix","cyclic","matchPath","didClear","_errors","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","error","parts","part","test","String","subject","Map","candidate","RuntimeTypeError","_TypeError","options","_this","getPrototypeOf","delimiter","makeTypeError","collected","actualType","actualAsString","makeString","trim","JSON","stringify","makeError","validate","compareTypes","a","b","result","TypeAlias","TypeParameter","TypeParameterApplication","TypeTDZ","unwrap","compareWith","FlowIntoType","AnyType","ExistentialType","MixedType","Type","typeName","Error","captureStackTrace","assert","_Type","_temp","_len","args","_key","apply","errorMessages","ERR_CONSTRAINT_VIOLATION","ERR_EXPECT_ARRAY","ERR_EXPECT_TRUE","ERR_EXPECT_FALSE","ERR_EXPECT_BOOLEAN","ERR_EXPECT_EMPTY","ERR_EXPECT_EXACT_VALUE","ERR_EXPECT_CALLABLE","ERR_EXPECT_CLASS","ERR_EXPECT_FUNCTION","ERR_EXPECT_GENERATOR","ERR_EXPECT_ITERABLE","ERR_EXPECT_ARGUMENT","ERR_EXPECT_RETURN","ERR_EXPECT_N_ARGUMENTS","ERR_EXPECT_INSTANCEOF","ERR_EXPECT_KEY_TYPE","ERR_EXPECT_NULL","ERR_EXPECT_NUMBER","ERR_EXPECT_OBJECT","ERR_EXPECT_PROMISE","ERR_EXPECT_STRING","ERR_EXPECT_SYMBOL","ERR_EXPECT_THIS","ERR_EXPECT_VOID","ERR_INVALID_DATE","ERR_MISSING_PROPERTY","ERR_NO_INDEXER","ERR_NO_UNION","ERR_UNKNOWN_KEY","getErrorMessage","params","replace","TupleType","types","checkPredicate","accepts","inputTypes","isGreater","ArrayType","inCycle","startCycle","elementType","endCycle","output","BooleanLiteralType","BooleanType","EmptyType","typeInstances","parent","_parent","inner","hasProperty","_ref3","getProperty","_parent2","items","typeInstance","addConstraints","_subject$constraints","constraints","collectConstraintErrors","_len2","_key2","constraint","violation","constraintsAccept","_len3","_key3","hasConstraints","withDeclaration","properties","FlowIntoSymbol","boundOrDefault","bound","default","recorded","withBinding","id","defaultType","typeParameter","union","hasError","_hasError","_error","toJSON","FunctionTypeRestParam","FunctionTypeParam","optional","FunctionTypeReturn","ParentSymbol","NameRegistrySymbol","ModuleRegistrySymbol","CurrentModuleSymbol","TypeConstructorRegistrySymbol","InferrerSymbol","TypeSymbol","TypeParametersSymbol","TypePredicateRegistrySymbol","FunctionType","annotation","returnType","param","annotationParam","acceptsType","any","_i2","returnTypeResult","inputParams","inputParam","rest","paramsLength","argsLength","_i3","_i4","_len4","_key4","empty","_i5","GeneratorType","throw","yieldType","nextType","warnedInstances","TypeConstructor","emitWarningMessage","GenericType","_TypeConstructor","impl","getAnnotation","isPrototypeOf","invariant","NullLiteralType","VoidType","NullableType","ObjectTypeProperty","static","targetPath","isNullable","existsOn","ObjectTypeIndexer","keyResult","valueResult","ObjectTypeCallProperty","Declaration","VarDeclaration","_Declaration","TypeDeclaration","_typeAlias","typeAlias","addConstraint","_typeAlias2","_typeAlias3","_typeAlias4","_typeAlias5","ModuleDeclaration","moduleExports","exporting","prop","declaration","declarations","moduleName","slice","innerContext","import","body","_name","_name2","lines","split","indent$1","ModuleExports","ClassDeclaration","shapeID","errorPath","errorMessage","propertyName","isSuperClassOf","current","superClassName","bodyProps","superProps","seen","seenStatic","_prop","PartialType","typeParameters","expand","ParameterizedClassDeclaration","getPartial","_len5","_key5","partial","bodyCreator","class","_len6","_key6","limit","Math","min","intersect","ExtendsDeclaration","ObjectType","indexers","callProperties","exact","getIndexer","newProp","hasIndexer","indexer","acceptsKey","acceptsCallProperties","loop","indexOf","acceptsValue","collectErrorsWithIndexers","collectErrorsWithoutIndexers","_loop2","some","collectErrorsExact","acceptsWithIndexers","acceptsWithoutIndexers","_loop","v","_ret2","acceptsExact","_result","inputCallProperties","identicalCount","callProperty","j","inputCallProperty","compareTypeCallProperties","inputIndexers","inputProperties","inputProperty","_j","inputIndexer","_result2","compareTypeWithIndexers","compareTypeWithoutIndexers","indent","IntersectionType","mergeProperties","getPropertyIndex","typeProp","index","NumericLiteralType","NumberType","ParameterizedTypeAlias","_TypeAlias","getPartial$1","identifier","typeCreator","_len7","_key7","ParameterizedFunctionType","getPartial$2","_getPartial$type","acceptsParams","acceptsReturn","_getPartial$type2","assertParams","assertReturn","function","RefinementType","StringLiteralType","StringType","SymbolLiteralType","SymbolType","ThisType","warnedInstances$1","TypeBox","reveal","ref","mixed","warnedMissing","TypeReference","warnedInstances$2","RevealedName","RevealedValue","getRevealed","container","existing","UnionType","normalized","TypeInferer","primitive","inferPrimitive","inferred","inferComplex","null","void","number","boolean","string","symbol","inferFunction","inferObject","fromCharCode","existential","fn","box","inferArray","handler","getTypeConstructor","inferTypeParameters","inferInternal","inferDict","numericIndexers","stringIndexers","isNaN","values","item","inferredType","array","makeWarningMessage","makeUnion","merged","mergeUnionTypes","aTypes","bTypes","bType","makePropertyDescriptor","typeSource","shouldAssert","propertyPath","getClassName","originalSetter","resolveType","warn","augmentExistingAccessors","safeName","className","initializer","config","obj","keys","objectWithoutProperties","_value","check","propertyToAccessor","receiver","annotateValue","_type","$DiffType","aType","_context","$FlowFixMeType","$KeysType","literal","$ObjMapiType","mapper","applied","invoke","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","$ObjMapType","$PropertyType","unwrapped","$ShapeType","$SubType","$SuperType","$TupleMapType","tuple","$ValuesType","checkGenericType","checkType","ClassType","instanceType","warnedInvalidReferences","TypeContext","Class","inferrer","infer","propertyNames","fromParent","global","getPredicate","predicate","_this2","Boolean","annotate","_target","nameRegistry","_target2","var","moduleRegistry","_moduleName$split","handlerRegistry","flowIntoTypeParameter","instancePrototype","parentPrototype","parentClass","typeParametersPointer","typeParam","createContext","currentModule","head","_target3","tail","unshift","_body$properties","_target4","_body","_len8","_key8","_len9","_key9","_len10","_key10","method","_len11","_key11","_target$callPropertie","_target$indexers","setProperty","_len12","_key12","_len13","_key13","_len14","_key14","tdz","_target5","_len15","_key15","_validation$path","console","objectType","propName","componentName","makeReactPropTypes","_len16","_key16","clauses","pop","pattern","_len17","_key17","tests","clause","_clause","_len18","_key18","_target$callPropertie2","_target$indexers2","_target$properties","globalContext$1","__FLOW_RUNTIME_GLOBAL_CONTEXT_DO_NOT_USE_THIS_VARIABLE__","freeze","declareTypeConstructor","Date","getTime","Promise","futureType","keyType","valueType","_ref4","keyTypes","valueTypes","_ref5","_ref6","findKey","Set","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","registerBuiltinTypeConstructors","setPredicate","then","globalContext$2","MultiRedis","MultiGet","MultiSadd","MultiSet","MultiSmembers","MultiSrem","Get","Sadd","Smembers","Srem","Watch","createRedisClient","RedisClient","host","process","env","REDIS_HOST","port","REDIS_PORT","TEvent","Context","Callback","TResult","CognitoIdentity","ClientContext","ClientContextClient","ClientContextEnv","AuthResponseContext","APIGatewayEventIdentity","Handler","APIGatewayProxyEvent","APIGatewayProxyResult","APIGatewayProxyHandler","APIGatewayProxyCallback","APIGatewayEventRequestContext","CustomAuthorizerEvent","CustomAuthorizerResult","PolicyDocument","Statement","Condition","BaseStatement","StatementAction","StatementResource","StatementPrincipal","ConditionBlock","PrincipalValue","MaybeStatementPrincipal","MaybeStatementResource","ScheduledEvent","require","redis","async","event","connectionId","requestContext","srem","stack","statusCode"],"mappings":"2BACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QA0Df,OArDAF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,GAIjBlC,EAAoBA,EAAoBmC,EAAI,I,iCC7ErD,IAAIC,EAAiB,GAEjBC,EAAiB,SAAUC,EAAUC,GACvC,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,sCAIpBC,EAAc,WAChB,SAASC,EAAiBC,EAAQC,GAChC,IAAK,IAAIxC,EAAI,EAAGA,EAAIwC,EAAMC,OAAQzC,IAAK,CACrC,IAAI0C,EAAaF,EAAMxC,GACvB0C,EAAW9B,WAAa8B,EAAW9B,aAAc,EACjD8B,EAAWC,cAAe,EACtB,UAAWD,IAAYA,EAAWE,UAAW,GACjDlC,OAAOC,eAAe4B,EAAQG,EAAWnB,IAAKmB,IAIlD,OAAO,SAAUP,EAAaU,EAAYC,GAGxC,OAFID,GAAYP,EAAiBH,EAAYP,UAAWiB,GACpDC,GAAaR,EAAiBH,EAAaW,GACxCX,GAdO,GAwBdY,EAAWrC,OAAOsC,QAAU,SAAUT,GACxC,IAAK,IAAIvC,EAAI,EAAGA,EAAIiD,UAAUR,OAAQzC,IAAK,CACzC,IAAIkD,EAASD,UAAUjD,GAEvB,IAAK,IAAIuB,KAAO2B,EACVxC,OAAOkB,UAAUC,eAAe1B,KAAK+C,EAAQ3B,KAC/CgB,EAAOhB,GAAO2B,EAAO3B,IAK3B,OAAOgB,GAKLY,EAAW,SAAUC,EAAUC,GACjC,GAA0B,mBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIjB,UAAU,kEAAoEiB,GAG1FD,EAASxB,UAAYlB,OAAOY,OAAO+B,GAAcA,EAAWzB,UAAW,CACrE0B,YAAa,CACXrC,MAAOmC,EACPxC,YAAY,EACZgC,UAAU,EACVD,cAAc,KAGdU,IAAY3C,OAAO6C,eAAiB7C,OAAO6C,eAAeH,EAAUC,GAAcD,EAASI,UAAYH,IAuBzGI,EAA4B,SAAUC,EAAMvD,GAC9C,IAAKuD,EACH,MAAM,IAAIC,eAAe,6DAG3B,OAAOxD,GAAyB,iBAATA,GAAqC,mBAATA,EAA8BuD,EAAPvD,GAOxEyD,EA2BK,SAAUC,EAAK7D,GACpB,GAAI8D,MAAMC,QAAQF,GAChB,OAAOA,EACF,GAAI9C,OAAOiD,YAAYtD,OAAOmD,GACnC,OA9BJ,SAAuBA,EAAK7D,GAC1B,IAAIiE,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKV,EAAI9C,OAAOiD,cAAmBE,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGrD,QAETjB,GAAKiE,EAAKxB,SAAWzC,GAH8CkE,GAAK,IAK9E,MAAOS,GACPR,GAAK,EACLC,EAAKO,EACL,QACA,KACOT,GAAMK,EAAW,QAAGA,EAAW,SACpC,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,EAOEW,CAAcf,EAAK7D,GAE1B,MAAM,IAAIoC,UAAU,yDAiBtByC,EAAoB,SAAUhB,GAChC,GAAIC,MAAMC,QAAQF,GAAM,CACtB,IAAK,IAAI7D,EAAI,EAAG8E,EAAOhB,MAAMD,EAAIpB,QAASzC,EAAI6D,EAAIpB,OAAQzC,IAAK8E,EAAK9E,GAAK6D,EAAI7D,GAE7E,OAAO8E,EAEP,OAAOhB,MAAMiB,KAAKlB,IAItB,SAASmB,EAAcC,GACrB,GAAKA,EAAWC,YAAhB,CAGA,IAAIC,EAAQF,EAAWE,MACnBC,EAAUH,EAAWG,QAErBC,EAAS,GACTC,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAAsDoB,EAAlDC,EAAYT,EAAWI,OAAOtE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CAClK,IAAIK,EAAOF,EAAMxE,MAEb2E,EAAQhC,EAAc+B,EAAM,GAE5BE,EAAOD,EAAM,GACbE,EAAUF,EAAM,GAChBG,EAAeH,EAAM,GAErBI,EAAWD,EAAeA,EAAaE,WAAa,KACpDC,EAASd,EAAQe,OAAOC,EAAajB,EAAOU,IAAOI,WACnDI,EAAQC,EAAcrB,EAAWY,KAAKU,OAAOV,IAE7CW,EAAU,IAAIX,EAAKY,KAAK,OAE5BpB,EAAOX,KAAK,CACV8B,UACAH,QACAP,UACAE,WACAE,YAGJ,MAAOvB,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,GAKZ,OAAOH,GAIT,IAAIsB,EAAmB,IAAIC,QAIvBC,EAAiB,IAAIC,QAEzB,SAASC,EAAkBC,EAAM7B,GAC/B,IACE,IAAI8B,EAAUN,EAAiB9F,IAAImG,GACnC,QAAKC,GAGIC,EAAWD,EAAS9B,GAE7B,MAAOgC,GAEP,OAAO,GAIX,SAASC,EAAqBJ,EAAM7B,GAClC,IAAI8B,EAAUN,EAAiB9F,IAAImG,GAC9BC,IACHA,EAAU,IAAIH,QACdH,EAAiBU,IAAIL,EAAMC,IAE7BK,EAAWL,EAAS9B,GAGtB,SAASoC,EAAmBP,EAAM7B,GAChC,IAAI8B,EAAUN,EAAiB9F,IAAImG,GAC/BC,GACFO,EAAcP,EAAS9B,GAI3B,SAASsC,EAAgBT,GACvB,OAAOH,EAAea,IAAIV,GAG5B,SAASW,EAAmBX,GAC1BH,EAAee,IAAIZ,GAGrB,SAASa,EAAiBb,GACxBH,EAAeiB,OAAOd,GAGxB,SAASE,EAAWa,EAAS9G,GAC3B,IACE,OAAO8G,EAAQL,IAAIzG,GACnB,MAAOkG,GACP,OAAO,GAIX,SAASG,EAAWS,EAAS9G,GAC3B,IACE8G,EAAQH,IAAI3G,GACZ,MAAOkG,KAGX,SAASK,EAAcO,EAAS9G,GAC9B,IACE8G,EAAQD,OAAO7G,GACf,MAAOkG,KAGX,IAAIa,EAA4B,4BAE5BC,EAAa,WACf,SAASA,EAAW7C,EAASD,GAC3BlD,EAAeiG,KAAMD,GACrBC,KAAKrC,KAAO,GACZqC,KAAKC,OAAS,GACdD,KAAK7C,OAAS,GACd6C,KAAKE,OAAS,IAAIxB,QAElBsB,KAAK9C,QAAUA,EACf8C,KAAK/C,MAAQA,EAqIf,OA/HA9C,EAAY4F,EAAY,CAAC,CACvB1G,IAAK,UACLN,MAAO,SAAiB+F,EAAM7B,GAC5B,IAAI8B,EAAUiB,KAAKE,OAAOvH,IAAImG,GAC9B,QAAKC,GAGIC,EAAWD,EAAS9B,KAG9B,CACD5D,IAAK,aACLN,MAAO,SAAoB+F,EAAM7B,GAC/B,IAAI8B,EAAUiB,KAAKE,OAAOvH,IAAImG,GACzBC,IACHA,EAAU,IAAIH,QACdoB,KAAKE,OAAOf,IAAIL,EAAMC,IAExBK,EAAWL,EAAS9B,KAErB,CACD5D,IAAK,WACLN,MAAO,SAAkB+F,EAAM7B,GAC7B,IAAI8B,EAAUiB,KAAKE,OAAOvH,IAAImG,GAC1BC,GACFO,EAAcP,EAAS9B,KAG1B,CACD5D,IAAK,YACLN,MAAO,SAAmB4E,GACxB,GAAIA,EAAM,CACR,IAAIP,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAAgDoB,EAA5CC,EAAYwC,KAAK7C,OAAOtE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CAC5J,IAAIK,EAAOF,EAAMxE,MAMjB,GAAIoH,EAAUxC,EAJFjC,EAAc+B,EAAM,GAEV,IAGpB,OAAO,GAGX,MAAOhB,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,GAKZ,OAAO,EAEP,OAAO0C,KAAK7C,OAAO5C,OAAS,IAG/B,CACDlB,IAAK,WACLN,MAAO,SAAkB4E,EAAME,EAAcD,GAE3C,OADAoC,KAAK7C,OAAOX,KAAK,CAACmB,EAAMC,EAASC,IAC1BmC,OAER,CACD3G,IAAK,aACLN,MAAO,SAAoB4E,GACzB,IAAIyC,GAAW,EACf,GAAIzC,EAAM,CACR,IAAI0C,EAAU,GACVC,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkBrE,EAEtB,IACE,IAAK,IAAiDsE,EAA7CC,EAAaV,KAAK7C,OAAOtE,OAAOiD,cAAuBwE,GAA8BG,EAASC,EAAWpE,QAAQC,MAAO+D,GAA6B,EAAM,CAClK,IAAIK,EAAQF,EAAO1H,MAEfoH,EAAUxC,EAAMgD,EAAM,IACxBP,GAAW,EAEXC,EAAQ7D,KAAKmE,IAGjB,MAAOlE,GACP8D,GAAqB,EACrBC,EAAkB/D,EAClB,QACA,KACO6D,GAA8BI,EAAWlC,QAC5CkC,EAAWlC,SAEb,QACA,GAAI+B,EACF,MAAMC,GAKZR,KAAK7C,OAASkD,OAEdD,EAAWJ,KAAK7C,OAAO5C,OAAS,EAChCyF,KAAK7C,OAAS,GAEhB,OAAOiD,IAER,CACD/G,IAAK,cACLN,MAAO,SAAqB4E,GAC1B,OAAOO,EAAa8B,KAAK/C,MAAOU,KAEjC,CACDtE,IAAK,SACLN,MAAO,WACL,OAAO+D,EAAckD,UAGlBD,EA9IQ,GAiJjB,SAAS3B,EAAcT,GACrB,IAAKA,EAAKpD,OACR,MAAO,QAKT,IAHA,IAAIA,EAASoD,EAAKpD,OAEdqG,EAAQ,IAAIhF,MAAMrB,GACbzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAI+I,EAAOlD,EAAK7F,GACH,oBAAT+I,EACFD,EAAM9I,GAAK,cACc,iBAAT+I,GAAsBf,EAA0BgB,KAAKD,GAGrED,EAAM9I,GADGA,EAAI,EACF,IAAIiJ,OAAOF,KAEXE,OAAOF,GAJlBD,EAAM9I,GAAK,IAAIiJ,OAAOF,MAO1B,OAAOD,EAAMrC,KAAK,IAGpB,SAASL,EAAajB,EAAOU,GAI3B,IAHA,IAAIqD,EAAU/D,EACV1C,EAASoD,EAAKpD,OAETzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,GAAe,MAAXkJ,EACF,OAEF,IAAIH,EAAOlD,EAAK7F,GACH,oBAAT+I,IAIFG,EADEA,aAAmBC,IACXD,EAAQrI,IAAIkI,GAEZG,EAAQH,IAGtB,OAAOG,EAGT,SAASb,EAAUxC,EAAMuD,GACvB,IAAI3G,EAASoD,EAAKpD,OAElB,GAAIA,EAAS2G,EAAU3G,OACrB,OAAO,EAET,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAC1B,GAAIoJ,EAAUpJ,KAAO6F,EAAK7F,GACxB,OAAO,EAGX,OAAO,EAGT,IAAIqJ,EAAmB,SAAUC,GAG/B,SAASD,EAAiBvD,EAASyD,GACjCtH,EAAeiG,KAAMmB,GAErB,IAAIG,EAAQ/F,EAA0ByE,MAAOmB,EAAiB7F,WAAa9C,OAAO+I,eAAeJ,IAAmBlJ,KAAK+H,KAAMpC,IAK/H,OAHA0D,EAAMjJ,KAAO,mBAEbG,OAAOsC,OAAOwG,EAAOD,GACdC,EAGT,OAbArG,EAASkG,EAAkBC,GAapBD,EAdc,CAerBjH,WAEEsH,EAAY,0DAEhB,SAASC,EAAc1E,GACrB,GAAKA,EAAWC,YAAhB,CAGA,IAAIiD,EAASlD,EAAWkD,OACpBhD,EAAQF,EAAWE,MACnBC,EAAUH,EAAWG,QACrBC,EAASJ,EAAWI,OAEpBuE,EAAY,GACZtE,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAA2CoB,EAAvCC,EAAYL,EAAOtE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CACvJ,IAAIK,EAAOF,EAAMxE,MAEb2E,EAAQhC,EAAc+B,EAAM,GAE5BE,EAAOD,EAAM,GACbE,EAAUF,EAAM,GAChBG,EAAeH,EAAM,GAErBI,EAAWD,EAAeA,EAAaE,WAAa,IACpDC,EAASE,EAAajB,EAAOU,GAC7BgE,EAAazE,EAAQe,OAAOD,GAAQD,WAEpCI,EAAQC,EAAcrB,EAAWY,KAAKU,OAAOV,IAE7CiE,EAAiBC,EAAW7D,GAEF,iBAAnB4D,EACTF,EAAUlF,KAAK,GAAG2B,KAASP,kBAAwBE,sBAA6B8D,qBAAkCD,OAElHD,EAAUlF,KAAK,GAAG2B,KAASP,kBAAwBE,gBAAuB6D,QAG9E,MAAOlF,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,GAKZ,OACS,IAAI6D,EADTlB,EAC0B,GAAGA,EAAO6B,UAAUJ,EAAUnD,KAAKiD,KAEnCE,EAAUnD,KAAKiD,GAFkC,CAAErE,YAMnF,SAAS0E,EAAW9I,GAClB,GAAc,OAAVA,EACF,MAAO,OAET,cAAeA,GACb,IAAK,SACH,MAAO,IAAIA,KAEb,IAAK,SACL,IAAK,SACL,IAAK,UACL,IAAK,YACH,OAAOgI,OAAOhI,GAChB,IAAK,WACH,OACF,QACE,GAAI6C,MAAMC,QAAQ9C,IAA+B,MAArBA,EAAMqC,aAAuBrC,EAAMqC,cAAgB5C,OAC7E,IACE,OAAOuJ,KAAKC,UAAUjJ,EAAO,KAAM,GACnC,MAAOkG,GACP,OAGJ,QAIN,SAASgD,EAAUnE,EAAUb,GAI3B,OAAOwE,EAHO3D,EAASZ,QAEEgF,SAASpE,EAAUb,IAe9C,SAASkF,EAAaC,EAAGC,GACvB,IAAIC,OAAS,EAEb,GAAIF,IAAMC,EACR,OAAO,EAOT,IAJIA,aAAaE,GAAaF,aAAaG,GAAiBH,aAAaI,GAA4BJ,aAAaK,MAChHL,EAAIA,EAAEM,UAGJP,aAAaG,EACfD,EAASF,EAAEQ,YAAYP,QAClB,GAAID,aAAaS,GAAgBT,aAAaI,GAAiBH,aAAaQ,EACjFP,EAASF,EAAEQ,YAAYP,OAClB,IAAID,aAAaU,GAAWV,aAAaW,GAAmBX,aAAaY,GAC9E,OAAO,EAEPV,EAASF,EAAEQ,YAAYP,GAGzB,OAAIA,aAAaS,EAGR,EAEAR,EASX,IAAIW,EAAO,WACT,SAASA,EAAK/F,GACZnD,EAAeiG,KAAMiD,GACrBjD,KAAKkD,SAAW,OAEhBlD,KAAK9C,QAAUA,EAsFjB,OAnFA/C,EAAY8I,EAAM,CAAC,CACjB5J,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,MACzC,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAIF,EAAa,IAAIgD,EAAWC,KAAK9C,QAASD,GAC1CG,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAAuEoB,EAAnEC,EAAYwC,KAAK7C,OAAOJ,EAAY,GAAIE,GAAOpE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CACvKG,EAAMxE,MAElB,OAAO,GAET,MAAO0D,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,GAKZ,OAAO,IAER,CACDjE,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAmC,IAA/BkF,EAAanC,KAAM/C,KAMxB,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAQ,IAET,CACD5D,IAAK,SACLN,MAAO,SAAgBkE,GACrB,IAAI0D,EAAQsB,EAAUjC,KAAM/C,GAC5B,GAAI0D,EAIF,KAHuC,mBAA5BwC,MAAMC,mBACfD,MAAMC,kBAAkBzC,EAAOX,KAAKqD,QAEhC1C,EAER,OAAO1D,IAOR,CACD5D,IAAK,SACLN,MAAO,WACL,OAAOiH,OAER,CACD3G,IAAK,WACLN,MAAO,WACL,MAAO,UAER,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,cAIdD,EA3FE,GA8FPH,EAAU,SAAUQ,GAGtB,SAASR,IACP,IAAIrF,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM8C,GAErB,IAAK,IAAIU,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOqF,EAAQxH,WAAa9C,OAAO+I,eAAeuB,IAAU7K,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,UAAmB3H,EAA0B+F,EAAlCiC,GA6B3M,OA1CAtI,EAAS6H,EAASQ,GAgBlBnJ,EAAY2I,EAAS,CAAC,CACpBzJ,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,MACzC,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAO,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAO,IAER,CACD5D,IAAK,WACLN,MAAO,WACL,MAAO,QAER,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,cAIdJ,EA3CK,CA4CZG,GAEEW,EAAgB,CAClBC,yBAA0B,wBAC1BC,iBAAkB,mBAClBC,gBAAiB,eACjBC,iBAAkB,gBAClBC,mBAAoB,wBACpBC,iBAAkB,gBAClBC,uBAAwB,qBACxBC,oBAAqB,mBACrBC,iBAAkB,wBAClBC,oBAAqB,qBACrBC,qBAAsB,+BACtBC,oBAAqB,mBACrBC,oBAAqB,4BACrBC,kBAAmB,8BACnBC,uBAAwB,0BACxBC,sBAAuB,4BACvBC,oBAAqB,mBACrBC,gBAAiB,eACjBC,kBAAmB,mBACnBC,kBAAmB,oBACnBC,mBAAoB,0BACpBC,kBAAmB,mBACnBC,kBAAmB,mBACnBC,gBAAiB,uBACjBC,gBAAiB,oBACjBC,iBAAkB,uBAClBC,qBAAsB,2BACtBC,eAAgB,4CAChBC,aAAc,qBACdC,gBAAiB,oCAGnB,SAASC,EAAgBtM,GACvB,IAAK,IAAImK,EAAOzI,UAAUR,OAAQqL,EAAShK,MAAM4H,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IAChGkC,EAAOlC,EAAO,GAAK3I,UAAU2I,GAG/B,IAAI9F,EAAUgG,EAAcvK,GAC5B,OAAIuM,EAAOrL,OAAS,EACXqD,EAAQiI,QAAQ,YAAY,SAAU3N,EAAGJ,GAC9C,OAAOiJ,OAAO6E,EAAO9N,OAGhB8F,EAIX,IAAIkI,EAAY,SAAUxC,GAGxB,SAASwC,IACP,IAAIrI,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM8F,GAErB,IAAK,IAAItC,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOqI,EAAUxK,WAAa9C,OAAO+I,eAAeuE,IAAY7N,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,YAAa5B,EAAMyE,MAAQ,GAAYxK,EAA0B+F,EAAlCiC,GA+EnO,OA5FAtI,EAAS6K,EAAWxC,GAgBpBnJ,EAAY2L,EAAW,CAAC,CACtBzM,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAI8I,EAAQ/F,KAAK+F,MACbxL,EAASwL,EAAMxL,OAGnB,GAFcyF,KAAK9C,QAEN8I,eAAe,QAAS/I,GAIrC,IAAK,IAAInF,EAAI,EAAGA,EAAIyC,EAAQzC,UACnBiO,EAAMjO,GAAGqF,OAAOJ,EAAYY,EAAKU,OAAOvG,GAAImF,EAAMnF,cAJnD,CAAC6F,EAAMgI,EAAgB,oBAAqB3F,QAOrD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAI8I,EAAQ/F,KAAK+F,MACbxL,EAASwL,EAAMxL,OAInB,IAHcyF,KAAK9C,QAGN8I,eAAe,QAAS/I,IAAUA,EAAM1C,OAASA,EAC5D,OAAO,EAET,IAAK,IAAIzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAE/B,IADWiO,EAAMjO,GACPmO,QAAQhJ,EAAMnF,IACtB,OAAO,EAGX,OAAO,IAER,CACDuB,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,KAAMA,aAAiB6I,GACrB,OAAQ,EAEV,IAAIC,EAAQ/F,KAAK+F,MACbG,EAAajJ,EAAM8I,MACvB,GAAIG,EAAW3L,OAASwL,EAAMxL,OAC5B,OAAQ,EAGV,IADA,IAAI4L,GAAY,EACPrO,EAAI,EAAGA,EAAIiO,EAAMxL,OAAQzC,IAAK,CACrC,IAAIwK,EAASH,EAAa4D,EAAMjO,GAAIoO,EAAWpO,IAC/C,GAAe,IAAXwK,EACF6D,GAAY,OACP,IAAgB,IAAZ7D,EACT,OAAQ,EAGZ,OAAIyD,EAAMxL,OAAS2L,EAAW3L,OACrB,EACE4L,EACF,EAEA,IAGV,CACD9M,IAAK,WACLN,MAAO,WACL,MAAO,IAAIiH,KAAK+F,MAAMxH,KAAK,WAE5B,CACDlF,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf6C,MAAO/F,KAAK+F,WAIXD,EA7FO,CA8Fd7C,GAEEmD,EAAY,SAAU9C,GAGxB,SAAS8C,IACP,IAAI3I,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMoG,GAErB,IAAK,IAAI5C,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO2I,EAAU9K,WAAa9C,OAAO+I,eAAe6E,IAAYnO,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,YAAqB3H,EAA0B+F,EAAlCiC,GAgGjN,OA7GAtI,EAASmL,EAAW9C,GAgBpBnJ,EAAYiM,EAAW,CAAC,CACtB/M,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GAGxC,GAFc+C,KAAK9C,QAEN8I,eAAe,QAAS/I,IAIrC,IAAIF,EAAWsJ,QAAQrG,KAAM/C,GAA7B,CAGAF,EAAWuJ,WAAWtG,KAAM/C,GAK5B,IAJA,IAAIsJ,EAAcvG,KAAKuG,YACnBhM,EAAS0C,EAAM1C,OAGVzC,EAAI,EAAGA,EAAIyC,EAAQzC,UACnByO,EAAYpJ,OAAOJ,EAAYY,EAAKU,OAAOvG,GAAImF,EAAMnF,IAE9DiF,EAAWyJ,SAASxG,KAAM/C,cAdlB,CAACU,EAAMgI,EAAgB,oBAAqB3F,QAgBrD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GAGtB,IAFc+C,KAAK9C,QAEN8I,eAAe,QAAS/I,GACnC,OAAO,EAET,GAAI4B,EAAkBmB,KAAM/C,GAC1B,OAAO,EAETiC,EAAqBc,KAAM/C,GAI3B,IAHA,IAAIsJ,EAAcvG,KAAKuG,YACnBhM,EAAS0C,EAAM1C,OAEVzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAC1B,IAAKyO,EAAYN,QAAQhJ,EAAMnF,IAE7B,OADAuH,EAAmBW,KAAM/C,IAClB,EAIX,OADAoC,EAAmBW,KAAM/C,IAClB,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,IAAIsJ,EAAcvG,KAAKuG,YAEvB,GAAItJ,aAAiB6I,EAAW,CAG9B,IAFA,IAAIC,EAAQ9I,EAAM8I,MAETjO,EAAI,EAAGA,EAAIiO,EAAMxL,OAAQzC,IAAK,CAErC,IAAgB,IADHqK,EAAaoE,EAAaR,EAAMjO,IAE3C,OAAQ,EAGZ,OAAO,EACF,OAAImF,aAAiBmJ,EACnBjE,EAAaoE,EAAatJ,EAAMsJ,cAE/B,IAGX,CACDlN,IAAK,WACLN,MAAO,WACL,IAAIwN,EAAcvG,KAAKuG,YAEvB,GAAIhH,EAAgBS,MAClB,MAAgC,iBAArBuG,EAAYlO,KACd,gBAAgBkO,EAAYlO,SAE5B,wBAGXoH,EAAmBO,MACnB,IAAIyG,EAAS,SAASF,EAAYxI,cAElC,OADA4B,EAAiBK,MACVyG,IAER,CACDpN,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfqD,YAAavG,KAAKuG,iBAIjBH,EA9GO,CA+GdnD,GAEEyD,EAAqB,SAAUpD,GAGjC,SAASoD,IACP,IAAIjJ,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM0G,GAErB,IAAK,IAAIlD,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOiJ,EAAmBpL,WAAa9C,OAAO+I,eAAemF,IAAqBzO,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,qBAA8B3H,EAA0B+F,EAAlCiC,GAsC5O,OAnDAtI,EAASyL,EAAoBpD,GAgB7BnJ,EAAYuM,EAAoB,CAAC,CAC/BrN,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACpCA,IAAU+C,KAAKjH,aACX,CAAC4E,EAAMgI,EAAgB3F,KAAKjH,MAAQ,kBAAoB,oBAAqBiH,SAGtF,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAOA,IAAU+C,KAAKjH,QAEvB,CACDM,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiByJ,GAAsBzJ,EAAMlE,QAAUiH,KAAKjH,MACvD,GAEC,IAGX,CACDM,IAAK,WACLN,MAAO,WACL,OAAOiH,KAAKjH,MAAQ,OAAS,UAE9B,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACL+F,KAAMkB,KAAKkD,SACXnK,MAAOiH,KAAKjH,WAIX2N,EApDgB,CAqDvBzD,GAEE0D,EAAc,SAAUrD,GAG1B,SAASqD,IACP,IAAIlJ,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM2G,GAErB,IAAK,IAAInD,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOkJ,EAAYrL,WAAa9C,OAAO+I,eAAeoF,IAAc1O,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,cAAuB3H,EAA0B+F,EAAlCiC,GAuCvN,OApDAtI,EAAS0L,EAAarD,GAgBtBnJ,EAAYwM,EAAa,CAAC,CACxBtN,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACnB,kBAAVA,SACH,CAACU,EAAMgI,EAAgB,sBAAuB3F,SAGvD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,MAAwB,kBAAVA,IAEf,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiByJ,EACZ,EACEzJ,aAAiB0J,EACnB,GAEC,IAGX,CACDtN,IAAK,WACLN,MAAO,WACL,MAAO,YAER,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,cAIdyD,EArDS,CAsDhB1D,GAEE2D,EAAY,SAAUtD,GAGxB,SAASsD,IACP,IAAInJ,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM4G,GAErB,IAAK,IAAIpD,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOmJ,EAAUtL,WAAa9C,OAAO+I,eAAeqF,IAAY3O,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,YAAqB3H,EAA0B+F,EAAlCiC,GAmCjN,OAhDAtI,EAAS2L,EAAWtD,GAgBpBnJ,EAAYyM,EAAW,CAAC,CACtBvN,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,QAClC,CAACU,EAAMgI,EAAgB,oBAAqB3F,QAEnD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAO,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiB2J,EACZ,GAEC,IAGX,CACDvN,IAAK,WACLN,MAAO,WACL,MAAO,UAER,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,cAId0D,EAjDO,CAkDd3D,GAEEF,EAAkB,SAAUO,GAG9B,SAASP,IACP,IAAItF,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM+C,GAErB,IAAK,IAAIS,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOsF,EAAgBzH,WAAa9C,OAAO+I,eAAewB,IAAkB9K,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,kBAA2B3H,EAA0B+F,EAAlCiC,GA6BnO,OA1CAtI,EAAS8H,EAAiBO,GAgB1BnJ,EAAY4I,EAAiB,CAAC,CAC5B1J,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,MACzC,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAO,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAO,IAER,CACD5D,IAAK,WACLN,MAAO,WACL,MAAO,MAER,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,cAIdH,EA3Ca,CA4CpBE,GAMER,EAA2B,SAAUa,GAGvC,SAASb,IACP,IAAIhF,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMyC,GAErB,IAAK,IAAIe,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOgF,EAAyBnH,WAAa9C,OAAO+I,eAAekB,IAA2BxK,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,2BAA4B5B,EAAMuF,cAAgB,GAAYtL,EAA0B+F,EAAlCiC,GAkFxR,OA/FAtI,EAASwH,EAA0Ba,GAgBnCnJ,EAAYsI,EAA0B,CAAC,CACrCpJ,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAI6J,EAAS9G,KAAK8G,OACdD,EAAgB7G,KAAK6G,oBAElBC,EAAO3J,OAAOwG,MAAMmD,EAAQ,CAAC/J,EAAYY,EAAMV,GAAOoB,OAAO1B,EAAkBkK,OAEvF,CACDxN,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAI6J,EAAS9G,KAAK8G,OACdD,EAAgB7G,KAAK6G,cAEzB,OAAOC,EAAOb,QAAQtC,MAAMmD,EAAQ,CAAC7J,GAAOoB,OAAO1B,EAAkBkK,OAEtE,CACDxN,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,IAAI8J,EAEJ,OAAQA,EAAU/G,KAAK8G,QAAQlE,YAAYe,MAAMoD,EAAS,CAAC9J,GAAOoB,OAAO1B,EAAkBqD,KAAK6G,mBAEjG,CACDxN,IAAK,cACLN,MAAO,SAAqBV,GAC1B,IAEMqF,EAFFsJ,EAAQhH,KAAK8G,OACjB,SAAIE,GAAsC,mBAAtBA,EAAMC,eAGhBvJ,EAAQsJ,GAAOC,YAAYtD,MAAMjG,EAAO,CAACrF,GAAMgG,OAAO1B,EAAkBqD,KAAK6G,mBAKxF,CACDxN,IAAK,cACLN,MAAO,SAAqBV,GAC1B,IAEM6O,EAFFF,EAAQhH,KAAK8G,OACjB,GAAIE,GAAsC,mBAAtBA,EAAMG,YAGxB,OAAQD,EAAQF,GAAOG,YAAYxD,MAAMuD,EAAO,CAAC7O,GAAMgG,OAAO1B,EAAkBqD,KAAK6G,mBAGxF,CACDxN,IAAK,SACLN,MAAO,WACL,IAAIqO,EAEJ,OAAQA,EAAWpH,KAAK8G,QAAQnE,OAAOgB,MAAMyD,EAAUzK,EAAkBqD,KAAK6G,kBAE/E,CACDxN,IAAK,WACLN,MAAO,WACL,IAAI+N,EAAS9G,KAAK8G,OACdD,EAAgB7G,KAAK6G,cACrBxO,EAAOyO,EAAOzO,KAElB,GAAIwO,EAActM,OAAQ,CAExB,IADA,IAAI8M,EAAQ,GACHvP,EAAI,EAAGA,EAAI+O,EAActM,OAAQzC,IAAK,CAC7C,IAAIwP,EAAeT,EAAc/O,GACjCuP,EAAM7K,KAAK8K,EAAavJ,YAE1B,MAAO,GAAG1F,KAAQgP,EAAM9I,KAAK,SAE7B,OAAOlG,IAGV,CACDgB,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf2D,cAAe7G,KAAK6G,mBAInBpE,EAhGsB,CAiG7BQ,GAKF,SAASsE,EAAevG,GAGtB,IAFA,IAAIwG,EAEKhE,EAAOzI,UAAUR,OAAQkN,EAAc7L,MAAM4H,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACrG+D,EAAY/D,EAAO,GAAK3I,UAAU2I,IAGnC8D,EAAuBxG,EAAQyG,aAAajL,KAAKmH,MAAM6D,EAAsB7K,EAAkB8K,IAQlG,SAAUC,EAAwB1G,EAASjE,EAAYY,GAIrD,IAHA,IAAI8J,EAAczG,EAAQyG,YACtBlN,EAASkN,EAAYlN,OAEhBoN,EAAQ5M,UAAUR,OAAQ0C,EAAQrB,MAAM+L,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACrG3K,EAAM2K,EAAQ,GAAK7M,UAAU6M,GAG/B,IAAK,IAAI9P,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAI+P,EAAaJ,EAAY3P,GACzBgQ,EAAYD,EAAWlE,WAAMxH,EAAWQ,EAAkBM,IACrC,iBAAd6K,SACH,CAACnK,EAAMmK,EAAW9H,QAQ9B,SAAS+H,EAAkB/G,GAIzB,IAHA,IAAIyG,EAAczG,EAAQyG,YACtBlN,EAASkN,EAAYlN,OAEhByN,EAAQjN,UAAUR,OAAQ0C,EAAQrB,MAAMoM,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACrGhL,EAAMgL,EAAQ,GAAKlN,UAAUkN,GAG/B,IAAK,IAAInQ,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAI+P,EAAaJ,EAAY3P,GAC7B,GAAqE,iBAA1D+P,EAAWlE,WAAMxH,EAAWQ,EAAkBM,IACvD,OAAO,EAGX,OAAO,EAGT,IAAIsF,EAAY,SAAUe,GAGxB,SAASf,IACP,IAAI9E,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMuC,GAErB,IAAK,IAAIiB,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO8E,EAAUjH,WAAa9C,OAAO+I,eAAegB,IAAYtK,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,YAAa5B,EAAMmG,YAAc,GAAYlM,EAA0B+F,EAAlCiC,GAmJzO,OAhKAtI,EAASsH,EAAWe,GAgBpBnJ,EAAYoI,EAAW,CAAC,CACtBlJ,IAAK,gBACLN,MAAO,WACL,IAAK,IAAI4O,EAAQ5M,UAAUR,OAAQkN,EAAc7L,MAAM+L,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACvFH,EAAYG,GAAS7M,UAAU6M,GAIjC,OADAL,EAAe5D,WAAMxH,EAAW,CAAC6D,MAAM3B,OAAO1B,EAAkB8K,KACzDzH,OAER,CACD3G,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAI6B,EAAOkB,KAAKlB,KAEZ9B,GAAY,EACZI,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAAyEoB,EAArEC,EAAYsB,EAAK3B,OAAOJ,EAAYY,EAAMV,GAAOpE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CACrL,IAAIuD,EAAQpD,EAAMxE,MAElBiE,GAAY,QACN2D,GAER,MAAOlE,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,GAKPN,UACI0K,EAAwB1H,KAAMjD,EAAYY,EAAMV,MAG1D,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GAGtB,QAFW+C,KAAKlB,KAENmH,QAAQhJ,MAEN8K,EAAkB/H,KAAM/C,KAMrC,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,IAAU+C,KACL,EACEA,KAAKkI,gBAEN,EAED/F,EAAanC,KAAKlB,KAAM7B,KAGlC,CACD5D,IAAK,QACLN,MAAO,WACL,IAAIsB,EAAS,IAAIoI,EAAyBzC,KAAK9C,SAC/C7C,EAAOyM,OAAS9G,KAEhB,IAAK,IAAIgI,EAAQjN,UAAUR,OAAQsM,EAAgBjL,MAAMoM,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACzFpB,EAAcoB,GAASlN,UAAUkN,GAInC,OADA5N,EAAOwM,cAAgBA,EAChBxM,IAOR,CACDhB,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKlB,KAAK6D,WAElB,CACDtJ,IAAK,cACLN,MAAO,SAAqBV,GAC1B,IAAI2O,EAAQhH,KAAK2C,SACjB,SAAIqE,GAAsC,mBAAtBA,EAAMC,cACjBD,EAAMC,YAAY5O,KAK5B,CACDgB,IAAK,cACLN,MAAO,SAAqBV,GAC1B,IAAI2O,EAAQhH,KAAK2C,SACjB,GAAIqE,GAAsC,mBAAtBA,EAAMG,YACxB,OAAOH,EAAMG,YAAY9O,KAG5B,CACDgB,IAAK,WACLN,MAAO,SAAkBoP,GACvB,IAAI9P,EAAO2H,KAAK3H,KACZyG,EAAOkB,KAAKlB,KAEhB,OAAIqJ,EACK,QAAQ9P,OAAUyG,EAAKf,cAEvB1F,IAGV,CACDgB,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf7K,KAAM2H,KAAK3H,KACXyG,KAAMkB,KAAKlB,QAGd,CACDzF,IAAK,aACLV,IAAK,WACH,OAAOqH,KAAKlB,KAAKsJ,aAElB,CACD/O,IAAK,iBACLV,IAAK,WACH,OAAOqH,KAAKyH,YAAYlN,OAAS,MAG9BgI,EAjKO,CAkKdU,GAEEoF,EAAiBxP,OAAO,YAUxB2J,EAAgB,SAAUc,GAG5B,SAASd,IACP,IAAI/E,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMwC,GAErB,IAAK,IAAIgB,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO+E,EAAclH,WAAa9C,OAAO+I,eAAeiB,IAAgBvK,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,gBAAiB5B,EAAM+G,GAAkB,KAAc9M,EAA0B+F,EAAlCiC,GAyJ3P,OAtKAtI,EAASuH,EAAec,GAmBxBnJ,EAAYqI,EAAe,CAAC,CAC1BnJ,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAIqL,EAAiBtI,KAAKuI,OAASvI,KAAKwI,QACpCC,EAAWzI,KAAKyI,SAChBvL,EAAU8C,KAAK9C,QAGnB,GAAIoL,aAA0BzF,GAAgByF,aAA0B/F,QAG/D+F,EAAenL,OAAOJ,EAAYY,EAAMV,QAE1C,GAAIwL,QAEFA,EAAStL,OAAOJ,EAAYY,EAAMV,OAFpC,CAIA,GAAIqL,EAAgB,CACzB,GAAgC,YAA5BA,EAAepF,UAAsD,oBAA5BoF,EAAepF,SAC1D,OAEA,IAAIlG,GAAY,EACZI,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAAmFoB,EAA/EC,EAAY8K,EAAenL,OAAOJ,EAAYY,EAAMV,GAAOpE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CAC/L,IAAIuD,EAAQpD,EAAMxE,MAElBiE,GAAY,QACN2D,GAER,MAAOlE,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,GAKZ,GAAIN,EACF,OAKNgD,KAAKyI,SAAWvL,EAAQe,OAAOhB,MAEhC,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAIqL,EAAiBtI,KAAKuI,OAASvI,KAAKwI,QACpCC,EAAWzI,KAAKyI,SAChBvL,EAAU8C,KAAK9C,QAEnB,GAAIoL,aAA0BzF,GAAgByF,aAA0B/F,EAGtE,OAAO+F,EAAerC,QAAQhJ,GACzB,GAAIwL,EACT,OAAOA,EAASxC,QAAQhJ,GACnB,GAAIqL,EAAgB,CACzB,GAAgC,YAA5BA,EAAepF,UAAsD,oBAA5BoF,EAAepF,SAC1D,OAAO,EACF,IAAKoF,EAAerC,QAAQhJ,GACjC,OAAO,EAKX,OADA+C,KAAKyI,SAAWvL,EAAQe,OAAOhB,IACxB,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,IAAIqL,EAAiBtI,KAAKuI,OAASvI,KAAKwI,QACpCC,EAAWzI,KAAKyI,SAEpB,OAAIxL,aAAiBuF,EAKZ,EACEiG,EACFtG,EAAasG,EAAUxL,GACrBqL,EACFnG,EAAamG,EAAgBrL,GAG7B,IAQV,CACD5D,IAAK,SACLN,MAAO,WACL,IAAIuP,EAAiBtI,KAAKuI,OAASvI,KAAKwI,QACpCC,EAAWzI,KAAKyI,SAEpB,OAAIA,EACKA,EAAS9F,SACP2F,EACFA,EAAe3F,SAEf3C,OAGV,CACD3G,IAAK,WACLN,MAAO,SAAkB2P,GACvB,IAAIC,EAAK3I,KAAK2I,GACVJ,EAAQvI,KAAKuI,MACbK,EAAc5I,KAAKwI,QAEvB,GAAIE,EAAa,CACf,GAAIE,EACF,MAAO,GAAGD,OAAQC,EAAY7K,aACzB,GAAIwK,EACT,MAAO,GAAGI,MAAOJ,EAAMxK,aAG3B,OAAO4K,IAER,CACDtP,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfyF,GAAI3I,KAAK2I,GACTJ,MAAOvI,KAAKuI,MACZE,SAAUzI,KAAKyI,cAIdjG,EAvKW,CAwKlBS,GAqBF,IAAIJ,EAAe,SAAUS,GAG3B,SAAST,IACP,IAAIpF,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM6C,GAErB,IAAK,IAAIW,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOoF,EAAavH,WAAa9C,OAAO+I,eAAesB,IAAe5K,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,eAAwB3H,EAA0B+F,EAAlCiC,GAkM1N,OA/MAtI,EAAS4H,EAAcS,GAgBvBnJ,EAAY0I,EAAc,CAAC,CACzBxJ,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAI4L,EAAgB7I,KAAK6I,cACrB3L,EAAU8C,KAAK9C,QACfuL,EAAWI,EAAcJ,SACzBF,EAAQM,EAAcN,MAG1B,GAAIA,aAAiB1F,QAGZ0F,EAAMpL,OAAOJ,EAAYY,EAAMV,OAHxC,CAMA,GAAIwL,EAAU,CAEZ,IAAIF,EA+BG,OAAIE,EAASxC,QAAQhJ,QAE1B,OAGA4L,EAAcJ,SAAWvL,EAAQ4L,MAAML,EAAUvL,EAAQe,OAAOhB,KAnChE,IAAI8L,GAAW,EACX3L,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAA0EoB,EAAtEC,EAAY+K,EAAMpL,OAAOJ,EAAYY,EAAMV,GAAOpE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CACtL,IAAIuD,EAAQpD,EAAMxE,YAEZ4H,EACNoI,GAAW,GAEb,MAAOtM,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,GAKZ,GAAIyL,EACF,YAUC,GAAIR,EAAO,CAChB,GAAuB,YAAnBA,EAAMrF,UAA6C,oBAAnBqF,EAAMrF,SACxC,OAEA,IAAI8F,GAAY,EACZ1I,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkBrE,EAEtB,IACE,IAAK,IAA2EsE,EAAvEC,EAAa6H,EAAMpL,OAAOJ,EAAYY,EAAMV,GAAOpE,OAAOiD,cAAuBwE,GAA8BG,EAASC,EAAWpE,QAAQC,MAAO+D,GAA6B,EAAM,CAC5L,IAAI2I,EAASxI,EAAO1H,YAEdkQ,EACND,GAAY,GAEd,MAAOvM,GACP8D,GAAqB,EACrBC,EAAkB/D,EAClB,QACA,KACO6D,GAA8BI,EAAWlC,QAC5CkC,EAAWlC,SAEb,QACA,GAAI+B,EACF,MAAMC,GAKZ,GAAIwI,EACF,OAKNH,EAAcJ,SAAWvL,EAAQe,OAAOhB,MAEzC,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAI4L,EAAgB7I,KAAK6I,cACrB3L,EAAU8C,KAAK9C,QACfuL,EAAWI,EAAcJ,SACzBF,EAAQM,EAAcN,MAG1B,GAAIA,aAAiB1F,EAGnB,OAAO0F,EAAMtC,QAAQhJ,GAEvB,GAAIwL,EAEF,QAAIF,IAAUA,EAAMtC,QAAQhJ,MAEjBwL,EAASxC,QAAQhJ,KAK1B4L,EAAcJ,SAAWvL,EAAQ4L,MAAML,EAAUvL,EAAQe,OAAOhB,MAHzD,GAMJ,GAAIsL,EAAO,CAChB,GAAuB,YAAnBA,EAAMrF,UAA6C,oBAAnBqF,EAAMrF,SACxC,OAAO,EACF,IAAKqF,EAAMtC,QAAQhJ,GACxB,OAAO,EAKX,OADA4L,EAAcJ,SAAWvL,EAAQe,OAAOhB,IACjC,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,IAAI4L,EAAgB7I,KAAK6I,cACrB3L,EAAU8C,KAAK9C,QACfuL,EAAWI,EAAcJ,SACzBF,EAAQM,EAAcN,MAE1B,GAAIA,aAAiB1F,EAGnB,OAAO0F,EAAM3F,YAAY3F,GAE3B,GAAIwL,EACF,OAAIF,IAAyC,IAAhCpG,EAAaoG,EAAOtL,IACvB,EAGK,IADFkF,EAAasG,EAAUxL,GAG3B,GAGT4L,EAAcJ,SAAWvL,EAAQ4L,MAAML,EAAUxL,GAC1C,GACF,GAAIsL,EAAO,CAChB,GAAuB,YAAnBA,EAAMrF,UAA6C,oBAAnBqF,EAAMrF,SACxC,OAAO,EAGT,IAAiB,IADHf,EAAaoG,EAAOtL,GAEhC,OAAQ,EAKZ,OADA4L,EAAcJ,SAAWxL,EAClB,IAOR,CACD5D,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAK6I,cAAclG,WAE3B,CACDtJ,IAAK,WACLN,MAAO,SAAkB2P,GACvB,OAAO1I,KAAK6I,cAAc9K,SAAS2K,KAEpC,CACDrP,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAK6I,cAAcK,aAGvBrG,EAhNU,CAiNjBI,GAEEkG,EAAwB,SAAU7F,GAGpC,SAAS6F,IACP,IAAI1L,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMmJ,GAErB,IAAK,IAAI3F,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO0L,EAAsB7N,WAAa9C,OAAO+I,eAAe4H,IAAwBlR,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,wBAAiC3H,EAA0B+F,EAAlCiC,GAgDrP,OA7DAtI,EAASkO,EAAuB7F,GAgBhCnJ,EAAYgP,EAAuB,CAAC,CAClC9P,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAI6B,EAAOkB,KAAKlB,WAETA,EAAK3B,OAAOJ,EAAYY,EAAMV,KAEtC,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GAGtB,OAFW+C,KAAKlB,KAEJmH,QAAQhJ,KAErB,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiBmM,GAAqBnM,aAAiBkM,EAClDhH,EAAanC,KAAKlB,KAAM7B,EAAM6B,OAGrB,IADHqD,EAAanC,KAAKlB,KAAM7B,IAE3B,EAED,IAIZ,CACD5D,IAAK,WACLN,MAAO,WACL,IAAI+F,EAAOkB,KAAKlB,KAEhB,MAAO,MAAMkB,KAAK3H,SAASyG,EAAKf,eAEjC,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf7K,KAAM2H,KAAK3H,KACXyG,KAAMkB,KAAKlB,UAIVqK,EA9DmB,CA+D1BlG,GAEEmG,EAAoB,SAAU9F,GAGhC,SAAS8F,IACP,IAAI3L,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMoJ,GAErB,IAAK,IAAI5F,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO2L,EAAkB9N,WAAa9C,OAAO+I,eAAe6H,IAAoBnR,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,oBAA6B3H,EAA0B+F,EAAlCiC,GAuDzO,OApEAtI,EAASmO,EAAmB9F,GAgB5BnJ,EAAYiP,EAAmB,CAAC,CAC9B/P,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAIoM,EAAWrJ,KAAKqJ,SAChBvK,EAAOkB,KAAKlB,KAEZuK,QAAsBlN,IAAVc,UAGP6B,EAAK3B,OAAOJ,EAAYY,EAAMV,MAGxC,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAIoM,EAAWrJ,KAAKqJ,SAChBvK,EAAOkB,KAAKlB,KAEhB,SAAIuK,QAAsBlN,IAAVc,IAGP6B,EAAKmH,QAAQhJ,KAGvB,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OACSkF,EAAanC,KAAKlB,KADvB7B,aAAiBmM,GAAqBnM,aAAiBkM,EAC1BlM,EAAM6B,KAEN7B,KAGlC,CACD5D,IAAK,WACLN,MAAO,WACL,IAAIsQ,EAAWrJ,KAAKqJ,SAChBvK,EAAOkB,KAAKlB,KAEhB,MAAO,GAAGkB,KAAK3H,OAAOgR,EAAW,IAAM,OAAOvK,EAAKf,eAEpD,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf7K,KAAM2H,KAAK3H,KACXgR,SAAUrJ,KAAKqJ,SACfvK,KAAMkB,KAAKlB,UAIVsK,EArEe,CAsEtBnG,GAEEqG,GAAqB,SAAUhG,GAGjC,SAASgG,IACP,IAAI7L,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMsJ,GAErB,IAAK,IAAI9F,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO6L,EAAmBhO,WAAa9C,OAAO+I,eAAe+H,IAAqBrR,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,qBAA8B3H,EAA0B+F,EAAlCiC,GAoD5O,OAjEAtI,EAASqO,EAAoBhG,GAgB7BnJ,EAAYmP,EAAoB,CAAC,CAC/BjQ,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAI6B,EAAOkB,KAAKlB,WAETA,EAAK3B,OAAOJ,EAAYY,EAAKU,OAAO,mBAAoBpB,KAEhE,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GAGtB,OAFW+C,KAAKlB,KAEJmH,QAAQhJ,KAErB,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiBqM,EACZnH,EAAanC,KAAKlB,KAAM7B,EAAM6B,OAGrB,IADHqD,EAAanC,KAAKlB,KAAM7B,IAE3B,EAED,IAIZ,CACD5D,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKlB,OAEb,CACDzF,IAAK,WACLN,MAAO,WAGL,OAFWiH,KAAKlB,KAEJf,aAEb,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfpE,KAAMkB,KAAKlB,UAIVwK,EAlEgB,CAmEvBrG,GAEEsG,GAAe1Q,OAAO,UACtB2Q,GAAqB3Q,OAAO,gBAC5B4Q,GAAuB5Q,OAAO,kBAC9B6Q,GAAsB7Q,OAAO,iBAC7B8Q,GAAgC9Q,OAAO,2BACvC+Q,GAAiB/Q,OAAO,YAGxBgR,GAAahR,OAAO,QACpBiR,GAAuBjR,OAAO,kBAC9BkR,GAA8BlR,OAAO,yBAErCmR,GAAe,SAAU1G,GAG3B,SAAS0G,IACP,IAAIvM,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMgK,GAErB,IAAK,IAAIxG,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOuM,EAAa1O,WAAa9C,OAAO+I,eAAeyI,IAAe/R,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,eAAgB5B,EAAMsE,OAAS,GAAYrK,EAA0B+F,EAAlCiC,GA4P7O,OAzQAtI,EAAS+O,EAAc1G,GAgBvBnJ,EAAY6P,EAAc,CAAC,CACzB3Q,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,GAAqB,mBAAVA,EAAX,CAIA,IAAIgN,EAAahN,EAAM4M,IACnBK,EAAalK,KAAKkK,WAClBtE,EAAS5F,KAAK4F,OAElB,GAAIqE,EAAY,CACd,IAAKA,EAAWrE,OACd,OAEF,IAAK,IAAI9N,EAAI,EAAGA,EAAI8N,EAAOrL,OAAQzC,IAAK,CACtC,IAAIqS,EAAQvE,EAAO9N,GACfsS,EAAkBH,EAAWrE,OAAO9N,IACnCsS,GAAoBD,EAAMd,WAEnBc,EAAME,YAAYD,UADtB,CAACzM,EAAMgI,EAAgB,sBAAuBwE,EAAM9R,KAAM8R,EAAMrL,KAAKf,YAAaiC,OAKvFkK,EAAWG,YAAYJ,EAAWC,mBAC/B,CAACvM,EAAMgI,EAAgB,oBAAqBuE,EAAWnM,YAAaiC,WAEvE,CAKL,IAJA,IAAI9C,EAAU8C,KAAK9C,QAIVb,EAAK,EAAGA,EAAKuJ,EAAOrL,OAAQ8B,IAAM,CAC5BuJ,EAAOvJ,GACbgO,YAAYnN,EAAQoN,OAE7BJ,EAAWG,YAAYnN,EAAQoN,kBAhCzB,CAAC3M,EAAMgI,EAAgB,uBAAwB3F,QAmCxD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,GAAqB,mBAAVA,EACT,OAAO,EAET,IAAIiN,EAAalK,KAAKkK,WAClBtE,EAAS5F,KAAK4F,OAEdqE,EAAahN,EAAM4M,IACvB,GAAII,EAAY,CACd,IAAKA,EAAWrE,OACd,OAAO,EAET,IAAK,IAAI9N,EAAI,EAAGA,EAAI8N,EAAOrL,OAAQzC,IAAK,CACtC,IAAIqS,EAAQvE,EAAO9N,GACfsS,EAAkBH,EAAWrE,OAAO9N,GACxC,IAAKsS,IAAoBD,EAAMd,SAC7B,OAAO,EACF,IAAKc,EAAME,YAAYD,GAC5B,OAAO,EAGX,QAAKF,EAAWG,YAAYJ,EAAWC,YASvC,IAJA,IAAIhN,EAAU8C,KAAK9C,QAIVqN,EAAM,EAAGA,EAAM3E,EAAOrL,OAAQgQ,IAAO,CAC9B3E,EAAO2E,GACbF,YAAYnN,EAAQoN,OAG9B,OADAJ,EAAWG,YAAYnN,EAAQoN,QACxB,IAGV,CACDjR,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,KAAMA,aAAiB+M,GACrB,OAAQ,EAEV,IAEI7D,GAAY,EACZqE,EAAmBrI,EAHNnC,KAAKkK,WACAjN,EAAMiN,YAG5B,IAA0B,IAAtBM,EACF,OAAQ,EACsB,IAArBA,IACTrE,GAAY,GAKd,IAFA,IAAIP,EAAS5F,KAAK4F,OACd6E,EAAcxN,EAAM2I,OACf9N,EAAI,EAAGA,EAAI8N,EAAOrL,OAAQzC,IAAK,CACtC,IAAIqS,EAAQvE,EAAO9N,GACf4S,EAAa5S,GAAK2S,EAAYlQ,OAAS0C,EAAM0N,KAAOF,EAAY3S,GACpE,GAAkB,MAAd4S,EACF,OAAQ,EAEV,IAAIpI,EAASH,EAAagI,EAAOO,GACjC,IAAgB,IAAZpI,EACF,OAAQ,EACY,IAAXA,IACT6D,GAAY,GAGhB,OAAOA,EAAY,EAAI,IAExB,CACD9M,IAAK,gBACLN,MAAO,WAML,IALA,IAAI6M,EAAS5F,KAAK4F,OACd+E,EAAO3K,KAAK2K,KAEZC,EAAehF,EAAOrL,OAEjBoN,EAAQ5M,UAAUR,OAAQkJ,EAAO7H,MAAM+L,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IAChFnE,EAAKmE,GAAS7M,UAAU6M,GAI1B,IADA,IAAIiD,EAAapH,EAAKlJ,OACbzC,EAAI,EAAGA,EAAI8S,EAAc9S,IAAK,CACrC,IAAIqS,EAAQvE,EAAO9N,GACnB,GAAIA,EAAI+S,GACN,IAAKV,EAAMlE,QAAQxC,EAAK3L,IACtB,OAAO,OAEJ,IAAKqS,EAAMlE,aAAQ9J,GACxB,OAAO,EAIX,GAAI0O,EAAaD,GAAgBD,EAC/B,IAAK,IAAIG,EAAMF,EAAcE,EAAMD,EAAYC,IAC7C,IAAKH,EAAK1E,QAAQxC,EAAKqH,IACrB,OAAO,EAKb,OAAO,IAER,CACDzR,IAAK,gBACLN,MAAO,SAAuBkE,GAC5B,OAAO+C,KAAKkK,WAAWjE,QAAQhJ,KAEhC,CACD5D,IAAK,eACLN,MAAO,WAML,IALA,IAAI6M,EAAS5F,KAAK4F,OACd+E,EAAO3K,KAAK2K,KAEZC,EAAehF,EAAOrL,OAEjByN,EAAQjN,UAAUR,OAAQkJ,EAAO7H,MAAMoM,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IAChFxE,EAAKwE,GAASlN,UAAUkN,GAI1B,IADA,IAAI4C,EAAapH,EAAKlJ,OACbzC,EAAI,EAAGA,EAAI8S,EAAc9S,IAAK,CACrC,IAAIqS,EAAQvE,EAAO9N,GACfA,EAAI+S,EACNV,EAAM9G,OAAOI,EAAK3L,IAElBqS,EAAM9G,YAAOlH,GAIjB,GAAI0O,EAAaD,GAAgBD,EAC/B,IAAK,IAAII,EAAMH,EAAcG,EAAMF,EAAYE,IAC7CJ,EAAKtH,OAAOI,EAAKsH,IAIrB,OAAOtH,IAER,CACDpK,IAAK,eACLN,MAAO,SAAsBkE,GAE3B,OADA+C,KAAKkK,WAAW7G,OAAOpG,GAChBA,IAER,CACD5D,IAAK,SACLN,MAAO,WAOL,IANA,IAAI6M,EAAS5F,KAAK4F,OACd+E,EAAO3K,KAAK2K,KACZzN,EAAU8C,KAAK9C,QAEf0N,EAAehF,EAAOrL,OAEjByQ,EAAQjQ,UAAUR,OAAQkJ,EAAO7H,MAAMoP,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IAChFxH,EAAKwH,GAASlQ,UAAUkQ,GAI1B,IADA,IAAIJ,EAAapH,EAAKlJ,OACbzC,EAAI,EAAGA,EAAI8S,EAAc9S,IAAK,CACrC,IAAIqS,EAAQvE,EAAO9N,GACnB,GAAIA,EAAI+S,GACN,IAAKV,EAAME,YAAY5G,EAAK3L,IAC1B,OAAOoF,EAAQgO,aAEZ,IAAKf,EAAMlE,aAAQ9J,GACxB,OAAOe,EAAQgO,QAInB,GAAIL,EAAaD,GAAgBD,EAC/B,IAAK,IAAIQ,EAAMP,EAAcO,EAAMN,EAAYM,IAC7C,IAAKR,EAAKN,YAAY5G,EAAK0H,IACzB,OAAOjO,EAAQgO,QAKrB,OAAOlL,KAAKkK,WAAWpL,OAExB,CACDzF,IAAK,WACLN,MAAO,WAML,IALA,IAAI6M,EAAS5F,KAAK4F,OACd+E,EAAO3K,KAAK2K,KACZT,EAAalK,KAAKkK,WAElBzG,EAAO,GACF3L,EAAI,EAAGA,EAAI8N,EAAOrL,OAAQzC,IACjC2L,EAAKjH,KAAKoJ,EAAO9N,GAAGiG,YAKtB,OAHI4M,GACFlH,EAAKjH,KAAKmO,EAAK5M,YAEV,IAAI0F,EAAKlF,KAAK,aAAa2L,EAAWnM,eAE9C,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf0C,OAAQ5F,KAAK4F,OACb+E,KAAM3K,KAAK2K,KACXT,WAAYlK,KAAKkK,gBAIhBF,EA1QU,CA2QjB/G,GAEEmI,GAAgB,SAAU9H,GAG5B,SAAS8H,IACP,IAAI3N,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMoL,GAErB,IAAK,IAAI5H,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO2N,EAAc9P,WAAa9C,OAAO+I,eAAe6J,IAAgBnT,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,gBAAyB3H,EAA0B+F,EAAlCiC,GAqG7N,OAlHAtI,EAASmQ,EAAe9H,GAgBxBnJ,EAAYiR,EAAe,CAAC,CAC1B/R,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GAC1BA,GAA+B,mBAAfA,EAAMX,MAA+C,mBAAjBW,EAAMuB,QAAgD,mBAAhBvB,EAAMoO,aAEtG,CAAC1N,EAAMgI,EAAgB,wBAAyB3F,SAGzD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAOA,GAA+B,mBAAfA,EAAMX,MAA+C,mBAAjBW,EAAMuB,QAAgD,mBAAhBvB,EAAMoO,QAExG,CACDhS,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,KAAMA,aAAiBmO,GAErB,OAAiB,IADHjJ,EAAanC,KAAKsL,UAAWrO,IAEjC,EAED,EAGX,IAAIkJ,GAAY,EACZ7D,EAASH,EAAanC,KAAKsL,UAAWrO,EAAMqO,WAChD,OAAgB,IAAZhJ,GACM,GACY,IAAXA,IACT6D,GAAY,IAIE,KADhB7D,EAASH,EAAanC,KAAKkK,WAAYjN,EAAMiN,cAEnC,GACY,IAAX5H,IACT6D,GAAY,IAIE,KADhB7D,EAASH,EAAanC,KAAKuL,SAAUtO,EAAMsO,YAEjC,GACY,IAAXjJ,IACT6D,GAAY,GAGPA,EAAY,EAAI,OAExB,CACD9M,IAAK,eACLN,MAAO,SAAsBkE,GAC3B,OAAO+C,KAAKsL,UAAUrF,QAAQhJ,KAE/B,CACD5D,IAAK,gBACLN,MAAO,SAAuBkE,GAC5B,OAAO+C,KAAKkK,WAAWjE,QAAQhJ,KAEhC,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAO+C,KAAKuL,SAAStF,QAAQhJ,KAE9B,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAO+C,KAAKsL,UAAUjI,OAAOpG,KAE9B,CACD5D,IAAK,eACLN,MAAO,SAAsBkE,GAC3B,OAAO+C,KAAKkK,WAAW7G,OAAOpG,KAE/B,CACD5D,IAAK,aACLN,MAAO,SAAoBkE,GACzB,OAAO+C,KAAKuL,SAASlI,OAAOpG,KAE7B,CACD5D,IAAK,WACLN,MAAO,WACL,IAAIuS,EAAYtL,KAAKsL,UACjBpB,EAAalK,KAAKkK,WAClBqB,EAAWvL,KAAKuL,SAEpB,MAAO,aAAaD,EAAUvN,eAAemM,EAAWnM,eAAewN,EAASxN,eAEjF,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfoI,UAAWtL,KAAKsL,UAChBpB,WAAYlK,KAAKkK,WACjBqB,SAAUvL,KAAKuL,cAIdH,EAnHW,CAoHlBnI,GAEEuI,GAAkB,IAAI5M,QAEtB6M,GAAkB,SAAUnI,GAG9B,SAASmI,IACP,IAAIhO,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMyL,GAErB,IAAK,IAAIjI,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOgO,EAAgBnQ,WAAa9C,OAAO+I,eAAekK,IAAkBxT,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,kBAA2B3H,EAA0B+F,EAAlCiC,GAwEnO,OArFAtI,EAASwQ,EAAiBnI,GAgB1BnJ,EAAYsR,EAAiB,CAAC,CAC5BpS,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,MACzC,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAIC,EAAU8C,KAAK9C,QACf7E,EAAO2H,KAAK3H,KAMhB,OAJKmT,GAAgBhM,IAAIQ,QACvB9C,EAAQwO,mBAAmB,mBAAmBrT,mCAC9CmT,GAAgB9L,IAAIM,QAEf,IAER,CACD3G,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,IAAIC,EAAU8C,KAAK9C,QACf7E,EAAO2H,KAAK3H,KAMhB,OAJKmT,GAAgBhM,IAAIQ,QACvB9C,EAAQwO,mBAAmB,mBAAmBrT,uCAC9CmT,GAAgB9L,IAAIM,QAEd,IAET,CACD3G,IAAK,sBACLN,MAAO,SAA6BkE,GAClC,MAAO,KAER,CACD5D,IAAK,QACLN,MAAO,WACL,IAAIsB,EAAS,IAAIoI,EAAyBzC,KAAK9C,SAC/C7C,EAAOyM,OAAS9G,KAEhB,IAAK,IAAI2H,EAAQ5M,UAAUR,OAAQsM,EAAgBjL,MAAM+L,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACzFf,EAAce,GAAS7M,UAAU6M,GAInC,OADAvN,EAAOwM,cAAgBA,EAChBxM,IAOR,CACDhB,IAAK,SACLN,MAAO,WACL,OAAOiH,OAER,CACD3G,IAAK,WACLN,MAAO,WACL,OAAOiH,KAAK3H,OAEb,CACDgB,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf7K,KAAM2H,KAAK3H,UAIVoT,EAtFa,CAuFpBxI,GAEE0I,GAAc,SAAUC,GAG1B,SAASD,IACP,IAAIlO,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM2L,GAErB,IAAK,IAAInI,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOkO,EAAYrQ,WAAa9C,OAAO+I,eAAeoK,IAAc1T,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,cAAuB3H,EAA0B+F,EAAlCiC,GA8DvN,OA3EAtI,EAAS0Q,EAAaC,GAgBtBzR,EAAYwR,EAAa,CAAC,CACxBtS,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAI5E,EAAO2H,KAAK3H,KAGV4E,aAFK+C,KAAK6L,YAGR,CAAClO,EAAMgI,EAAgB,wBAAyBtN,GAAO2H,SAGhE,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GAGtB,OAAOA,aAFI+C,KAAK6L,OAIjB,CACDxS,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,IAAIC,EAAU8C,KAAK9C,QACf2O,EAAO7L,KAAK6L,KAEZ5B,EAAa/M,EAAQ4O,cAAcD,GACvC,GAAI5B,EAAY,CACd,IAAK,IAAItC,EAAQ5M,UAAUR,OAAQsM,EAAgBjL,MAAM+L,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7Gf,EAAce,EAAQ,GAAK7M,UAAU6M,GAGvC,IAAI9J,EAAWmM,EAAWtH,OAAOgB,MAAMsG,EAAYtN,EAAkBkK,IACrE,OAAO1E,EAAalF,EAAOa,GACtB,OAAIb,aAAiB0O,IAAgB1O,EAAM4O,OAASA,GAAQA,GAAQA,EAAKE,cAAc9O,EAAM4O,OAC3F,GAEC,IAGX,CACDxS,IAAK,SACLN,MAAO,WACL,IAAImE,EAAU8C,KAAK9C,QACf2O,EAAO7L,KAAK6L,KAEhB,GAAoB,mBAATA,EACT,OAAO7L,KAET,IAAIiK,EAAa/M,EAAQ4O,cAAcD,GACvC,OAAkB,MAAd5B,EACKA,EAAWtH,OAAOgB,MAAMsG,EAAYlP,WAEpCiF,OAGV,CACD3G,IAAK,sBACLN,MAAO,SAA6BkE,GAClC,MAAO,OAGJ0O,EA5ES,CA6EhBF,IAEF,SAASO,GAAU/O,EAAOW,GACxB,IAAKX,EAAO,CACV,IAAI0D,EAAQ,IAAIwC,MAAMvF,GAKtB,MAJA+C,EAAMtI,KAAO,qBAC0B,mBAA5B8K,MAAMC,mBACfD,MAAMC,kBAAkBzC,EAAOqL,IAE3BrL,GAIV,IAAIsL,GAAkB,SAAU3I,GAG9B,SAAS2I,IACP,IAAIxO,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMiM,GAErB,IAAK,IAAIzI,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOwO,EAAgB3Q,WAAa9C,OAAO+I,eAAe0K,IAAkBhU,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,kBAA2B3H,EAA0B+F,EAAlCiC,GAqCnO,OAlDAtI,EAASgR,EAAiB3I,GAgB1BnJ,EAAY8R,EAAiB,CAAC,CAC5B5S,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GAC1B,OAAVA,SACI,CAACU,EAAMgI,EAAgB,mBAAoB3F,SAGpD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAiB,OAAVA,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiBgP,EACZ,GAEC,IAGX,CACD5S,IAAK,WACLN,MAAO,WACL,MAAO,SAER,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,cAId+I,EAnDa,CAoDpBhJ,GAEEiJ,GAAW,SAAU5I,GAGvB,SAAS4I,IACP,IAAIzO,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMkM,GAErB,IAAK,IAAI1I,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOyO,EAAS5Q,WAAa9C,OAAO+I,eAAe2K,IAAWjU,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,WAAoB3H,EAA0B+F,EAAlCiC,GAqC9M,OAlDAtI,EAASiR,EAAU5I,GAgBnBnJ,EAAY+R,EAAU,CAAC,CACrB7S,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,QAC1Bd,IAAVc,SACI,CAACU,EAAMgI,EAAgB,mBAAoB3F,SAGpD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,YAAiBd,IAAVc,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiBiP,EACZ,GAEC,IAGX,CACD7S,IAAK,WACLN,MAAO,WACL,MAAO,SAER,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,cAIdgJ,EAnDM,CAoDbjJ,GAEEkJ,GAAe,SAAU7I,GAG3B,SAAS6I,IACP,IAAI1O,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMmM,GAErB,IAAK,IAAI3I,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO0O,EAAa7Q,WAAa9C,OAAO+I,eAAe4K,IAAelU,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,eAAwB3H,EAA0B+F,EAAlCiC,GA2D1N,OAxEAtI,EAASkR,EAAc7I,GAgBvBnJ,EAAYgS,EAAc,CAAC,CACzB9S,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GAC3B,MAATA,UACK+C,KAAKlB,KAAK3B,OAAOJ,EAAYY,EAAMV,MAG7C,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAa,MAATA,GAGK+C,KAAKlB,KAAKmH,QAAQhJ,KAG5B,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiBgP,IAAmBhP,aAAiBiP,GAChD,EACEjP,aAAiBkP,EACnBhK,EAAanC,KAAKlB,KAAM7B,EAAM6B,OAGrB,IADHqD,EAAanC,KAAKlB,KAAM7B,IAE3B,EAED,IASZ,CACD5D,IAAK,SACLN,MAAO,WACL,OAAOiH,OAER,CACD3G,IAAK,WACLN,MAAO,WACL,MAAO,KAAKiH,KAAKlB,KAAKf,eAEvB,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfpE,KAAMkB,KAAKlB,UAIVqN,EAzEU,CA0EjBlJ,GAEEmJ,GAAqB,SAAU9I,GAGjC,SAAS8I,IACP,IAAI3O,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMoM,GAErB,IAAK,IAAI5I,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO2O,EAAmB9Q,WAAa9C,OAAO+I,eAAe6K,IAAqBnU,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,qBAAsB5B,EAAc,QAAI,EAAOA,EAAMmG,YAAc,GAAYlM,EAA0B+F,EAAlCiC,GAuL7R,OApMAtI,EAASmR,EAAoB9I,GAkB7BnJ,EAAYiS,EAAoB,CAAC,CAC/B/S,IAAK,gBACLN,MAAO,WACL,IAAK,IAAI4O,EAAQ5M,UAAUR,OAAQkN,EAAc7L,MAAM+L,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACvFH,EAAYG,GAAS7M,UAAU6M,GAIjC,OADAL,EAAe5D,WAAMxH,EAAW,CAAC6D,MAAM3B,OAAO1B,EAAkB8K,KACzDzH,OAOR,CACD3G,IAAK,aACLN,MAAO,WACL,OAAOiH,KAAKjH,iBAAiBoT,KAO9B,CACD9S,IAAK,WACLN,MAAO,SAAkBkE,GAKvB,OAHU+C,KAAK3G,OACA2G,KAAKqM,OAEMpP,EAAM7B,YAAc6B,KAAW,IAE1D,CACD5D,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GAExC,IAAIoM,EAAWrJ,KAAKqJ,SAChBhQ,EAAM2G,KAAK3G,IACXN,EAAQiH,KAAKjH,MAGbsB,OAAS,EACTiS,OAAa,EACjB,GAJetM,KAAKqM,OAIN,CACZ,GAAc,OAAVpP,GAAmC,iBAAVA,GAAuC,mBAAVA,EAExD,iBADM,CAACU,EAAMgI,EAAgB,qBAAsB3F,OAIrD,GADAsM,EAAa3O,EAAKU,OAAO,eACQ,mBAAtBpB,EAAM7B,YAIf,YAHKiO,SACG,CAACiD,EAAY3G,EAAgB,uBAAwB3F,QAI/DsM,EAAW9P,KAAKnD,GAChBgB,EAAS4C,EAAM7B,YAAY/B,QAE3BgB,EAAS4C,EAAM5D,GACfiT,EAAa3O,EAAKU,OAAOhF,GAE3B,IAAIgQ,QAAuBlN,IAAX9B,EAGhB,IAAI2F,KAAKuM,cAAiBvM,KAAKwM,SAASvP,GAAxC,CAIA,IAAID,GAAY,EACZI,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAAiFoB,EAA7EC,EAAYzE,EAAMoE,OAAOJ,EAAYuP,EAAYjS,GAAQxB,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CAC7L,IAAIuD,EAAQpD,EAAMxE,MAElBiE,GAAY,QACN2D,GAER,MAAOlE,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,GAKPN,UACI0K,EAAwB1H,KAAMjD,EAAYuP,EAAYjS,cA/BvD,CAACiS,EAAY3G,EAAgB,wBAAyB3F,QAkC/D,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GAEtB,IAAIoM,EAAWrJ,KAAKqJ,SAChBhQ,EAAM2G,KAAK3G,IACXN,EAAQiH,KAAKjH,MAGbsB,OAAS,EACb,GAHe2F,KAAKqM,OAGN,CACZ,GAAc,OAAVpP,GAAmC,iBAAVA,GAAuC,mBAAVA,EACxD,OAAO,EAET,GAAiC,mBAAtBA,EAAM7B,YACf,QAAOiO,EAEThP,EAAS4C,EAAM7B,YAAY/B,QAE3BgB,EAAS4C,EAAM5D,GAGjB,SAAIgQ,QAAuBlN,IAAX9B,MAIZ2F,KAAKuM,eAAiBvM,KAAKwM,SAASvP,QAInClE,EAAMkN,QAAQ5L,IAGV0N,EAAkB/H,KAAM3F,MAGlC,CACDhB,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAMA,aAAiBmP,EAEZnP,EAAM5D,MAAQ2G,KAAK3G,KACpB,EAED8I,EAAanC,KAAKjH,MAAOkE,EAAMlE,QAJ9B,IAOX,CACDM,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKjH,MAAM4J,WAEnB,CACDtJ,IAAK,WACLN,MAAO,WACL,IAAIM,EAAM2G,KAAK3G,IAKf,MAHmB,iBAARA,IACTA,EAAM,IAAIA,EAAI0E,eAEZiC,KAAKqM,OACA,UAAUhT,IAAM2G,KAAKqJ,SAAW,IAAM,OAAOrJ,KAAKjH,MAAMgF,cAExD,GAAG1E,IAAM2G,KAAKqJ,SAAW,IAAM,OAAOrJ,KAAKjH,MAAMgF,gBAG3D,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf7J,IAAK2G,KAAK3G,IACVN,MAAOiH,KAAKjH,MACZsQ,SAAUrJ,KAAKqJ,cAId+C,EArMgB,CAsMvBnJ,GAEEwJ,GAAoB,SAAUnJ,GAGhC,SAASmJ,IACP,IAAIhP,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMyM,GAErB,IAAK,IAAIjJ,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOgP,EAAkBnR,WAAa9C,OAAO+I,eAAekL,IAAoBxU,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,oBAA6B3H,EAA0B+F,EAAlCiC,GAkFzO,OA/FAtI,EAASwR,EAAmBnJ,GAgB5BnJ,EAAYsS,EAAmB,CAAC,CAC9BpT,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMtE,EAAKN,GAEnB,eAAtBiH,KAAK3G,IAAI6J,UAAmD,uBAAtBlD,KAAK3G,IAAI6J,WACjD7J,GAAOA,SAGF2G,KAAK3G,IAAI8D,OAAOJ,EAAYY,EAAKU,OAAO,WAAYhF,SACpD2G,KAAKjH,MAAMoE,OAAOJ,EAAYY,EAAKU,OAAOhF,GAAMN,KAExD,CACDM,IAAK,UACLN,MAAO,SAAiBA,GACtB,OAAOiH,KAAKjH,MAAMkN,QAAQlN,KAE3B,CACDM,IAAK,aACLN,MAAO,SAAoBM,GAKzB,MAH0B,eAAtB2G,KAAK3G,IAAI6J,UAAmD,uBAAtBlD,KAAK3G,IAAI6J,WACjD7J,GAAOA,GAEF2G,KAAK3G,IAAI4M,QAAQ5M,KAEzB,CACDA,IAAK,eACLN,MAAO,SAAsBA,GAC3B,OAAOiH,KAAKjH,MAAMkN,QAAQlN,KAE3B,CACDM,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,GAAIA,aAAiBmP,GACnB,OAAKpM,KAAK3G,IAAI4M,QAAQhJ,EAAM5D,KAGnB8I,EAAanC,KAAKjH,MAAOkE,EAAMlE,QAF9B,EAIL,KAAMkE,aAAiBwP,GAC5B,OAAQ,EAGV,IAAIC,EAAYvK,EAAanC,KAAK3G,IAAK4D,EAAM5D,KAC7C,IAAmB,IAAfqT,EACF,OAAQ,EAEV,IAAIC,EAAcxK,EAAanC,KAAKjH,MAAOkE,EAAMlE,OACjD,OAAqB,IAAjB4T,GACM,EAGQ,IAAdD,GAAmC,IAAhBC,EACd,EAEA,IAGV,CACDtT,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKjH,MAAM4J,WAEnB,CACDtJ,IAAK,WACLN,MAAO,WACL,MAAO,IAAIiH,KAAK2I,OAAO3I,KAAK3G,IAAI0E,gBAAgBiC,KAAKjH,MAAMgF,gBAE5D,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfyF,GAAI3I,KAAK2I,GACTtP,IAAK2G,KAAK3G,IACVN,MAAOiH,KAAKjH,WAIX0T,EAhGe,CAiGtBxJ,GAEE2J,GAAyB,SAAUtJ,GAGrC,SAASsJ,IACP,IAAInP,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM4M,GAErB,IAAK,IAAIpJ,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOmP,EAAuBtR,WAAa9C,OAAO+I,eAAeqL,IAAyB3U,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,yBAA0B5B,EAAc,QAAI,EAAe/F,EAA0B+F,EAAlCiC,GAoFjR,OAjGAtI,EAAS2R,EAAwBtJ,GAkBjCnJ,EAAYyS,EAAwB,CAAC,CACnCvT,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GAExC,IAAIlE,EAAQiH,KAAKjH,MAIbsB,OAAS,EACTiS,OAAa,EACjB,GALetM,KAAKqM,OAKN,CACZ,GAAc,OAAVpP,GAAmC,iBAAVA,GAAuC,mBAAVA,EAExD,iBADM,CAACU,EAAMgI,EAAgB,qBAAsB3F,OAIrD,GADAsM,EAAa3O,EAAKU,OAAO,eACQ,mBAAtBpB,EAAM7B,YAEf,iBADM,CAACkR,EAAY3G,EAAgB,uBAAwB3F,OAG7D3F,EAAS4C,EAAM7B,iBAEff,EAAS4C,EACTqP,EAAa3O,QAER5E,EAAMoE,OAAOJ,EAAYuP,EAAYjS,KAE7C,CACDhB,IAAK,UACLN,MAAO,SAAiBkE,GAEtB,IAAIlE,EAAQiH,KAAKjH,MAGbsB,OAAS,EACb,GAHe2F,KAAKqM,OAGN,CACZ,GAAc,OAAVpP,GAAmC,iBAAVA,GAAuC,mBAAVA,EACxD,OAAO,EAET,GAAiC,mBAAtBA,EAAM7B,YACf,OAAO,EAETf,EAAS4C,EAAM7B,iBAEff,EAAS4C,EAEX,OAAOlE,EAAMkN,QAAQ5L,KAEtB,CACDhB,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAMA,aAAiB2P,EAGhBzK,EAAanC,KAAKjH,MAAOkE,EAAMlE,QAF5B,IAIX,CACDM,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKjH,MAAM4J,WAEnB,CACDtJ,IAAK,WACLN,MAAO,WACL,OAAIiH,KAAKqM,OACA,UAAUrM,KAAKjH,MAAMgF,cAErBiC,KAAKjH,MAAMgF,aAGrB,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfnK,MAAOiH,KAAKjH,WAIX6T,EAlGoB,CAmG3B3J,GAEE4J,GAAc,SAAUvJ,GAG1B,SAASuJ,IAEP,OADA9S,EAAeiG,KAAM6M,GACdtR,EAA0ByE,MAAO6M,EAAYvR,WAAa9C,OAAO+I,eAAesL,IAAclJ,MAAM3D,KAAMjF,YAGnH,OAPAE,EAAS4R,EAAavJ,GAOfuJ,EARS,CAShB5J,GAEE6J,GAAiB,SAAUC,GAG7B,SAASD,IACP,IAAIrP,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM8M,GAErB,IAAK,IAAItJ,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOqP,EAAexR,WAAa9C,OAAO+I,eAAeuL,IAAiB7U,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,iBAAkB5B,EAAMmG,YAAc,GAAYlM,EAA0B+F,EAAlCiC,GA8ExP,OA3FAtI,EAAS6R,EAAgBC,GAgBzB5S,EAAY2S,EAAgB,CAAC,CAC3BzT,IAAK,gBACLN,MAAO,WACL,IAAK,IAAI4O,EAAQ5M,UAAUR,OAAQkN,EAAc7L,MAAM+L,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACvFH,EAAYG,GAAS7M,UAAU6M,GAIjC,OADAL,EAAe5D,WAAMxH,EAAW,CAAC6D,MAAM3B,OAAO1B,EAAkB8K,KACzDzH,OAER,CACD3G,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAI6B,EAAOkB,KAAKlB,KAEZ9B,GAAY,EACZI,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAAyEoB,EAArEC,EAAYsB,EAAK3B,OAAOJ,EAAYY,EAAMV,GAAOpE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CACrL,IAAIuD,EAAQpD,EAAMxE,MAElBiE,GAAY,QACN2D,GAER,MAAOlE,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,GAKPN,UACI0K,EAAwB1H,KAAMjD,EAAYY,EAAMV,MAG1D,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GAGtB,QAFW+C,KAAKlB,KAENmH,QAAQhJ,MAEN8K,EAAkB/H,KAAM/C,KAMrC,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAKlB,KAAM7B,KAEhC,CACD5D,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKlB,KAAK6D,WAElB,CACDtJ,IAAK,WACLN,MAAO,WACL,MAAO,eAAeiH,KAAK3H,SAAS2H,KAAKlB,KAAKf,kBAG3C+O,EA5FY,CA6FnBD,IAEEG,GAAkB,SAAUD,GAG9B,SAASC,IACP,IAAIvP,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMgN,GAErB,IAAK,IAAIxJ,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOuP,EAAgB1R,WAAa9C,OAAO+I,eAAeyL,IAAkB/U,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,kBAA2B3H,EAA0B+F,EAAlCiC,GA8EnO,OA3FAtI,EAAS+R,EAAiBD,GAgB1B5S,EAAY6S,EAAiB,CAAC,CAC5B3T,IAAK,gBACLN,MAAO,WACL,IAAIkU,EAGJ,OADCA,EAAajN,KAAKkN,WAAWC,cAAcxJ,MAAMsJ,EAAYlS,WACvDiF,OAER,CACD3G,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,SACjC+C,KAAKkN,UAAU/P,OAAOJ,EAAYY,EAAMV,KAEhD,CACD5D,IAAK,QACLN,MAAO,WACL,IAAIqU,EAEJ,OAAQA,EAAcpN,KAAKkN,WAAWvJ,MAAMA,MAAMyJ,EAAarS,aAEhE,CACD1B,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAO+C,KAAKkN,UAAUjH,QAAQhJ,KAE/B,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAKkN,UAAWjQ,KAErC,CACD5D,IAAK,cACLN,MAAO,SAAqBV,GAG1B,IAFA,IAAIgV,EAEK1F,EAAQ5M,UAAUR,OAAQsM,EAAgBjL,MAAM+L,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7Gf,EAAce,EAAQ,GAAK7M,UAAU6M,GAGvC,OAAQyF,EAAcrN,KAAKkN,WAAWjG,YAAYtD,MAAM0J,EAAa,CAAChV,GAAMgG,OAAO1B,EAAkBkK,OAEtG,CACDxN,IAAK,cACLN,MAAO,SAAqBV,GAG1B,IAFA,IAAIiV,EAEKtF,EAAQjN,UAAUR,OAAQsM,EAAgBjL,MAAMoM,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7GpB,EAAcoB,EAAQ,GAAKlN,UAAUkN,GAGvC,OAAQqF,EAActN,KAAKkN,WAAW/F,YAAYxD,MAAM2J,EAAa,CAACjV,GAAMgG,OAAO1B,EAAkBkK,OAOtG,CACDxN,IAAK,SACLN,MAAO,WACL,IAAIwU,EAEJ,OAAQA,EAAcvN,KAAKkN,WAAWvK,OAAOgB,MAAM4J,EAAaxS,aAEjE,CACD1B,IAAK,WACLN,MAAO,WACL,MAAO,WAAWiH,KAAKkN,UAAUnP,UAAS,QAE3C,CACD1E,IAAK,OACLV,IAAK,WACH,OAAOqH,KAAKkN,UAAUpO,SAGnBkO,EA5Fa,CA6FpBH,IAEEW,GAAoB,SAAUT,GAGhC,SAASS,IACP,IAAI/P,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMwN,GAErB,IAAK,IAAIhK,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO+P,EAAkBlS,WAAa9C,OAAO+I,eAAeiM,IAAoBvV,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,oBAA6B3H,EAA0B+F,EAAlCiC,GAiGzO,OA9GAtI,EAASuS,EAAmBT,GAgB5B5S,EAAYqT,EAAmB,CAAC,CAC9BnU,IAAK,MACLN,MAAO,SAAgBV,GACrB,IAAIoV,EAAgBzN,KAAKyN,cAEzB,GAAIA,EAAe,CACjB,IAAIC,EAAYD,EAAc9K,SAC9B,GAAqC,mBAA1B+K,EAAUvG,YAA4B,CAC/C,IAAIwG,EAAOD,EAAUvG,YAAY9O,GACjC,GAAIsV,EACF,OAAOA,EAAKhL,cAGX,CACL,IAAIiL,EAAc5N,KAAK6N,aAAaxV,GACpC,GAAIuV,EACF,OAAOA,EAAYjL,YAIxB,CACDtJ,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,MAIzC,CACD5D,IAAK,SACLN,MAAO,SAAiB+U,GAItB,MAHI,QAAQhN,KAAKgN,KACfA,EAAa,GAAG9N,KAAK3H,OAAOyV,EAAWC,MAAM,MAExC/N,KAAKgO,aAAaC,OAAOH,KAEjC,CACDzU,IAAK,WACLN,MAAO,WACL,IAAIV,EAAO2H,KAAK3H,KACZwV,EAAe7N,KAAK6N,aACpB7V,EAAUgI,KAAKhI,QACfyV,EAAgBzN,KAAKyN,cAErBS,EAAO,GACX,IAAK,IAAIC,KAASN,EAAc,CAE9B,IAAID,EAAcC,EAAaM,GAC/BD,EAAK1R,KAAKoR,EAAY7P,UAAS,IAEjC,GAAI/F,EACF,IAAK,IAAIoW,KAAUpW,EAAS,CAE1B,IAAIH,EAASG,EAAQoW,GACrBF,EAAK1R,KAAK3E,EAAOkG,YAMrB,OAHI0P,GACFS,EAAK1R,KAAKiR,EAAc1P,YAEnB,mBAAmB1F,SAuChC,SAAkB4E,GAIhB,IAHA,IAAIoR,EAAQpR,EAAMqR,MAAM,MACpB/T,EAAS8T,EAAM9T,OAEVzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAC1BuW,EAAMvW,GAAK,KAAKuW,EAAMvW,KAExB,OAAOuW,EAAM9P,KAAK,MA9CwBgQ,CAASL,EAAK3P,KAAK,cAE1D,CACDlF,IAAK,aACLV,IAAK,WACH,OAAIqH,KAAKyN,cACA,WAEA,QAGV,CACDpU,IAAK,aACLV,IAAK,WACH,QAAOqH,KAAKyN,gBAEb,CACDpU,IAAK,QACLV,IAAK,WACH,OAAOqH,KAAKyN,gBAEb,CACDpU,IAAK,eACLV,IAAK,WAGH,OAFmBqH,KAAKgO,aAEJxE,MAErB,CACDnQ,IAAK,UACLV,IAAK,WAGH,OAFmBqH,KAAKgO,aAEJvE,QAGjB+D,EA/Ge,CAgHtBX,IAYF,IAAI2B,GAAgB,SAAUzB,GAG5B,SAASyB,IACP,IAAI/Q,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMwO,GAErB,IAAK,IAAIhL,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO+Q,EAAclT,WAAa9C,OAAO+I,eAAeiN,IAAgBvW,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,gBAAyB3H,EAA0B+F,EAAlCiC,GAmB7N,OAhCAtI,EAASuT,EAAezB,GAgBxB5S,EAAYqU,EAAe,CAAC,CAC1BnV,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,SACjC+C,KAAKlB,KAAK3B,OAAOJ,EAAYY,EAAMV,KAE3C,CACD5D,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKlB,KAAK6D,WAElB,CACDtJ,IAAK,WACLN,MAAO,WACL,MAAO,2BAA2BiH,KAAKlB,KAAKf,kBAGzCyQ,EAjCW,CAkClB3B,IAEE4B,GAAmB,SAAU1B,GAG/B,SAAS0B,IACP,IAAIhR,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMyO,GAErB,IAAK,IAAIjL,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOgR,EAAiBnT,WAAa9C,OAAO+I,eAAekN,IAAmBxW,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,mBAAoB5B,EAAMoN,QAAU7V,SAAkB0C,EAA0B+F,EAAlCiC,GAiNhQ,OA9NAtI,EAASwT,EAAkB1B,GAgB3B5S,EAAYsU,EAAkB,CAAC,CAC7BpV,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAIiR,EAAOlO,KAAKkO,KAEZ/S,EAAa6E,KAAK7E,YAAc6E,KAAK7E,WAAWwH,SACpD,GAAc,OAAV1F,GAAmC,iBAAVA,GAAuC,mBAAVA,OAClD,CAACU,EAAMgI,EAAgB,wBAAyB3F,KAAK3H,MAAO2H,UADpE,CAIA,GAAI7E,EAAY,CACd,IAAIiC,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAA+EoB,EAA3EC,EAAYrC,EAAWgC,OAAOJ,EAAYY,EAAMV,GAAOpE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CAC3L,IAAIM,EAAQH,EAAMxE,MAEdmO,EAAQxL,EAAcgC,EAAO,GAE7BiR,EAAYzH,EAAM,GAClB0H,EAAe1H,EAAM,GACrBrJ,EAAeqJ,EAAM,GAErB2H,EAAeF,EAAUhR,EAAKpD,QAC9B2T,EAAK/G,YAAY0H,UAGb,CAACF,EAAWC,EAAc/Q,KAGpC,MAAOpB,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,UAKP4Q,EAAK/Q,OAAOJ,EAAYY,EAAMV,MAEtC,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAIiR,EAAOlO,KAAKkO,KAEZ/S,EAAa6E,KAAK7E,YAAc6E,KAAK7E,WAAWwH,SACpD,OAAc,OAAV1F,IAAmC,iBAAVA,GAAuC,mBAAVA,OAE/C9B,IAAeA,EAAW8K,QAAQhJ,OAEjCiR,EAAKjI,QAAQhJ,MAM1B,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiBwR,EACfxR,IAAU+C,KACL,EACEA,KAAK8O,eAAe7R,GACtB,GAEC,EAGLkF,EAAanC,KAAKkO,KAAMjR,KAOhC,CACD5D,IAAK,cACLN,MAAO,SAAqBM,GAC1B,IAAI6U,EAAOlO,KAAKkO,KACZ/S,EAAa6E,KAAK7E,WAElBwS,EAAOO,EAAK/G,YAAY9N,GAC5B,OAAIsU,IAEOxS,GAAgD,mBAA3BA,EAAWgM,YAClChM,EAAWgM,YAAY9N,QADzB,KASR,CACDA,IAAK,cACLN,MAAO,SAAqBM,GAC1B,IAAI6U,EAAOlO,KAAKkO,KACZ/S,EAAa6E,KAAK7E,WAEtB,QAAI+S,EAAKjH,YAAY5N,OAEV8B,GAAgD,mBAA3BA,EAAW8L,cAClC9L,EAAW8L,YAAY5N,KAWjC,CACDA,IAAK,iBACLN,MAAO,SAAwBmI,GAM7B,IALA,IAAIgN,EAAOlO,KAAKkO,KACZQ,EAAU1O,KAAK0O,QAEfK,EAAU7N,EAEI,MAAX6N,GAAiB,CACtB,GAAIA,IAAY/O,MAAQ+O,IAAYb,GAAQa,EAAQL,UAAYA,EAC9D,OAAO,EAGPK,EADEA,aAAmBN,EACXM,EAAQ5T,WAER4T,EAAQpM,SAGtB,OAAO,IAER,CACDtJ,IAAK,QACLN,MAAO,WACL,IAAIsB,EAAS,IAAIoI,EAAyBzC,KAAK9C,SAC/C7C,EAAOyM,OAAS9G,KAEhB,IAAK,IAAI2H,EAAQ5M,UAAUR,OAAQsM,EAAgBjL,MAAM+L,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACzFf,EAAce,GAAS7M,UAAU6M,GAInC,OADAvN,EAAOwM,cAAgBA,EAChBxM,IAER,CACDhB,IAAK,WACLN,MAAO,SAAkBoP,GACvB,IAAI9P,EAAO2H,KAAK3H,KACZ8C,EAAa6E,KAAK7E,WAClB+S,EAAOlO,KAAKkO,KAEhB,GAAI/F,EAAiB,CACnB,IAAI6G,EAAiB7T,IAA0C,iBAApBA,EAAW9C,MAAqB8C,EAAW9C,MAAQ8C,EAAW4C,YACzG,MAAO,iBAAiB1F,IAAO2W,EAAiB,YAAYA,IAAmB,MAAMd,EAAKnQ,aAE1F,OAAO1F,IAGV,CACDgB,IAAK,aACLV,IAAK,WACH,IAAIuV,EAAOlO,KAAKkO,KACZ/S,EAAa6E,KAAK7E,WAEtB,GAAkB,MAAdA,EACF,OAAO+S,EAAK9F,WAEd,IAAI6G,EAAYf,EAAK9F,WACjB8G,EAAa/T,EAAWwH,SAASyF,WACrC,GAAkB,MAAd8G,EACF,OAAOD,EAKT,IAHA,IAAIE,EAAO,GACPC,EAAa,GACb9U,EAAQ,GACHxC,EAAI,EAAGA,EAAIoX,EAAW3U,OAAQzC,IAAK,CAC1C,IAAI6V,EAAOuB,EAAWpX,GACtBwC,EAAMkC,KAAKmR,GACPA,EAAKtB,OACP+C,EAAWzB,EAAKtU,KAAOvB,EAEvBqX,EAAKxB,EAAKtU,KAAOvB,EAGrB,IAAK,IAAIuE,EAAK,EAAGA,EAAK4S,EAAU1U,OAAQ8B,IAAM,CAC5C,IAAIgT,EAAQJ,EAAU5S,GAClB8S,EAAKE,EAAMhW,KACbiB,EAAM+B,GAAMgT,EAEZ/U,EAAMkC,KAAK6S,GAGf,OAAO/U,MAGJmU,EA/Nc,CAgOrB5B,IAEEyC,GAAc,SAAUhM,GAG1B,SAASgM,IACP,IAAI7R,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMsP,GAErB,IAAK,IAAI9L,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO6R,EAAYhU,WAAa9C,OAAO+I,eAAe+N,IAAcrX,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,cAAe5B,EAAMiO,eAAiB,GAAYhU,EAA0B+F,EAAlCiC,GAiHlP,OA9HAtI,EAASqU,EAAahM,GAgBtBnJ,EAAYmV,EAAa,CAAC,CACxBjW,IAAK,gBACLN,MAAO,SAAuB4P,EAAIJ,EAAOK,GACvC,IAAIvO,EAAS,IAAImI,EAAcxC,KAAK9C,SAKpC,OAJA7C,EAAOsO,GAAKA,EACZtO,EAAOkO,MAAQA,EACflO,EAAOmO,QAAUI,EACjB5I,KAAKuP,eAAe/S,KAAKnC,GAClBA,IAER,CACDhB,IAAK,QACLN,MAAO,WACL,IAAIsB,EAAS,IAAIoI,EAAyBzC,KAAK9C,SAC/C7C,EAAOyM,OAAS9G,KAEhB,IAAK,IAAI2H,EAAQ5M,UAAUR,OAAQsM,EAAgBjL,MAAM+L,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACzFf,EAAce,GAAS7M,UAAU6M,GAInC,OADAvN,EAAOwM,cAAgBA,EAChBxM,IAER,CACDhB,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAIwK,EAAczH,KAAKyH,YACnB3I,EAAOkB,KAAKlB,KAEZ9B,GAAY,EACZI,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAAyEoB,EAArEC,EAAYsB,EAAK3B,OAAOJ,EAAYY,EAAMV,GAAOpE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CACrL,IAAIuD,EAAQpD,EAAMxE,MAElBiE,GAAY,QACN2D,GAER,MAAOlE,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,IAKPN,GAAayK,UACTC,EAAwB1H,KAAMjD,EAAYY,EAAMV,MAG1D,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAIwK,EAAczH,KAAKyH,YAGvB,QAFWzH,KAAKlB,KAENmH,QAAQhJ,MAEPwK,IAAgBM,EAAkB/H,KAAM/C,MAMpD,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,IAAU+C,KACL,EAEAmC,EAAanC,KAAKlB,KAAM7B,KAGlC,CACD5D,IAAK,WACLN,MAAO,SAAkByW,GAGvB,OAFWxP,KAAKlB,KAEJf,SAASyR,KAOtB,CACDnW,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKlB,KAAK6D,WAElB,CACDtJ,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfqM,eAAgBvP,KAAKuP,eACrBzQ,KAAMkB,KAAKlB,UAIVwQ,EA/HS,CAgIhBrM,GAEEwM,GAAgC,SAAU1C,GAG5C,SAAS0C,IACP,IAAIhS,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMyP,GAErB,IAAK,IAAIjM,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOgS,EAA8BnU,WAAa9C,OAAO+I,eAAekO,IAAgCxX,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,gCAAiC5B,EAAMoN,QAAU7V,SAAkB0C,EAA0B+F,EAAlCiC,GAuGvS,OApHAtI,EAASwU,EAA+B1C,GAgBxC5S,EAAYsV,EAA+B,CAAC,CAC1CpW,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAK,IAAI0K,EAAQ5M,UAAUR,OAAQsM,EAAgBjL,MAAM+L,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7Gf,EAAce,EAAQ,GAAK7M,UAAU6M,SAGhC8H,GAAW/L,WAAMxH,EAAW,CAAC6D,MAAM3B,OAAO1B,EAAkBkK,KAAiB1J,OAAOJ,EAAYY,EAAMV,KAE9G,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAK,IAAI+K,EAAQjN,UAAUR,OAAQsM,EAAgBjL,MAAMoM,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7GpB,EAAcoB,EAAQ,GAAKlN,UAAUkN,GAGvC,OAAOyH,GAAW/L,WAAMxH,EAAW,CAAC6D,MAAM3B,OAAO1B,EAAkBkK,KAAiBZ,QAAQhJ,KAE7F,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOyS,GAAW1P,MAAM4C,YAAY3F,KAErC,CACD5D,IAAK,SACLN,MAAO,WACL,IAAK,IAAIiS,EAAQjQ,UAAUR,OAAQsM,EAAgBjL,MAAMoP,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACzFpE,EAAcoE,GAASlQ,UAAUkQ,GAGnC,OAAOyE,GAAW/L,WAAMxH,EAAW,CAAC6D,MAAM3B,OAAO1B,EAAkBkK,KAAiB/H,OAErF,CACDzF,IAAK,iBACLN,MAAO,SAAwBmI,GAC7B,OAAOwO,GAAW1P,MAAMlB,KAAKgQ,eAAe5N,KAE7C,CACD7H,IAAK,QACLN,MAAO,WACL,IAAIsB,EAAS,IAAIoI,EAAyBzC,KAAK9C,SAC/C7C,EAAOyM,OAAS9G,KAEhB,IAAK,IAAI2P,EAAQ5U,UAAUR,OAAQsM,EAAgBjL,MAAM+T,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACzF/I,EAAc+I,GAAS7U,UAAU6U,GAInC,OADAvV,EAAOwM,cAAgBA,EAChBxM,IAER,CACDhB,IAAK,WACLN,MAAO,SAAkBoP,GACvB,IAAKA,EACH,OAAOnI,KAAK3H,KAEd,IAAIwX,EAAUH,GAAW1P,MACrBlB,EAAO+Q,EAAQ/Q,KACfyQ,EAAiBM,EAAQN,eAE7B,GAA8B,IAA1BA,EAAehV,OACjB,OAAOsV,EAAQ9R,UAAS,GAG1B,IADA,IAAIsJ,EAAQ,GACHvP,EAAI,EAAGA,EAAIyX,EAAehV,OAAQzC,IAAK,CAC9C,IAAI+Q,EAAgB0G,EAAezX,GACnCuP,EAAM7K,KAAKqM,EAAc9K,UAAS,IAEpC,IAAI5C,EAAa2D,EAAK3D,WAClB+S,EAAOpP,EAAKoP,KAEZc,EAAiB7T,IAA0C,iBAApBA,EAAW9C,MAAqB8C,EAAW9C,MAAQ8C,EAAW4C,YACzG,MAAO,iBAAiBiC,KAAK3H,QAAQgP,EAAM9I,KAAK,SAASyQ,EAAiB,YAAYA,IAAmB,MAAMd,EAAKnQ,eAErH,CACD1E,IAAK,SACLN,MAAO,WACL,OAAO2W,GAAW1P,MAAMkJ,WAEzB,CACD7P,IAAK,aACLV,IAAK,WACH,OAAO+W,GAAW1P,MAAMlB,KAAK3D,aAE9B,CACD9B,IAAK,OACLV,IAAK,WACH,OAAO+W,GAAW1P,MAAMlB,KAAKoP,OAE9B,CACD7U,IAAK,aACLV,IAAK,WACH,OAAO+W,GAAW1P,MAAMlB,KAAKsJ,aAE9B,CACD/O,IAAK,iBACLV,IAAK,WACH,OAAO+W,GAAW1P,MAAMuP,mBAGrBE,EArH2B,CAsHlC5C,IAEF,SAAS6C,GAAW5I,GAClB,IAAI5J,EAAU4J,EAAO5J,QACjB4S,EAAchJ,EAAOgJ,YAErBD,EAAU,IAAIP,GAAYpS,GAC1BgR,EAAO4B,EAAYD,GACnBjU,MAAMC,QAAQqS,GAChB2B,EAAQ/Q,KAAO5B,EAAQ6S,MAAMpM,MAAMzG,EAAS,CAAC4J,EAAOzO,MAAMgG,OAAO1B,EAAkBuR,KAEnF2B,EAAQ/Q,KAAO5B,EAAQ6S,MAAMjJ,EAAOzO,KAAM6V,GAG5C2B,EAAQ/Q,KAAK4P,QAAU5H,EAAO4H,QAI9B,IAFA,IAAIa,EAAiBM,EAAQN,eAEpBS,EAAQjV,UAAUR,OAAQsM,EAAgBjL,MAAMoU,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7GpJ,EAAcoJ,EAAQ,GAAKlV,UAAUkV,GAIvC,IADA,IAAIC,EAAQC,KAAKC,IAAIvJ,EAActM,OAAQgV,EAAehV,QACjDzC,EAAI,EAAGA,EAAIoY,EAAOpY,IAAK,CAC9B,IAAI+Q,EAAgB0G,EAAezX,GAC/BwP,EAAeT,EAAc/O,GAC7B+Q,EAAcN,OAASM,EAAcN,QAAUjB,EAGjDuB,EAAcN,MAAQrL,EAAQmT,UAAUxH,EAAcN,MAAOjB,GAE7DuB,EAAcN,MAAQjB,EAI1B,OAAOuI,EAGT,IAAIS,GAAqB,SAAUvD,GAGjC,SAASuD,IACP,IAAI7S,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMsQ,GAErB,IAAK,IAAI9M,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO6S,EAAmBhV,WAAa9C,OAAO+I,eAAe+O,IAAqBrY,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,qBAA8B3H,EAA0B+F,EAAlCiC,GAyB5O,OAtCAtI,EAASqV,EAAoBvD,GAgB7B5S,EAAYmW,EAAoB,CAAC,CAC/BjX,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,SACjC+C,KAAKlB,KAAK3B,OAAOJ,EAAYY,EAAMV,KAE3C,CACD5D,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKlB,KAAK6D,WAElB,CACDtJ,IAAK,WACLN,MAAO,SAAkBoP,GACvB,IAAIrJ,EAAOkB,KAAKlB,KAEhB,OAAIqJ,EACK,WAAWrJ,EAAKf,aAEhBe,EAAKf,eAIXuS,EAvCgB,CAwCvBzD,IAEE0D,GAAa,SAAUjN,GAGzB,SAASiN,IACP,IAAI9S,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMuQ,GAErB,IAAK,IAAI/M,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO8S,EAAWjV,WAAa9C,OAAO+I,eAAegP,IAAatY,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,aAAc5B,EAAM8G,WAAa,GAAI9G,EAAMkP,SAAW,GAAIlP,EAAMmP,eAAiB,GAAInP,EAAMoP,OAAQ,EAAenV,EAA0B+F,EAAlCiC,GAmPhT,OAhQAtI,EAASsV,EAAYjN,GAgBrBnJ,EAAYoW,EAAY,CAAC,CACvBlX,IAAK,cAMLN,MAAO,SAAqBM,GAI1B,IAHA,IAAI+O,EAAapI,KAAKoI,WAClB7N,EAAS6N,EAAW7N,OAEfzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAI2B,EAAW2O,EAAWtQ,GAC1B,GAAI2B,EAASJ,MAAQA,EACnB,OAAOI,EAGX,OAAOuG,KAAK2Q,WAAWtX,KAExB,CACDA,IAAK,cACLN,MAAO,SAAqBM,EAAKN,GAC/B,IAAIsQ,EAAWtO,UAAUR,OAAS,QAAsB4B,IAAjBpB,UAAU,IAAmBA,UAAU,GAC1EmC,EAAU8C,KAAK9C,QACfkL,EAAapI,KAAKoI,WAClB7N,EAAS6N,EAAW7N,OAEpBqW,EAAU,IAAIxE,GAAmBlP,GACrC0T,EAAQvX,IAAMA,EACduX,EAAQ7X,MAAQA,EAChB6X,EAAQvH,SAAWA,EAEnB,IAAK,IAAIvR,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAI2B,EAAW2O,EAAWtQ,GAC1B,GAAI2B,EAASJ,MAAQA,EAEnB,YADA+O,EAAWtQ,GAAK8Y,GAIpBxI,EAAW5L,KAAKoU,KAOjB,CACDvX,IAAK,cACLN,MAAO,SAAqBM,GAI1B,IAHA,IAAI+O,EAAapI,KAAKoI,WAClB7N,EAAS6N,EAAW7N,OAEfzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAE/B,GADesQ,EAAWtQ,GACbuB,MAAQA,EACnB,OAAO,EAGX,OAAO2G,KAAK6Q,WAAWxX,KAOxB,CACDA,IAAK,aACLN,MAAO,SAAoBM,GAIzB,IAHA,IAAImX,EAAWxQ,KAAKwQ,SAChBjW,EAASiW,EAASjW,OAEbzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAIgZ,EAAUN,EAAS1Y,GACvB,GAAIgZ,EAAQC,WAAW1X,GACrB,OAAOyX,KASZ,CACDzX,IAAK,aACLN,MAAO,SAAoBM,GAIzB,IAHA,IAAImX,EAAWxQ,KAAKwQ,SAChBjW,EAASiW,EAASjW,OAEbzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAE/B,GADc0Y,EAAS1Y,GACXiZ,WAAW1X,GACrB,OAAO,EAGX,OAAO,IAER,CACDA,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,GAAc,OAAVA,EAAJ,CAOA,GAFwB+C,KAAKyQ,eAAelW,OAAS,EAG9CyW,GAAsBhR,KAAM/C,UACzB,CAACU,EAAMgI,EAAgB,uBAAwB3F,YAElD,GAAqB,iBAAV/C,EAEhB,iBADM,CAACU,EAAMgI,EAAgB,qBAAsB3F,OAIrD,IAAIjD,EAAWsJ,QAAQrG,KAAM/C,GAA7B,CAKA,GAFAF,EAAWuJ,WAAWtG,KAAM/C,GAExB+C,KAAKwQ,SAASjW,OAAS,EAAG,CAC5B,GAAI0C,aAAiBzE,QAAUoD,MAAMC,QAAQoB,GAE3C,iBADM,CAACU,EAAMgI,EAAgB,qBAAsB3F,aAgS7D,UAAoClB,EAAM/B,EAAYY,EAAMV,GAK1D,IAJA,IAAImL,EAAatJ,EAAKsJ,WAClBoI,EAAW1R,EAAK0R,SAEhBrB,EAAO,GACFrX,EAAI,EAAGA,EAAIsQ,EAAW7N,OAAQzC,IAAK,CAC1C,IAAI2B,EAAW2O,EAAWtQ,SACnB2B,EAAS0D,OAAOJ,EAAYY,EAAMV,GACzCkS,EAAK3S,KAAK/C,EAASJ,KAErB4X,EAAM,IAAK,IAAI5X,KAAO4D,EACpB,IAA2B,IAAvBkS,EAAK+B,QAAQ7X,GAAjB,CAIA,IADA,IAAIN,EAAQkE,EAAM5D,GACT8R,EAAM,EAAGA,EAAMqF,EAASjW,OAAQ4Q,IAAO,CAC9C,IAAI2F,EAAUN,EAASrF,GACvB,GAAI2F,EAAQC,WAAW1X,IAAQyX,EAAQK,aAAapY,GAClD,SAASkY,OAKP,CAACtT,EAAKU,OAAOhF,GAAMsM,EAAgB,kBAAmB7G,IApTjDsS,CAA0BpR,KAAMjD,EAAYY,EAAMV,cAwTjE,UAAuC6B,EAAM/B,EAAYY,EAAMV,GAG7D,IAFA,IAAImL,EAAatJ,EAAKsJ,WAEbtQ,EAAI,EAAGA,EAAIsQ,EAAW7N,OAAQzC,IAAK,CAC1C,IAAI2B,EAAW2O,EAAWtQ,SACnB2B,EAAS0D,OAAOJ,EAAYY,EAAMV,IA3T9BoU,CAA6BrR,KAAMjD,EAAYY,EAAMV,GAE1D+C,KAAK0Q,cA6Tf,UAA6B5R,EAAM/B,EAAYY,EAAMV,GACnD,IAAImL,EAAatJ,EAAKsJ,WAElBkJ,EAAS,UAAiBjY,GAEvB+O,EAAWmJ,MAAK,SAAU9X,GAC7B,OAAOA,EAASJ,MAAQA,YAElB,CAACsE,EAAMgI,EAAgB,kBAAmBtM,GAAMyF,KAI1D,IAAK,IAAIzF,KAAO4D,QACPqU,EAAOjY,GAzUHmY,CAAmBxR,KAAMjD,EAAYY,EAAMV,IAEpDF,EAAWyJ,SAASxG,KAAM/C,cAhClB,CAACU,EAAMgI,EAAgB,qBAAsB3F,QAkCtD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,GAAc,OAAVA,EACF,OAAO,EAIT,GAFwB+C,KAAKyQ,eAAelW,OAAS,GAGnD,IAAKyW,GAAsBhR,KAAM/C,GAC/B,OAAO,OAEJ,GAAqB,iBAAVA,EAChB,OAAO,EAET,GAAI4B,EAAkBmB,KAAM/C,GAC1B,OAAO,EAETiC,EAAqBc,KAAM/C,GAE3B,IAAIqF,OAAS,EAUb,OAREA,EADEtC,KAAKwQ,SAASjW,OAAS,EA+HjC,SAA6BuE,EAAM7B,GAKjC,IAJA,IAAImL,EAAatJ,EAAKsJ,WAClBoI,EAAW1R,EAAK0R,SAEhBrB,EAAO,GACFrX,EAAI,EAAGA,EAAIsQ,EAAW7N,OAAQzC,IAAK,CAC1C,IAAI2B,EAAW2O,EAAWtQ,GAC1B,IAAK2B,EAASwM,QAAQhJ,GACpB,OAAO,EAETkS,EAAK3S,KAAK/C,EAASJ,KAErB4X,EAAM,IAAK,IAAI5X,KAAO4D,EACpB,IAA2B,IAAvBkS,EAAK+B,QAAQ7X,GAAjB,CAIA,IADA,IAAIN,EAAQkE,EAAM5D,GACTyR,EAAM,EAAGA,EAAM0F,EAASjW,OAAQuQ,IAAO,CAC9C,IAAIgG,EAAUN,EAAS1F,GACvB,GAAIgG,EAAQC,WAAW1X,IAAQyX,EAAQK,aAAapY,GAClD,SAASkY,EAKb,OAAO,EAET,OAAO,EAzJQQ,CAAoBzR,KAAM/C,GAoM3C,SAAgC6B,EAAM7B,GAGpC,IAFA,IAAImL,EAAatJ,EAAKsJ,WAEbtQ,EAAI,EAAGA,EAAIsQ,EAAW7N,OAAQzC,IAAK,CAE1C,IADesQ,EAAWtQ,GACZmO,QAAQhJ,GACpB,OAAO,EAGX,OAAO,EA3MQyU,CAAuB1R,KAAM/C,KAE1B+C,KAAK0Q,QACjBpO,EA2MR,SAAsBxD,EAAM7B,GAC1B,IAAImL,EAAatJ,EAAKsJ,WAElBuJ,EAAQ,SAAetY,GAEzB,IAAK+O,EAAWmJ,MAAK,SAAU9X,GAC7B,OAAOA,EAASJ,MAAQA,KAExB,MAAO,CACLuY,GAAG,IAKT,IAAK,IAAIvY,KAAO4D,EAAO,CACrB,IAAI4U,EAAQF,EAAMtY,GAElB,GAAqB,iBAAVwY,EAAoB,OAAOA,EAAMD,EAE9C,OAAO,EA9NQE,CAAa9R,KAAM/C,IAE9BoC,EAAmBW,KAAM/C,GAClBqF,IAER,CACDjJ,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,KAAMA,aAAiBsT,GAActT,aAAiBwR,IAAoBxR,aAAiBwS,IACzF,OAAQ,EAEV,IAEItJ,GAAY,EAChB,GAHwBnG,KAAKyQ,eAAelW,OAAS,EAG9B,CACrB,IAAIwX,EA8EZ,SAAmCjT,EAAM7B,GACvC,IAAIwT,EAAiB3R,EAAK2R,eAEtBuB,EAAsB/U,EAAMwT,eAC5BwB,EAAiB,EACrBhB,EAAM,IAAK,IAAInZ,EAAI,EAAGA,EAAI2Y,EAAelW,OAAQzC,IAAK,CAGpD,IAFA,IAAIoa,EAAezB,EAAe3Y,GAEzBqa,EAAI,EAAGA,EAAIH,EAAoBzX,OAAQ4X,IAAK,CACnD,IAAIC,EAAoBJ,EAAoBG,GACxC7P,EAASH,EAAa+P,EAAcE,GACxC,GAAe,IAAX9P,EAAc,CAChB2P,IACA,SAAShB,EACJ,GAAe,IAAX3O,EACT,SAAS2O,EAIb,OAAQ,EAEV,OAAIgB,IAAmBxB,EAAelW,OAC7B,EAEA,EAtGW8X,CAA0BrS,KAAM/C,GAC9C,IAAiB,IAAb8U,EACF,OAAQ,EACa,IAAZA,IACT5L,GAAY,GAIhB,IAAI7D,OAAS,EAOb,OAAgB,KALdA,EADEtC,KAAKwQ,SAASjW,OAAS,EA+HjC,SAAiCuE,EAAM7B,GACrC,IAAIuT,EAAW1R,EAAK0R,SAChBpI,EAAatJ,EAAKsJ,WAElBkK,EAAgBrV,EAAMuT,SACtB+B,EAAkBtV,EAAMmL,WACxBjC,GAAY,EAChB8K,EAAM,IAAK,IAAInZ,EAAI,EAAGA,EAAIsQ,EAAW7N,OAAQzC,IAE3C,IADA,IAAI2B,EAAW2O,EAAWtQ,GACjBqa,EAAI,EAAGA,EAAII,EAAgBhY,OAAQ4X,IAAK,CAC/C,IAAIK,EAAgBD,EAAgBJ,GACpC,GAAIK,EAAcnZ,MAAQI,EAASJ,IAAK,CACtC,IAAIiJ,EAASH,EAAa1I,EAAU+Y,GACpC,IAAgB,IAAZlQ,EACF,OAAQ,EACY,IAAXA,IACT6D,GAAY,GAEd,SAAS8K,GAIfA,EAAM,IAAK,IAAIlG,EAAM,EAAGA,EAAMyF,EAASjW,OAAQwQ,IAAO,CAEpD,IADA,IAAI+F,EAAUN,EAASzF,GACd0H,EAAK,EAAGA,EAAKH,EAAc/X,OAAQkY,IAAM,CAChD,IAAIC,EAAeJ,EAAcG,GAC7BE,EAAWxQ,EAAa2O,EAAS4B,GACrC,GAAiB,IAAbC,EAAgB,CAClBxM,GAAY,EACZ,SAAS8K,EACJ,GAAiB,IAAb0B,EACT,SAAS1B,EAIb,OAAQ,EAEV,OAAO9K,EAAY,EAAI,EAnKRyM,CAAwB5S,KAAM/C,GAwM/C,SAAoC6B,EAAM7B,GACxC,IAAImL,EAAatJ,EAAKsJ,WAElBmK,EAAkBtV,EAAMmL,WACxBjC,GAAY,EAChB8K,EAAM,IAAK,IAAInZ,EAAI,EAAGA,EAAIsQ,EAAW7N,OAAQzC,IAAK,CAEhD,IADA,IAAI2B,EAAW2O,EAAWtQ,GACjBqa,EAAI,EAAGA,EAAII,EAAgBhY,OAAQ4X,IAAK,CAC/C,IAAIK,EAAgBD,EAAgBJ,GACpC,GAAIK,EAAcnZ,MAAQI,EAASJ,IAAK,CACtC,IAAIiJ,EAASH,EAAa1I,EAASV,MAAOyZ,EAAczZ,OACxD,IAAgB,IAAZuJ,EACF,OAAQ,EACY,IAAXA,IACT6D,GAAY,GAEd,SAAS8K,GAGb,OAAQ,EAEV,OAAO9K,EAAY,EAAI,EA3NR0M,CAA2B7S,KAAM/C,KAIlC,EACCkJ,EACF,EAEA7D,IAGV,CACDjJ,IAAK,WACLN,MAAO,WACL,IAAI0X,EAAiBzQ,KAAKyQ,eACtBrI,EAAapI,KAAKoI,WAClBoI,EAAWxQ,KAAKwQ,SAEpB,GAAIjR,EAAgBS,MAClB,MAAO,iBAETP,EAAmBO,MAEnB,IADA,IAAIkO,EAAO,GACFpW,EAAI,EAAGA,EAAI2Y,EAAelW,OAAQzC,IACzCoW,EAAK1R,KAAKiU,EAAe3Y,GAAGiG,YAE9B,IAAK,IAAI1B,EAAK,EAAGA,EAAK+L,EAAW7N,OAAQ8B,IACvC6R,EAAK1R,KAAK4L,EAAW/L,GAAI0B,YAE3B,IAAK,IAAIwM,EAAM,EAAGA,EAAMiG,EAASjW,OAAQgQ,IACvC2D,EAAK1R,KAAKgU,EAASjG,GAAKxM,YAG1B,OADA4B,EAAiBK,MACbA,KAAK0Q,MACA,OAAOoC,GAAO5E,EAAK3P,KAAK,aAExB,MAAMuU,GAAO5E,EAAK3P,KAAK,cAGjC,CACDlF,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfuN,eAAgBzQ,KAAKyQ,eACrBrI,WAAYpI,KAAKoI,WACjBoI,SAAUxQ,KAAKwQ,SACfE,MAAO1Q,KAAK0Q,WAIXH,EAjQQ,CAkQftN,GAEF,SAAS+N,GAAsBlS,EAAM7B,GAGnC,IAFA,IAAIwT,EAAiB3R,EAAK2R,eAEjB3Y,EAAI,EAAGA,EAAI2Y,EAAelW,OAAQzC,IAAK,CAE9C,GADmB2Y,EAAe3Y,GACjBmO,QAAQhJ,GACvB,OAAO,EAGX,OAAO,EAoNT,SAAS6V,GAAO7V,GAId,IAHA,IAAIoR,EAAQpR,EAAMqR,MAAM,MACpB/T,EAAS8T,EAAM9T,OAEVzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAC1BuW,EAAMvW,GAAK,KAAKuW,EAAMvW,KAExB,OAAOuW,EAAM9P,KAAK,MAGpB,IAAIwU,GAAmB,SAAUzP,GAG/B,SAASyP,IACP,IAAItV,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM+S,GAErB,IAAK,IAAIvP,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOsV,EAAiBzX,WAAa9C,OAAO+I,eAAewR,IAAmB9a,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,mBAAoB5B,EAAMyE,MAAQ,GAAYxK,EAA0B+F,EAAlCiC,GAwIxP,OArJAtI,EAAS8X,EAAkBzP,GAgB3BnJ,EAAY4Y,EAAkB,CAAC,CAC7B1Z,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GAIxC,IAHA,IAAI8I,EAAQ/F,KAAK+F,MACbxL,EAASwL,EAAMxL,OAEVzC,EAAI,EAAGA,EAAIyC,EAAQzC,UACnBiO,EAAMjO,GAAGqF,OAAOJ,EAAYY,EAAMV,KAQ5C,CACD5D,IAAK,cACLN,MAAO,SAAqBM,GAI1B,IAHA,IAAI0M,EAAQ/F,KAAK+F,MAGRjO,EAFIiO,EAAMxL,OAEG,EAAGzC,GAAK,EAAGA,IAAK,CACpC,IAAIgH,EAAOiH,EAAMjO,GACjB,GAAgC,mBAArBgH,EAAKqI,YAA4B,CAC1C,IAAIwG,EAAO7O,EAAKqI,YAAY9N,GAC5B,GAAIsU,EACF,OAAOA,MAUd,CACDtU,IAAK,cACLN,MAAO,SAAqBM,GAI1B,IAHA,IAAI0M,EAAQ/F,KAAK+F,MACbxL,EAASwL,EAAMxL,OAEVzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAIgH,EAAOiH,EAAMjO,GACjB,GAAgC,mBAArBgH,EAAKmI,aAA8BnI,EAAKmI,YAAY5N,GAC7D,OAAO,EAGX,OAAO,IAER,CACDA,IAAK,UACLN,MAAO,SAAiBkE,GAItB,IAHA,IAAI8I,EAAQ/F,KAAK+F,MACbxL,EAASwL,EAAMxL,OAEVzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAE/B,IADWiO,EAAMjO,GACPmO,QAAQhJ,GAChB,OAAO,EAGX,OAAO,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,IAAI8I,EAAQ/F,KAAK+F,MACbkM,EAAiB,EACrB,GAAIhV,aAAiB8V,EAAkB,CACrC,IAAI7M,EAAajJ,EAAM8I,MACvBkL,EAAM,IAAK,IAAInZ,EAAI,EAAGA,EAAIiO,EAAMxL,OAAQzC,IAAK,CAE3C,IADA,IAAIgH,EAAOiH,EAAMjO,GACRqa,EAAI,EAAGA,EAAIjM,EAAW3L,OAAQ4X,IAAK,CAC1C,IAAI7P,EAASH,EAAarD,EAAMoH,EAAWpO,IAC3C,GAAe,IAAXwK,EAAc,CAChB2P,IACA,SAAShB,EACJ,GAAe,IAAX3O,EACT,SAAS2O,EAIb,OAAQ,EAEV,OAAOgB,IAAmBlM,EAAMxL,OAAS,EAAI,EAE7C,IAAK,IAAI8B,EAAK,EAAGA,EAAK0J,EAAMxL,OAAQ8B,IAAM,CACxC,IACI0V,EAAU5P,EADF4D,EAAM1J,GACgBY,GAClC,IAAiB,IAAb8U,EACF,OAAQ,EACa,IAAZA,GACTE,IAGJ,OAAOA,IAAmBlM,EAAMxL,OAAS,EAAI,IAGhD,CACDlB,IAAK,SACLN,MAAO,WASL,IARA,IAAI2E,EAEA+S,EAAiB,GACjBrI,EAAa,GACboI,EAAW,GACXzK,EAAQ/F,KAAK+F,MACb7I,EAAU8C,KAAK9C,QAEVpF,EAAI,EAAGA,EAAIiO,EAAMxL,OAAQzC,IAAK,CACrC,IAAIgH,EAAOiH,EAAMjO,GAAG6K,SACpBqJ,GAAUlN,aAAgByR,GAAY,mCACtCE,EAAejU,KAAKmH,MAAM8M,EAAgB9T,EAAkBmC,EAAK2R,iBACjED,EAAShU,KAAKmH,MAAM6M,EAAU7T,EAAkBmC,EAAK0R,WACrDwC,GAAgB5K,EAAYtJ,EAAKsJ,YAEnC,OAAQ1K,EAAQR,GAAS1D,OAAOmK,MAAMjG,EAAO+S,EAAepS,OAAO+J,EAAYoI,MAEhF,CACDnX,IAAK,WACLN,MAAO,WACL,OAAOiH,KAAK+F,MAAMxH,KAAK,SAExB,CACDlF,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf6C,MAAO/F,KAAK+F,WAIXgN,EAtJc,CAuJrB9P,GAEF,SAASgQ,GAAiB5a,EAAM+P,GAC9B,IAAK,IAAItQ,EAAI,EAAGA,EAAIsQ,EAAW7N,OAAQzC,IACrC,GAAIsQ,EAAWtQ,GAAGO,OAASA,EACzB,OAAOP,EAGX,OAAQ,EAGV,SAASkb,GAAgB3Y,EAAQW,GAC/B,IAAK,IAAIlD,EAAI,EAAGA,EAAIkD,EAAOT,OAAQzC,IAAK,CACtC,IAAIob,EAAWlY,EAAOlD,GAClBqb,EAAQF,GAAiBC,EAAS7Z,IAAKgB,IAC5B,IAAX8Y,EACF9Y,EAAOmC,KAAK0W,GAEZ7Y,EAAO8Y,GAASD,EAGpB,OAAO7Y,EAGT,IAAI2I,GAAY,SAAUM,GAGxB,SAASN,IACP,IAAIvF,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMgD,GAErB,IAAK,IAAIQ,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOuF,EAAU1H,WAAa9C,OAAO+I,eAAeyB,IAAY/K,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,YAAqB3H,EAA0B+F,EAAlCiC,GAwBjN,OArCAtI,EAAS+H,EAAWM,GAgBpBnJ,EAAY6I,EAAW,CAAC,CACtB3J,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,MACzC,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAO,IAER,CACD5D,IAAK,WACLN,MAAO,WACL,MAAO,UAER,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,cAIdF,EAtCO,CAuCdC,GAEEmQ,GAAqB,SAAU9P,GAGjC,SAAS8P,IACP,IAAI3V,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMoT,GAErB,IAAK,IAAI5P,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO2V,EAAmB9X,WAAa9C,OAAO+I,eAAe6R,IAAqBnb,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,qBAA8B3H,EAA0B+F,EAAlCiC,GAwC5O,OArDAtI,EAASmY,EAAoB9P,GAgB7BnJ,EAAYiZ,EAAoB,CAAC,CAC/B/Z,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAIlE,EAAQiH,KAAKjH,MAEbkE,IAAUlE,SACN,CAAC4E,EAAMgI,EAAgB,yBAA0B5M,GAAQiH,SAGlE,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAOA,IAAU+C,KAAKjH,QAEvB,CACDM,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiBmW,GAAsBnW,EAAMlE,QAAUiH,KAAKjH,MACvD,GAEC,IAGX,CACDM,IAAK,WACLN,MAAO,WACL,MAAO,GAAGiH,KAAKjH,UAEhB,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfnK,MAAOiH,KAAKjH,WAIXqa,EAtDgB,CAuDvBnQ,GAEEoQ,GAAa,SAAU/P,GAGzB,SAAS+P,IACP,IAAI5V,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMqT,GAErB,IAAK,IAAI7P,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO4V,EAAW/X,WAAa9C,OAAO+I,eAAe8R,IAAapb,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,aAAsB3H,EAA0B+F,EAAlCiC,GAuCpN,OApDAtI,EAASoY,EAAY/P,GAgBrBnJ,EAAYkZ,EAAY,CAAC,CACvBha,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACnB,iBAAVA,SACH,CAACU,EAAMgI,EAAgB,qBAAsB3F,SAGtD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,MAAwB,iBAAVA,IAEf,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiBoW,EACZ,EACEpW,aAAiBmW,GACnB,GAEC,IAGX,CACD/Z,IAAK,WACLN,MAAO,WACL,MAAO,WAER,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,cAIdmQ,EArDQ,CAsDfpQ,GAEEqQ,GAAyB,SAAUC,GAGrC,SAASD,IACP,IAAI7V,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMsT,GAErB,IAAK,IAAI9P,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO6V,EAAuBhY,WAAa9C,OAAO+I,eAAe+R,IAAyBrb,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,yBAAkC3H,EAA0B+F,EAAlCiC,GAkHxP,OA/HAtI,EAASqY,EAAwBC,GAgBjCpZ,EAAYmZ,EAAwB,CAAC,CACnCja,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAK,IAAI0K,EAAQ5M,UAAUR,OAAQsM,EAAgBjL,MAAM+L,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7Gf,EAAce,EAAQ,GAAK7M,UAAU6M,SAGhC4L,GAAa7P,WAAMxH,EAAW,CAAC6D,MAAM3B,OAAO1B,EAAkBkK,KAAiB1J,OAAOJ,EAAYY,EAAMV,KAEhH,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAK,IAAI+K,EAAQjN,UAAUR,OAAQsM,EAAgBjL,MAAMoM,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7GpB,EAAcoB,EAAQ,GAAKlN,UAAUkN,GAGvC,IAAI4H,EAAU2D,GAAa7P,WAAMxH,EAAW,CAAC6D,MAAM3B,OAAO1B,EAAkBkK,KAC5E,QAAKgJ,EAAQ5J,QAAQhJ,MAET8K,EAAkB/H,KAAM/C,KAMrC,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,IAAU+C,KACL,EACEA,KAAKkI,gBAEN,EAED/F,EAAaqR,GAAaxT,MAAO/C,KAG3C,CACD5D,IAAK,cACLN,MAAO,SAAqBV,GAC1B,IAAK,IAAI2S,EAAQjQ,UAAUR,OAAQsM,EAAgBjL,MAAMoP,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7GpE,EAAcoE,EAAQ,GAAKlQ,UAAUkQ,GAGvC,IAAIjE,EAAQhH,KAAK2C,OAAOgB,MAAM3D,KAAMrD,EAAkBkK,IACtD,SAAIG,GAAsC,mBAAtBA,EAAMC,cACjBD,EAAMC,YAAYtD,MAAMqD,EAAO,CAAC3O,GAAMgG,OAAO1B,EAAkBkK,OAKzE,CACDxN,IAAK,cACLN,MAAO,SAAqBV,GAC1B,IAAK,IAAIsX,EAAQ5U,UAAUR,OAAQsM,EAAgBjL,MAAM+T,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7G/I,EAAc+I,EAAQ,GAAK7U,UAAU6U,GAGvC,IAAI5I,EAAQhH,KAAK2C,OAAOgB,MAAM3D,KAAMrD,EAAkBkK,IACtD,GAAIG,GAAsC,mBAAtBA,EAAMG,YACxB,OAAOH,EAAMG,YAAYxD,MAAMqD,EAAO,CAAC3O,GAAMgG,OAAO1B,EAAkBkK,OAQzE,CACDxN,IAAK,SACLN,MAAO,WACL,IAAK,IAAIiX,EAAQjV,UAAUR,OAAQsM,EAAgBjL,MAAMoU,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACzFpJ,EAAcoJ,GAASlV,UAAUkV,GAGnC,OAAOuD,GAAa7P,WAAMxH,EAAW,CAAC6D,MAAM3B,OAAO1B,EAAkBkK,KAAiBlE,WAEvF,CACDtJ,IAAK,WACLN,MAAO,SAAkBoP,GAKvB,IAJA,IAAI0H,EAAU2D,GAAaxT,MACvBuP,EAAiBM,EAAQN,eAEzBlI,EAAQ,GACHvP,EAAI,EAAGA,EAAIyX,EAAehV,OAAQzC,IAAK,CAC9C,IAAI+Q,EAAgB0G,EAAezX,GACnCuP,EAAM7K,KAAKqM,EAAc9K,UAAS,IAGpC,IAAI1F,EAAO2H,KAAK3H,KAEZob,EAAalE,EAAehV,OAAS,EAAI,GAAGlC,KAAQgP,EAAM9I,KAAK,SAAWlG,EAE9E,OAAI8P,EACK,QAAQsL,OAAgB5D,EAAQ9R,cAEhC0V,IAGV,CACDpa,IAAK,SACLN,MAAO,WAEL,OADcya,GAAaxT,MACZkJ,WAEhB,CACD7P,IAAK,aACLV,IAAK,WACH,OAAO6a,GAAaxT,MAAMlB,KAAKsJ,eAG5BkL,EAhIoB,CAiI3B/Q,GAEF,SAASiR,GAAa1M,GACpB,IAAI4M,EAAc5M,EAAO4M,YACrBxW,EAAU4J,EAAO5J,QACjB7E,EAAOyO,EAAOzO,KAEdwX,EAAU,IAAIP,GAAYpS,GAC9B2S,EAAQxX,KAAOA,EACfwX,EAAQ/Q,KAAO4U,EAAY7D,GAC3BA,EAAQpI,YAAcX,EAAOW,YAI7B,IAFA,IAAI8H,EAAiBM,EAAQN,eAEpBoE,EAAQ5Y,UAAUR,OAAQsM,EAAgBjL,MAAM+X,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7G/M,EAAc+M,EAAQ,GAAK7Y,UAAU6Y,GAIvC,IADA,IAAI1D,EAAQC,KAAKC,IAAIvJ,EAActM,OAAQgV,EAAehV,QACjDzC,EAAI,EAAGA,EAAIoY,EAAOpY,IAAK,CAC9B,IAAI+Q,EAAgB0G,EAAezX,GAC/BwP,EAAeT,EAAc/O,GAC7B+Q,EAAcN,OAASM,EAAcN,QAAUjB,EAGjDuB,EAAcN,MAAQrL,EAAQmT,UAAUxH,EAAcN,MAAOjB,GAE7DuB,EAAcN,MAAQjB,EAI1B,OAAOuI,EAGT,IAAIgE,GAA4B,SAAUvQ,GAGxC,SAASuQ,IACP,IAAIpW,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM6T,GAErB,IAAK,IAAIrQ,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOoW,EAA0BvY,WAAa9C,OAAO+I,eAAesS,IAA4B5b,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,4BAAqC3H,EAA0B+F,EAAlCiC,GA4GjQ,OAzHAtI,EAAS4Y,EAA2BvQ,GAgBpCnJ,EAAY0Z,EAA2B,CAAC,CACtCxa,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAK,IAAI0K,EAAQ5M,UAAUR,OAAQsM,EAAgBjL,MAAM+L,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7Gf,EAAce,EAAQ,GAAK7M,UAAU6M,SAGhCkM,GAAanQ,WAAMxH,EAAW,CAAC6D,MAAM3B,OAAO1B,EAAkBkK,KAAiB1J,OAAOJ,EAAYY,EAAMV,KAEhH,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAK,IAAI+K,EAAQjN,UAAUR,OAAQsM,EAAgBjL,MAAMoM,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7GpB,EAAcoB,EAAQ,GAAKlN,UAAUkN,GAGvC,OAAO6L,GAAanQ,WAAMxH,EAAW,CAAC6D,MAAM3B,OAAO1B,EAAkBkK,KAAiBZ,QAAQhJ,KAE/F,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAa2R,GAAa9T,MAAO/C,KAEzC,CACD5D,IAAK,gBACLN,MAAO,WACL,IAAIgb,EAEJ,OAAQA,EAAmBD,GAAa9T,MAAMlB,MAAMkV,cAAcrQ,MAAMoQ,EAAkBhZ,aAE3F,CACD1B,IAAK,gBACLN,MAAO,SAAuBkE,GAC5B,OAAO6W,GAAa9T,MAAMlB,KAAKmV,cAAchX,KAE9C,CACD5D,IAAK,eACLN,MAAO,WACL,IAAImb,EAEJ,OAAQA,EAAoBJ,GAAa9T,MAAMlB,MAAMqV,aAAaxQ,MAAMuQ,EAAmBnZ,aAE5F,CACD1B,IAAK,eACLN,MAAO,SAAsBkE,GAC3B,OAAO6W,GAAa9T,MAAMlB,KAAKsV,aAAanX,KAO7C,CACD5D,IAAK,SACLN,MAAO,WACL,IAAK,IAAIiS,EAAQjQ,UAAUR,OAAQsM,EAAgBjL,MAAMoP,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACzFpE,EAAcoE,GAASlQ,UAAUkQ,GAGnC,OAAO6I,GAAanQ,WAAMxH,EAAW,CAAC6D,MAAM3B,OAAO1B,EAAkBkK,KAAiBlE,WAEvF,CACDtJ,IAAK,WACLN,MAAO,WACL,IAAI8W,EAAUiE,GAAa9T,MACvBlB,EAAO+Q,EAAQ/Q,KACfyQ,EAAiBM,EAAQN,eAE7B,GAA8B,IAA1BA,EAAehV,OACjB,OAAOuE,EAAKf,WAGd,IADA,IAAIsJ,EAAQ,GACHvP,EAAI,EAAGA,EAAIyX,EAAehV,OAAQzC,IAAK,CAC9C,IAAI+Q,EAAgB0G,EAAezX,GACnCuP,EAAM7K,KAAKqM,EAAc9K,UAAS,IAEpC,MAAO,IAAIsJ,EAAM9I,KAAK,UAAUO,EAAKf,eAEtC,CACD1E,IAAK,SACLN,MAAO,WAEL,OADc+a,GAAa9T,MACZkJ,WAEhB,CACD7P,IAAK,iBACLV,IAAK,WACH,OAAOmb,GAAa9T,MAAMuP,iBAE3B,CACDlW,IAAK,SACLV,IAAK,WACH,OAAOmb,GAAa9T,MAAMlB,KAAK8G,SAEhC,CACDvM,IAAK,OACLV,IAAK,WACH,OAAOmb,GAAa9T,MAAMlB,KAAK6L,OAEhC,CACDtR,IAAK,aACLV,IAAK,WACH,OAAOmb,GAAa9T,MAAMlB,KAAKoL,eAG5B2J,EA1HuB,CA2H9B5Q,GAEF,SAAS6Q,GAAahN,GACpB,IAAI5J,EAAU4J,EAAO5J,QACjB4S,EAAchJ,EAAOgJ,YAErBD,EAAU,IAAIP,GAAYpS,GAC1BgR,EAAO4B,EAAYD,GACvBA,EAAQ/Q,KAAO5B,EAAQmX,SAAS1Q,MAAMzG,EAASP,EAAkBuR,IAIjE,IAFA,IAAIqB,EAAiBM,EAAQN,eAEpBI,EAAQ5U,UAAUR,OAAQsM,EAAgBjL,MAAM+T,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7G/I,EAAc+I,EAAQ,GAAK7U,UAAU6U,GAIvC,IADA,IAAIM,EAAQC,KAAKC,IAAIvJ,EAActM,OAAQgV,EAAehV,QACjDzC,EAAI,EAAGA,EAAIoY,EAAOpY,IAAK,CAC9B,IAAI+Q,EAAgB0G,EAAezX,GAC/BwP,EAAeT,EAAc/O,GAC7B+Q,EAAcN,OAASM,EAAcN,QAAUjB,EAGjDuB,EAAcN,MAAQrL,EAAQmT,UAAUxH,EAAcN,MAAOjB,GAE7DuB,EAAcN,MAAQjB,EAI1B,OAAOuI,EAGT,IAAIyE,GAAiB,SAAUhR,GAG7B,SAASgR,IACP,IAAI7W,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMsU,GAErB,IAAK,IAAI9Q,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO6W,EAAehZ,WAAa9C,OAAO+I,eAAe+S,IAAiBrc,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,iBAAkB5B,EAAMmG,YAAc,GAAYlM,EAA0B+F,EAAlCiC,GAgIxP,OA7IAtI,EAASqZ,EAAgBhR,GAgBzBnJ,EAAYma,EAAgB,CAAC,CAC3Bjb,IAAK,gBACLN,MAAO,WACL,IAAK,IAAI4O,EAAQ5M,UAAUR,OAAQkN,EAAc7L,MAAM+L,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACvFH,EAAYG,GAAS7M,UAAU6M,GAIjC,OADAL,EAAe5D,WAAMxH,EAAW,CAAC6D,MAAM3B,OAAO1B,EAAkB8K,KACzDzH,OAER,CACD3G,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAI6B,EAAOkB,KAAKlB,KAEZ9B,GAAY,EACZI,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAAyEoB,EAArEC,EAAYsB,EAAK3B,OAAOJ,EAAYY,EAAMV,GAAOpE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CACrL,IAAIuD,EAAQpD,EAAMxE,MAElBiE,GAAY,QACN2D,GAER,MAAOlE,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,GAKPN,UACI0K,EAAwB1H,KAAMjD,EAAYY,EAAMV,MAG1D,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GAGtB,QAFW+C,KAAKlB,KAENmH,QAAQhJ,MAEN8K,EAAkB/H,KAAM/C,KAMrC,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,IAAU+C,KACL,GAEC,IAGX,CACD3G,IAAK,QACLN,MAAO,WACL,IAAIsB,EAAS,IAAIoI,EAAyBzC,KAAK9C,SAC/C7C,EAAOyM,OAAS9G,KAEhB,IAAK,IAAIgI,EAAQjN,UAAUR,OAAQsM,EAAgBjL,MAAMoM,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACzFpB,EAAcoB,GAASlN,UAAUkN,GAInC,OADA5N,EAAOwM,cAAgBA,EAChBxM,IAOR,CACDhB,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKlB,KAAK6D,WAElB,CACDtJ,IAAK,cACLN,MAAO,SAAqBV,GAC1B,IAAI2O,EAAQhH,KAAK2C,SACjB,SAAIqE,GAAsC,mBAAtBA,EAAMC,cACjBD,EAAMC,YAAY5O,KAK5B,CACDgB,IAAK,cACLN,MAAO,SAAqBV,GAC1B,IAAI2O,EAAQhH,KAAK2C,SACjB,GAAIqE,GAAsC,mBAAtBA,EAAMG,YACxB,OAAOH,EAAMG,YAAY9O,KAG5B,CACDgB,IAAK,WACLN,MAAO,WAGL,MAAO,cAFIiH,KAAKlB,KAEUf,gBAE3B,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfpE,KAAMkB,KAAKlB,UAIVwV,EA9IY,CA+InBrR,GAEEsR,GAAoB,SAAUjR,GAGhC,SAASiR,IACP,IAAI9W,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMuU,GAErB,IAAK,IAAI/Q,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO8W,EAAkBjZ,WAAa9C,OAAO+I,eAAegT,IAAoBtc,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,oBAA6B3H,EAA0B+F,EAAlCiC,GAwCzO,OArDAtI,EAASsZ,EAAmBjR,GAgB5BnJ,EAAYoa,EAAmB,CAAC,CAC9Blb,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GAGpCA,IAFQ+C,KAAKjH,aAGT,CAAC4E,EAAMgI,EAAgB,yBAA0B3F,KAAKjC,YAAaiC,SAG5E,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAOA,IAAU+C,KAAKjH,QAEvB,CACDM,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiBsX,GAAqBtX,EAAMlE,QAAUiH,KAAKjH,MACtD,GAEC,IAGX,CACDM,IAAK,WACLN,MAAO,WACL,OAAOgJ,KAAKC,UAAUhC,KAAKjH,SAE5B,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfnK,MAAOiH,KAAKjH,WAIXwb,EAtDe,CAuDtBtR,GAEEuR,GAAa,SAAUlR,GAGzB,SAASkR,IACP,IAAI/W,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMwU,GAErB,IAAK,IAAIhR,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO+W,EAAWlZ,WAAa9C,OAAO+I,eAAeiT,IAAavc,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,aAAsB3H,EAA0B+F,EAAlCiC,GAuCpN,OApDAtI,EAASuZ,EAAYlR,GAgBrBnJ,EAAYqa,EAAY,CAAC,CACvBnb,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACnB,iBAAVA,SACH,CAACU,EAAMgI,EAAgB,qBAAsB3F,SAGtD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,MAAwB,iBAAVA,IAEf,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiBsX,GACZ,EACEtX,aAAiBuX,EACnB,GAEC,IAGX,CACDnb,IAAK,WACLN,MAAO,WACL,MAAO,WAER,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,cAIdsR,EArDQ,CAsDfvR,GAEEwR,GAAoB,SAAUnR,GAGhC,SAASmR,IACP,IAAIhX,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMyU,GAErB,IAAK,IAAIjR,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOgX,EAAkBnZ,WAAa9C,OAAO+I,eAAekT,IAAoBxc,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,oBAA6B3H,EAA0B+F,EAAlCiC,GAwCzO,OArDAtI,EAASwZ,EAAmBnR,GAgB5BnJ,EAAYsa,EAAmB,CAAC,CAC9Bpb,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GAGpCA,IAFQ+C,KAAKjH,aAGT,CAAC4E,EAAMgI,EAAgB,yBAA0B3F,KAAKjC,YAAaiC,SAG5E,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAOA,IAAU+C,KAAKjH,QAEvB,CACDM,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiBwX,GAAqBxX,EAAMlE,QAAUiH,KAAKjH,MACtD,GAEC,IAGX,CACDM,IAAK,WACLN,MAAO,WACL,MAAO,UAAUgI,OAAOf,KAAKjH,WAE9B,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfnK,MAAOiH,KAAKjH,WAIX0b,EAtDe,CAuDtBxR,GAEEyR,GAAa,SAAUpR,GAGzB,SAASoR,IACP,IAAIjX,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM0U,GAErB,IAAK,IAAIlR,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOiX,EAAWpZ,WAAa9C,OAAO+I,eAAemT,IAAazc,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,aAAsB3H,EAA0B+F,EAAlCiC,GAwCpN,OArDAtI,EAASyZ,EAAYpR,GAgBrBnJ,EAAYua,EAAY,CAAC,CACvBrb,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GAEnB,iBAAVA,SACH,CAACU,EAAMgI,EAAgB,qBAAsB3F,SAGtD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,MAAwB,iBAAVA,IAEf,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAIA,aAAiBwX,GACZ,EACExX,aAAiByX,EACnB,GAEC,IAGX,CACDrb,IAAK,WACLN,MAAO,WACL,MAAO,WAER,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,cAIdwR,EAtDQ,CAuDfzR,GASE0R,GAAW,SAAUrR,GAGvB,SAASqR,IACP,IAAIlX,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM2U,GAErB,IAAK,IAAInR,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOkX,EAASrZ,WAAa9C,OAAO+I,eAAeoT,IAAW1c,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,WAAoB3H,EAA0B+F,EAAlCiC,GAmE9M,OAhFAtI,EAAS0Z,EAAUrR,GAgBnBnJ,EAAYwa,EAAU,CAAC,CACrBtb,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAIwL,EAAWzI,KAAKyI,SAEhBxL,IAAUwL,IAEiB,mBAAbA,GAA2BxL,aAAiBwL,GAEvC,MAAZA,SACH,CAAC9K,EAAMgI,EAAgB,mBAAoB3F,UAGpD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAIwL,EAAWzI,KAAKyI,SAEpB,OAAIxL,IAAUwL,IAEiB,mBAAbA,GAA2BxL,aAAiBwL,GAEvC,MAAZA,KAMZ,CACDpP,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAMA,aAAiB0X,EAEZ1X,EAAMwL,UAAYzI,KAAKyI,SACzBxL,EAAMwL,WAAazI,KAAKyI,SAAW,GAAK,EACtCzI,KAAKyI,SACP,EAEA,GANC,IAcX,CACDpP,IAAK,SACLN,MAAO,WACL,OAAOiH,OAER,CACD3G,IAAK,WACLN,MAAO,SAAkB2P,GACvB,MAAO,SAER,CACDrP,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,cAIdyR,EAjFM,CAkFb1R,GAEE2R,GAAoB,IAAIhW,QAExBiW,GAAU,SAAUvR,GAGtB,SAASuR,IACP,IAAIpX,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM6U,GAErB,IAAK,IAAIrR,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOoX,EAAQvZ,WAAa9C,OAAO+I,eAAesT,IAAU5c,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,UAAmB3H,EAA0B+F,EAAlCiC,GA2E3M,OAxFAtI,EAAS4Z,EAASvR,GAgBlBnJ,EAAY0a,EAAS,CAAC,CACpBxb,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,SACjC+C,KAAKlB,KAAK3B,OAAOJ,EAAYY,EAAMV,KAE3C,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAO+C,KAAKlB,KAAKmH,QAAQhJ,KAE1B,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAKlB,KAAM7B,KAEhC,CACD5D,IAAK,QACLN,MAAO,WACL,IAAIsB,EAAS,IAAIoI,EAAyBzC,KAAK9C,SAC/C7C,EAAOyM,OAAS9G,KAAKlB,KAErB,IAAK,IAAI6I,EAAQ5M,UAAUR,OAAQsM,EAAgBjL,MAAM+L,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACzFf,EAAce,GAAS7M,UAAU6M,GAInC,OADAvN,EAAOwM,cAAgBA,EAChBxM,IAOR,CACDhB,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKlB,KAAK6D,WAElB,CACDtJ,IAAK,WACLN,MAAO,WACL,OAAOiH,KAAKlB,KAAKf,aAElB,CACD1E,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKlB,KAAKoK,WAElB,CACD7P,IAAK,OACLV,IAAK,WACH,OAAOqH,KAAKlB,KAAKzG,OAElB,CACDgB,IAAK,OACLV,IAAK,WACH,IAEImG,GAAOgW,EAFE9U,KAAK8U,UAGlB,OAAKhW,EAMQA,aAAgBmE,EAItBnE,EAFEkB,KAAK9C,QAAQ6X,IAAIjW,IAPnB8V,GAAkBpV,IAAIQ,QACzBA,KAAK9C,QAAQwO,mBAAmB,gCAChCkJ,GAAkBlV,IAAIM,OAEjBA,KAAK9C,QAAQ8X,aAQnBH,EAzFK,CA0FZ5R,GAEEgS,GAAgB,GAEhBC,GAAgB,SAAU5R,GAG5B,SAAS4R,IACP,IAAIzX,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMkV,GAErB,IAAK,IAAI1R,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOyX,EAAc5Z,WAAa9C,OAAO+I,eAAe2T,IAAgBjd,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,gBAAyB3H,EAA0B+F,EAAlCiC,GAuE7N,OApFAtI,EAASia,EAAe5R,GAgBxBnJ,EAAY+a,EAAe,CAAC,CAC1B7b,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,SACjC+C,KAAKlB,KAAK3B,OAAOJ,EAAYY,EAAMV,KAE3C,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAO+C,KAAKlB,KAAKmH,QAAQhJ,KAE1B,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAKlB,KAAM7B,KAEhC,CACD5D,IAAK,QACLN,MAAO,WACL,IAAIsB,EAAS,IAAIoI,EAAyBzC,KAAK9C,SAC/C7C,EAAOyM,OAAS9G,KAEhB,IAAK,IAAI2H,EAAQ5M,UAAUR,OAAQsM,EAAgBjL,MAAM+L,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACzFf,EAAce,GAAS7M,UAAU6M,GAInC,OADAvN,EAAOwM,cAAgBA,EAChBxM,IAOR,CACDhB,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKlB,KAAK6D,WAElB,CACDtJ,IAAK,WACLN,MAAO,WACL,OAAOiH,KAAK3H,OAEb,CACDgB,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf7K,KAAM2H,KAAK3H,QAGd,CACDgB,IAAK,OACLV,IAAK,WACH,IAAIuE,EAAU8C,KAAK9C,QACf7E,EAAO2H,KAAK3H,KAEZyG,EAAO5B,EAAQvE,IAAIN,GACvB,OAAKyG,IACEmW,GAAc5c,KACjB6E,EAAQwO,mBAAmB,wBAAwBrT,KACnD4c,GAAc5c,IAAQ,GAEjB6E,EAAQoN,WAKd4K,EArFW,CAsFlBjS,GAEEkS,GAAoB,IAAIvW,QAExBwW,GAAevc,OAAO,gBACtBwc,GAAgBxc,OAAO,iBAEvB6J,GAAU,SAAUY,GAGtB,SAASZ,IACP,IAAIjF,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM0C,GAErB,IAAK,IAAIc,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOiF,EAAQpH,WAAa9C,OAAO+I,eAAemB,IAAUzK,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,UAAW5B,EAAM8T,SAAgBjZ,EAAWmF,EAAM+T,SAAiBlZ,EAAmBZ,EAA0B+F,EAAlCiC,GAwF9Q,OArGAtI,EAASyH,EAASY,GAsBlBnJ,EAAYuI,EAAS,CAAC,CACpBrJ,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,SACjCqY,GAAYtV,MAAM7C,OAAOJ,EAAYY,EAAMV,KAEnD,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAOqY,GAAYtV,MAAMiG,QAAQhJ,KAElC,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAamT,GAAYtV,MAAO/C,KAExC,CACD5D,IAAK,QACLN,MAAO,WACL,IAAIsB,EAAS,IAAIoI,EAAyBzC,KAAK9C,SAC/C7C,EAAOyM,OAASwO,GAAYtV,MAE5B,IAAK,IAAI2H,EAAQ5M,UAAUR,OAAQsM,EAAgBjL,MAAM+L,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACzFf,EAAce,GAAS7M,UAAU6M,GAInC,OADAvN,EAAOwM,cAAgBA,EAChBxM,IAOR,CACDhB,IAAK,SACLN,MAAO,WACL,OAAOuc,GAAYtV,MAAM2C,WAE1B,CACDtJ,IAAK,cACLN,MAAO,SAAqBV,GAC1B,IAAI2O,EAAQhH,KAAK2C,SACjB,SAAIqE,GAAsC,mBAAtBA,EAAMC,cACjBD,EAAMC,YAAY5O,KAK5B,CACDgB,IAAK,cACLN,MAAO,SAAqBV,GAC1B,IAAI2O,EAAQhH,KAAK2C,SACjB,GAAIqE,GAAsC,mBAAtBA,EAAMG,YACxB,OAAOH,EAAMG,YAAY9O,KAG5B,CACDgB,IAAK,WACLN,MAAO,WACL,OAAOuc,GAAYtV,MAAMjC,aAE1B,CACD1E,IAAK,SACLN,MAAO,WACL,OAAOuc,GAAYtV,MAAMkJ,WAE1B,CACD7P,IAAK,OACLV,IAAK,WACH,IAAIN,EAAO2H,KAAKoV,IAIhB,OAHK/c,IACHA,EAAOid,GAAYtV,MAAM3H,MAEpBA,GAET8G,IAAK,SAAgBpG,GACnBiH,KAAKoV,IAAgBrc,MAGlB2J,EAtGK,CAuGZO,GAEF,SAASqS,GAAYC,GACnB,IAAIC,EAAWD,EAAUF,IACzB,GAAIG,EACF,OAAOA,EAEP,IAEI1W,GAAOgW,EAFES,EAAUT,UAGvB,IAAKhW,EAAM,CACT,IAAKqW,GAAkB3V,IAAI+V,GAAY,CACrC,IAAIld,EAAOkd,EAAUH,IACjB/c,EACFkd,EAAUrY,QAAQwO,mBAAmB,iCAAiCrT,6BAEtEkd,EAAUrY,QAAQwO,mBAAmB,wDAEvCyJ,GAAkBzV,IAAI6V,GAExB,OAAOA,EAAUrY,QAAQ8X,QACpB,OAAMlW,aAAgBmE,EAItBnE,EAFEyW,EAAUrY,QAAQ6X,IAAIjW,GAMnC,IAAI2W,GAAY,SAAUnS,GAGxB,SAASmS,IACP,IAAIhY,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMyV,GAErB,IAAK,IAAIjS,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOgY,EAAUna,WAAa9C,OAAO+I,eAAekU,IAAYxd,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,YAAa5B,EAAMyE,MAAQ,GAAYxK,EAA0B+F,EAAlCiC,GA6FnO,OA1GAtI,EAASwa,EAAWnS,GAgBpBnJ,EAAYsb,EAAW,CAAC,CACtBpc,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GAIxC,IAHA,IAAI8I,EAAQ/F,KAAK+F,MACbxL,EAASwL,EAAMxL,OAEVzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAE/B,GADWiO,EAAMjO,GACRmO,QAAQhJ,GACf,YAGE,CAACU,EAAMgI,EAAgB,eAAgB3F,KAAKjC,YAAaiC,QAEhE,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GAItB,IAHA,IAAI8I,EAAQ/F,KAAK+F,MACbxL,EAASwL,EAAMxL,OAEVzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAE/B,GADWiO,EAAMjO,GACRmO,QAAQhJ,GACf,OAAO,EAGX,OAAO,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,IAAI8I,EAAQ/F,KAAK+F,MACjB,GAAI9I,aAAiBwY,EAAW,CAC9B,IAAIvP,EAAajJ,EAAM8I,MACnBkM,EAAiB,EACrBhB,EAAM,IAAK,IAAInZ,EAAI,EAAGA,EAAIiO,EAAMxL,OAAQzC,IAAK,CAE3C,IADA,IAAIgH,EAAOiH,EAAMjO,GACRqa,EAAI,EAAGA,EAAIjM,EAAW3L,OAAQ4X,IAAK,CAC1C,IAAI7P,EAASH,EAAarD,EAAMoH,EAAWpO,IAC3C,GAAe,IAAXwK,EAAc,CAChB2P,IACA,SAAShB,EACJ,GAAe,IAAX3O,EACT,SAAS2O,EAIb,OAAQ,EAGV,OAAIgB,IAAmBlM,EAAMxL,OACpB,EAEA,EAGT,IAAK,IAAI8B,EAAK,EAAGA,EAAK0J,EAAMxL,OAAQ8B,IAAM,CAExC,GAAI8F,EADQ4D,EAAM1J,GACMY,IAAU,EAChC,OAAO,EAGX,OAAQ,IAGX,CACD5D,IAAK,WACLN,MAAO,WAIL,IAHA,IAAIgN,EAAQ/F,KAAK+F,MAEb2P,EAAa,IAAI9Z,MAAMmK,EAAMxL,QACxBzC,EAAI,EAAGA,EAAIiO,EAAMxL,OAAQzC,IAAK,CACrC,IAAIgH,EAAOiH,EAAMjO,GACK,iBAAlBgH,EAAKoE,UAAiD,8BAAlBpE,EAAKoE,SAC3CwS,EAAW5d,GAAK,IAAIgH,EAAKf,cAEzB2X,EAAW5d,GAAKgH,EAAKf,WAGzB,OAAO2X,EAAWnX,KAAK,SAExB,CACDlF,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf6C,MAAO/F,KAAK+F,WAIX0P,EA3GO,CA4GdxS,GA0XF,IAAI0S,GAAc,WAChB,SAASA,EAAYzY,GACnBnD,EAAeiG,KAAM2V,GAErB3V,KAAK9C,QAAUA,EAqLjB,OAlLA/C,EAAYwb,EAAa,CAAC,CACxBtc,IAAK,QACLN,MAAO,SAAekE,GACpB,IAAI2Y,EAAY5V,KAAK6V,eAAe5Y,GACpC,GAAI2Y,EACF,OAAOA,EAET,IAAIE,EAAW,IAAI7U,IACnB,OAAOjB,KAAK+V,aAAa9Y,EAAO6Y,KAEjC,CACDzc,IAAK,gBACLN,MAAO,SAAuBkE,EAAO6Y,GACnC,IAAIF,EAAY5V,KAAK6V,eAAe5Y,GACpC,OAAI2Y,GAGG5V,KAAK+V,aAAa9Y,EAAO6Y,KAEjC,CACDzc,IAAK,iBACLN,MAAO,SAAwBkE,GAC7B,IAAIC,EAAU8C,KAAK9C,QAEnB,OAAc,OAAVD,EACKC,EAAQ8Y,YACI7Z,IAAVc,EACFC,EAAQ+Y,OACW,iBAAVhZ,EACTC,EAAQgZ,SACW,kBAAVjZ,EACTC,EAAQiZ,UACW,iBAAVlZ,EACTC,EAAQkZ,SAGS,iBAAVnZ,EACLC,EAAQmZ,OAAOpZ,QAEtB,IAGL,CACD5D,IAAK,eACLN,MAAO,SAAsBkE,EAAO6Y,GAClC,IAAI5Y,EAAU8C,KAAK9C,QAGnB,MAAqB,mBAAVD,EACF+C,KAAKsW,cAAcrZ,EAAO6Y,GACd,OAAV7Y,GAAmC,iBAAVA,EAC3B+C,KAAKuW,YAAYtZ,EAAO6Y,GAExB5Y,EAAQoN,QAGlB,CACDjR,IAAK,gBACLN,MAAO,SAAuBkE,EAAO6Y,GAKnC,IAJA,IAAI5Y,EAAU8C,KAAK9C,QACf3C,EAAS0C,EAAM1C,OAEf2T,EAAO,IAAItS,MAAMrB,EAAS,GACrBzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAC1BoW,EAAKpW,GAAKoF,EAAQiN,MAAMpJ,OAAOyV,aAAa,GAAK1e,GAAIoF,EAAQuZ,eAG/D,OADAvI,EAAK3T,GAAU2C,EAAQsB,OAAOtB,EAAQuZ,eAC/BvZ,EAAQwZ,GAAG/S,MAAMzG,EAASgR,KAElC,CACD7U,IAAK,cACLN,MAAO,SAAqBkE,EAAO6Y,GACjC,IAAIN,EAAWM,EAASnd,IAAIsE,GAC5B,GAAIuY,EACF,OAAOA,EAET,IAAItY,EAAU8C,KAAK9C,QAEf4B,OAAO,EAIP6X,EAAMzZ,EAAQyZ,KAAI,WACpB,OAAO7X,KAIT,GAFAgX,EAAS3W,IAAIlC,EAAO0Z,GAEhBzZ,EAAQ8I,eAAe,QAAS/I,GAClC6B,EAAOkB,KAAK4W,WAAW3Z,EAAO6Y,QACzB,GAAM7Y,aAAiBzE,OAEvB,GAAIyE,EAAM7B,cAAgB5C,OAAQ,CACvC,IAAIqe,EAAU3Z,EAAQ4Z,mBAAmB7Z,EAAM7B,aAC/C,GAAIyb,EAAS,CACX,IAAItH,EAAiBsH,EAAQE,oBAAoB9Z,GACjD6B,EAAO+X,EAAQlT,MAAMA,MAAMkT,EAASla,EAAkB4S,SAEtDzQ,EAAO5B,EAAQ6X,IAAI9X,EAAM7B,iBAEtB,CACL,IAAI8S,EAAO,GACX,IAAK,IAAI7U,KAAO4D,EAAO,CAErB,IAAIlE,EAAQkE,EAAM5D,GAClB6U,EAAK1R,KAAKU,EAAQzD,SAASJ,EAAK2G,KAAKgX,cAAcje,EAAO+c,KAE5DhX,EAAO5B,EAAQ1D,OAAOmK,MAAMzG,EAASgR,QAhBrCpP,EAAOkB,KAAKiX,UAAUha,EAAO6Y,GAqB/B,OADAA,EAAS3W,IAAIlC,EAAO6B,GACbA,IAER,CACDzF,IAAK,YACLN,MAAO,SAAmBkE,EAAO6Y,GAC/B,IAAIoB,EAAkB,GAClBC,EAAiB,GACrBlG,EAAM,IAAK,IAAI5X,KAAO4D,EAAO,CAI3B,IAFA,IAAIlE,EAAQkE,EAAM5D,GACd0M,EAAQqR,OAAO/d,GAAO8d,EAAiBD,EAClCpf,EAAI,EAAGA,EAAIiO,EAAMxL,OAAQzC,IAAK,CAErC,GADWiO,EAAMjO,GACRmO,QAAQlN,GACf,SAASkY,EAGblL,EAAMvJ,KAAKwD,KAAKgX,cAAcje,EAAO+c,IAGvC,IAAI5Y,EAAU8C,KAAK9C,QAEfgR,EAAO,GAaX,OAZ+B,IAA3BgJ,EAAgB3c,OAClB2T,EAAK1R,KAAKU,EAAQ4T,QAAQ,QAAS5T,EAAQgZ,SAAUgB,EAAgB,KAC5DA,EAAgB3c,OAAS,GAClC2T,EAAK1R,KAAKU,EAAQ4T,QAAQ,QAAS5T,EAAQgZ,SAAUhZ,EAAQ4L,MAAMnF,MAAMzG,EAASga,KAGtD,IAA1BC,EAAe5c,OACjB2T,EAAK1R,KAAKU,EAAQ4T,QAAQ,MAAO5T,EAAQkZ,SAAUe,EAAe,KACzDA,EAAe5c,OAAS,GACjC2T,EAAK1R,KAAKU,EAAQ4T,QAAQ,MAAO5T,EAAQkZ,SAAUlZ,EAAQ4L,MAAMnF,MAAMzG,EAASia,KAG3Eja,EAAQ1D,OAAOmK,MAAMzG,EAASgR,KAEtC,CACD7U,IAAK,aACLN,MAAO,SAAoBkE,EAAO6Y,GAChC,IAAI5Y,EAAU8C,KAAK9C,QAEf6I,EAAQ,GACRsR,EAAS,GACT9c,EAAS0C,EAAM1C,OAEnB0W,EAAM,IAAK,IAAInZ,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAGrC,IAFA,IAAIwf,EAAOra,EAAMnF,GACbyf,EAAevX,KAAKgX,cAAcM,EAAMxB,GACnC3D,EAAI,EAAGA,EAAIpM,EAAMxL,OAAQ4X,IAAK,CAErC,GADWpM,EAAMoM,GACRlM,QAAQqR,IAASC,EAAatR,QAAQoR,EAAOlF,IACpD,SAASlB,EAGblL,EAAMvJ,KAAK+a,GACXF,EAAO7a,KAAK8a,GAEd,OAAqB,IAAjBvR,EAAMxL,OACD2C,EAAQsa,MAAMta,EAAQoN,OACH,IAAjBvE,EAAMxL,OACR2C,EAAQsa,MAAMzR,EAAM,IAEpB7I,EAAQsa,MAAMta,EAAQ4L,MAAMnF,MAAMzG,EAAS6I,QAIjD4P,EAzLS,GAsOlB,SAAS8B,GAAmB1a,GAC1B,GAAKA,EAAWC,YAAhB,CAGA,IAAIC,EAAQF,EAAWE,MACnBC,EAAUH,EAAWG,QAErBwE,EAAY,GACZtE,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAAsDoB,EAAlDC,EAAYT,EAAWI,OAAOtE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CAClK,IAAIK,EAAOF,EAAMxE,MAEb2E,EAAQhC,EAAc+B,EAAM,GAE5BE,EAAOD,EAAM,GACbE,EAAUF,EAAM,GAChBG,EAAeH,EAAM,GAErBI,EAAWD,EAAeA,EAAaE,WAAa,IACpDC,EAASd,EAAQe,OAAOC,EAAajB,EAAOU,IAAOI,WAEnDI,EAAQC,EAAcrB,EAAWY,KAAKU,OAAOV,IAEjD+D,EAAUlF,KAAK,GAAG2B,KAASP,kBAAwBE,gBAAuBE,QAE5E,MAAOvB,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,GAKZ,MAAO,YAAYoE,EAAUnD,KA9Cb,8DAiDlB,SAASmZ,GAAUxa,EAAS6I,GAG1B,IAFA,IAAIxL,EAASwL,EAAMxL,OACfod,EAAS,GACJ7f,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAIgH,EAAOiH,EAAMjO,GACjB,GAAIgH,aAAgBgE,GAAWhE,aAAgBkE,IAAalE,aAAgBiE,EAC1E,OAAOjE,EAELA,aAAgB2W,GAClBmC,GAAgBD,EAAQ7Y,EAAKiH,OAE7B4R,EAAOnb,KAAKsC,GAGhB,IAAIgK,EAAQ,IAAI2M,GAAUvY,GAE1B,OADA4L,EAAM/C,MAAQ4R,EACP7O,EAGT,SAAS8O,GAAgBC,EAAQC,GAC/B7G,EAAM,IAAK,IAAInZ,EAAI,EAAGA,EAAIggB,EAAOvd,OAAQzC,IAAK,CAE5C,IADA,IAAIigB,EAAQD,EAAOhgB,GACVqa,EAAI,EAAGA,EAAI0F,EAAOtd,OAAQ4X,IAAK,CAEtC,IAAoC,IAAhChQ,EADQ0V,EAAO1F,GACK4F,GACtB,SAAS9G,EAGb4G,EAAOrb,KAAKub,IAIhB,SAASC,GAAuBC,EAAYhb,EAAO4R,EAAcrU,EAAY0d,GAC3E,MAA8B,mBAAnB1d,EAAW7B,KAAgD,mBAAnB6B,EAAW2E,IAgFhE,SAAkC8Y,EAAYhb,EAAO4R,EAAcrU,EAAY0d,GAE7E,IACIC,EAAe,CADHC,GAAanb,GACE4R,GAE3BwJ,EAAiB7d,EAAW2E,IAEhC3E,EAAW2E,IAAM,SAAgBpG,GAC/B,IAAI+F,EAAOwZ,GAAYtY,KAAMiY,GACzB/a,EAAU4B,EAAK5B,QACfgb,EACFhb,EAAQmG,OAAOvE,EAAM/F,EAAO,WAAYof,GAExCjb,EAAQqb,KAAKzZ,EAAM/F,EAAO,WAAYof,GAExCE,EAAepgB,KAAK+H,KAAMjH,IA9FnByf,CAAyBP,EAAYhb,EAAO4R,EAAcrU,EAAY0d,GA4BjF,SAA4BD,EAAYhb,EAAO4R,EAAcrU,EAAY0d,GACvE,IAAIO,GAvBoBpgB,EAuBQwW,EAtBzB,gBAAgBxW,KAuBnBqgB,EAAYN,GAAanb,GACzB0b,EAAcne,EAAWme,YAEzBC,GADWpe,EAAWE,SAhyNE,SAAUme,EAAKC,GAC3C,IAAIze,EAAS,GAEb,IAAK,IAAIvC,KAAK+gB,EACRC,EAAK5H,QAAQpZ,IAAM,GAClBU,OAAOkB,UAAUC,eAAe1B,KAAK4gB,EAAK/gB,KAC/CuC,EAAOvC,GAAK+gB,EAAI/gB,IAGlB,OAAOuC,EAwxNM0e,CAAwBve,EAAY,CAAC,cAAe,cAE7D2d,EAAe,CAACO,EAAW7J,GA7BjC,IAA0BxW,EA+BxB,OAAOwC,EAAS,GAAI+d,EAAQ,CAC1B9Z,KAAM,WACN,MACE,GAAI2Z,KAAYzY,KACd,OAAOA,KAAKyY,GACP,GAAIE,EAAa,CACtB,IAAI7Z,EAAOwZ,GAAYtY,KAAMiY,GACzBe,EAASL,EAAY1gB,KAAK+H,MAO9B,OANclB,EAAK5B,QACX+b,MAAMna,EAAMka,EAAQ,6BAA8Bb,GAC1D3f,OAAOC,eAAeuH,KAAMyY,EAAU,CACpC/d,UAAU,EACV3B,MAAOigB,IAEFA,EAEPxgB,OAAOC,eAAeuH,KAAMyY,EAAU,CACpC/d,UAAU,EACV3B,WAAOoD,KAIb,IAAIpD,GACF,IAAI+F,EAAOwZ,GAAYtY,KAAMiY,GACzB/a,EAAU4B,EAAK5B,QACfgb,EACFhb,EAAQmG,OAAOvE,EAAM/F,EAAO,WAAYof,GAExCjb,EAAQqb,KAAKzZ,EAAM/F,EAAO,WAAYof,GAEpCM,KAAYzY,KACdA,KAAKyY,GAAY1f,EAEjBP,OAAOC,eAAeuH,KAAMyY,EAAU,CACpC/d,UAAU,EACV3B,MAAOA,OAtENmgB,CAAmBjB,EAAYhb,EAAO4R,EAAcrU,EAAY0d,GAQ3E,SAASE,GAAanb,GACpB,MAAqB,mBAAVA,EACFA,EAAM5E,MAAQ,oBACiB,mBAAtB4E,EAAM7B,YACfgd,GAAanb,EAAM7B,aAEnB,oBAIX,SAASkd,GAAYa,EAAUlB,GAC7B,MAA0B,mBAAfA,EACFA,EAAWhgB,KAAKkhB,GAEhBlB,EA4EX,SAASmB,GAAcnc,EAAO6B,GAE5B,GAAIA,aAAgBmE,EAElB,OADAhG,EAAM4M,IAAc/K,EACb7B,EAEP,IAAIoc,EAAQpc,EACZ,OAAO,SAAUA,GAEf,OADAA,EAAM4M,IAAcwP,EACbpc,GASb,IAAIqc,GAAY,SAAUhW,GAGxB,SAASgW,IACP,IAAI7b,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMsZ,GAErB,IAAK,IAAI9V,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO6b,EAAUhe,WAAa9C,OAAO+I,eAAe+X,IAAYrhB,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,YAAqB3H,EAA0B+F,EAAlCiC,GA2FjN,OAxGAtI,EAASqe,EAAWhW,GAgBpBnJ,EAAYmf,EAAW,CAAC,CACtBjgB,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAIsc,EAAQvZ,KAAKuZ,MACbxB,EAAQ/X,KAAK+X,MAEjB,GAAc,OAAV9a,GAAmC,iBAAVA,GAAuC,mBAAVA,OAClD,CAACU,EAAMgI,EAAgB,qBAAsB3F,UADrD,CAIAuZ,EAAQA,EAAM5W,SACdoV,EAAQA,EAAMpV,SACdqJ,GAAUuN,aAAiBhJ,IAAcwH,aAAiBxH,GAAY,gCAEtE,IADA,IAAInI,EAAamR,EAAMnR,WACdtQ,EAAI,EAAGA,EAAIsQ,EAAW7N,OAAQzC,IAAK,CAC1C,IAAI2B,EAAW2O,EAAWtQ,GACtBigB,EAAM9Q,YAAYxN,EAASJ,aAGxBI,EAAS0D,OAAOJ,EAAYY,EAAKU,OAAO5E,EAASJ,KAAM4D,QAGjE,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAIsc,EAAQvZ,KAAKuZ,MACbxB,EAAQ/X,KAAK+X,MAEjB,GAAc,OAAV9a,GAAmC,iBAAVA,GAAuC,mBAAVA,EACxD,OAAO,EAETsc,EAAQA,EAAM5W,SACdoV,EAAQA,EAAMpV,SACdqJ,GAAUuN,aAAiBhJ,IAAcwH,aAAiBxH,GAAY,gCAEtE,IADA,IAAInI,EAAamR,EAAMnR,WACdtQ,EAAI,EAAGA,EAAIsQ,EAAW7N,OAAQzC,IAAK,CAC1C,IAAI2B,EAAW2O,EAAWtQ,GAC1B,IAAIigB,EAAM9Q,YAAYxN,EAASJ,OAG1BI,EAASwM,QAAQhJ,GACpB,OAAO,EAGX,OAAO,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAK2C,SAAU1F,KAEpC,CACD5D,IAAK,SACLN,MAAO,WACL,IAAIygB,EAEAD,EAAQvZ,KAAKuZ,MACbxB,EAAQ/X,KAAK+X,MAEjBwB,EAAQA,EAAM5W,SACdoV,EAAQA,EAAMpV,SACdqJ,GAAUuN,aAAiBhJ,IAAcwH,aAAiBxH,GAAY,gCAGtE,IAFA,IAAInI,EAAamR,EAAMnR,WACnB3E,EAAO,GACF3L,EAAI,EAAGA,EAAIsQ,EAAW7N,OAAQzC,IAAK,CAC1C,IAAI2B,EAAW2O,EAAWtQ,GACtBigB,EAAM9Q,YAAYxN,EAASJ,MAG/BoK,EAAKjH,KAAK/C,GAEZ,OAAQ+f,EAAWxZ,KAAK9C,SAAS1D,OAAOmK,MAAM6V,EAAU/V,KAEzD,CACDpK,IAAK,WACLN,MAAO,WACL,MAAO,SAASiH,KAAKuZ,MAAMxb,eAAeiC,KAAK+X,MAAMha,gBAEtD,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfqW,MAAOvZ,KAAKuZ,MACZxB,MAAO/X,KAAK+X,WAIXuB,EAzGO,CA0GdrW,GAIEwW,GAAiB,SAAUnW,GAG7B,SAASmW,IACP,IAAIhc,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMyZ,GAErB,IAAK,IAAIjW,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOgc,EAAene,WAAa9C,OAAO+I,eAAekY,IAAiBxhB,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,iBAA0B3H,EAA0B+F,EAAlCiC,GAoChO,OAjDAtI,EAASwe,EAAgBnW,GAgBzBnJ,EAAYsf,EAAgB,CAAC,CAC3BpgB,IAAK,SACLN,MAAO,UAAiBgE,EAAYE,GACvBlC,UAAUR,OAAS,QAAsB4B,IAAjBpB,UAAU,IAAmBA,UAAU,KAE3E,CACD1B,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAO,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAO,IAER,CACD5D,IAAK,SACLN,MAAO,WACL,OAAOiH,OAER,CACD3G,IAAK,WACLN,MAAO,WACL,MAAO,eAER,CACDM,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,cAIduW,EAlDY,CAmDnBxW,GAIEyW,GAAY,SAAUpW,GAGxB,SAASoW,IACP,IAAIjc,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM0Z,GAErB,IAAK,IAAIlW,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOic,EAAUpe,WAAa9C,OAAO+I,eAAemY,IAAYzhB,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,YAAqB3H,EAA0B+F,EAAlCiC,GA4EjN,OAzFAtI,EAASye,EAAWpW,GAgBpBnJ,EAAYuf,EAAW,CAAC,CACtBrgB,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAI6B,EAAOkB,KAAKlB,KAAK6D,SACrBqJ,GAAUlN,aAAgByR,GAAY,mCAItC,IAFA,IAAInI,EAAatJ,EAAKsJ,WAClB7N,EAAS6N,EAAW7N,OACfzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAE/B,GAAImF,IADWmL,EAAWtQ,GACHuB,IACrB,OAIJ,IADA,IAAIyf,EAAO,IAAIld,MAAMrB,GACZ8B,EAAK,EAAGA,EAAK9B,EAAQ8B,IAC5Byc,EAAKzc,GAAM+L,EAAW/L,GAAIhD,SAEtB,CAACsE,EAAMgI,EAAgB,eAAgBmT,EAAKva,KAAK,QAASyB,QAEjE,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAI6B,EAAOkB,KAAKlB,KAAK6D,SACrBqJ,GAAUlN,aAAgByR,GAAY,mCAItC,IAFA,IAAInI,EAAatJ,EAAKsJ,WAClB7N,EAAS6N,EAAW7N,OACfzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAE/B,GAAImF,IADWmL,EAAWtQ,GACHuB,IACrB,OAAO,EAGX,OAAO,IAER,CACDA,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAK2C,SAAU1F,KAEpC,CACD5D,IAAK,SACLN,MAAO,WACL,IAAIygB,EAEAtc,EAAU8C,KAAK9C,QACf4B,EAAOkB,KAAKlB,KAAK6D,SACrBqJ,GAAUlN,aAAgByR,GAAY,mCAKtC,IAHA,IAAInI,EAAatJ,EAAKsJ,WAClB7N,EAAS6N,EAAW7N,OACpBue,EAAO,IAAIld,MAAMrB,GACZzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAI2B,EAAW2O,EAAWtQ,GAC1BghB,EAAKhhB,GAAKoF,EAAQyc,QAAQlgB,EAASJ,KAErC,OAAQmgB,EAAWxZ,KAAK9C,SAAS4L,MAAMnF,MAAM6V,EAAUV,KAExD,CACDzf,IAAK,WACLN,MAAO,WACL,MAAO,SAASiH,KAAKlB,KAAKf,gBAE3B,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfpE,KAAMkB,KAAKlB,UAIV4a,EA1FO,CA2FdzW,GAIE2W,GAAe,SAAUtW,GAG3B,SAASsW,IACP,IAAInc,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM4Z,GAErB,IAAK,IAAIpW,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOmc,EAAate,WAAa9C,OAAO+I,eAAeqY,IAAe3hB,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,eAAwB3H,EAA0B+F,EAAlCiC,GAgK1N,OA7KAtI,EAAS2e,EAActW,GAgBvBnJ,EAAYyf,EAAc,CAAC,CACzBvgB,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAIzD,EAASwG,KAAKxG,OACdqgB,EAAS7Z,KAAK6Z,OACd3c,EAAU8C,KAAK9C,QAEf7C,EAASb,EAAOmJ,SAGpB,GAFAqJ,GAAU3R,aAAkBkW,GAAY,kCAE1B,OAAVtT,GAAmC,iBAAVA,GAAuC,mBAAVA,OAClD,CAACU,EAAMgI,EAAgB,qBAAsB3F,UADrD,CAKA,IAAI5C,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAAsDoB,EAAlDC,EAAYnD,EAAO+N,WAAWvP,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CAClK,IAAIuQ,EAAOpQ,EAAMxE,MAEb+gB,EAAUD,EAAOlX,SACrBqJ,GAAU8N,aAAmB9P,GAAc,mCAE3C,IAAIE,EAAa4P,EAAQC,OAAO7c,EAAQyc,QAAQhM,EAAKtU,KAAMsU,EAAK5U,OAE5DA,EAAQkE,EAAM0Q,EAAKtU,WAChB6Q,EAAW/M,OAAOJ,EAAYY,EAAKU,OAAOsP,EAAKtU,KAAMN,IAE9D,MAAO0D,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,OAKb,CACDjE,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAIzD,EAASwG,KAAKxG,OACdqgB,EAAS7Z,KAAK6Z,OACd3c,EAAU8C,KAAK9C,QAEf7C,EAASb,EAAOmJ,SAGpB,GAFAqJ,GAAU3R,aAAkBkW,GAAY,kCAE1B,OAAVtT,GAAmC,iBAAVA,GAAuC,mBAAVA,EACxD,OAAO,EAGT,IAAIqD,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkBrE,EAEtB,IACE,IAAK,IAAuDsE,EAAnDC,EAAarG,EAAO+N,WAAWvP,OAAOiD,cAAuBwE,GAA8BG,EAASC,EAAWpE,QAAQC,MAAO+D,GAA6B,EAAM,CACxK,IAAIqN,EAAOlN,EAAO1H,MAEd+gB,EAAUD,EAAOlX,SACrBqJ,GAAU8N,aAAmB9P,GAAc,mCAE3C,IAAIE,EAAa4P,EAAQC,OAAO7c,EAAQyc,QAAQhM,EAAKtU,KAAMsU,EAAK5U,OAE5DA,EAAQkE,EAAM0Q,EAAKtU,KACvB,IAAK6Q,EAAWjE,QAAQlN,GACtB,OAAO,GAGX,MAAO0D,GACP8D,GAAqB,EACrBC,EAAkB/D,EAClB,QACA,KACO6D,GAA8BI,EAAWlC,QAC5CkC,EAAWlC,SAEb,QACA,GAAI+B,EACF,MAAMC,GAKZ,OAAO,IAER,CACDnH,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAK2C,SAAU1F,KAEpC,CACD5D,IAAK,SACLN,MAAO,WACL,IAAIS,EAASwG,KAAKxG,OACdqgB,EAAS7Z,KAAK6Z,OACd3c,EAAU8C,KAAK9C,QAEf7C,EAASb,EAAOmJ,SACpBqJ,GAAU3R,aAAkBkW,GAAY,kCAExC,IAAI9M,EAAO,GAEPuW,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkB/d,EAEtB,IACE,IAAK,IAAuDge,EAAnDC,EAAa/f,EAAO+N,WAAWvP,OAAOiD,cAAuBke,GAA8BG,EAASC,EAAW9d,QAAQC,MAAOyd,GAA6B,EAAM,CACxK,IAAIrM,EAAOwM,EAAOphB,MAEd+gB,EAAUD,EAAOlX,SACrBqJ,GAAU8N,aAAmB9P,GAAc,mCAE3CvG,EAAKjH,KAAKU,EAAQzD,SAASkU,EAAKtU,IAAKygB,EAAQC,OAAO7c,EAAQyc,QAAQhM,EAAKtU,KAAMsU,EAAK5U,UAEtF,MAAO0D,GACPwd,GAAqB,EACrBC,EAAkBzd,EAClB,QACA,KACOud,GAA8BI,EAAW5b,QAC5C4b,EAAW5b,SAEb,QACA,GAAIyb,EACF,MAAMC,GAKZ,OAAOhd,EAAQ1D,OAAOmK,MAAMzG,EAASuG,KAEtC,CACDpK,IAAK,WACLN,MAAO,WACL,MAAO,YAAYiH,KAAKxG,OAAOuE,eAAeiC,KAAK6Z,OAAO9b,gBAE3D,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf1J,OAAQwG,KAAKxG,OACbqgB,OAAQ7Z,KAAK6Z,YAIZD,EA9KU,CA+KjB3W,GAIEoX,GAAc,SAAU/W,GAG1B,SAAS+W,IACP,IAAI5c,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMqa,GAErB,IAAK,IAAI7W,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO4c,EAAY/e,WAAa9C,OAAO+I,eAAe8Y,IAAcpiB,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,cAAuB3H,EAA0B+F,EAAlCiC,GAgKvN,OA7KAtI,EAASof,EAAa/W,GAgBtBnJ,EAAYkgB,EAAa,CAAC,CACxBhhB,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAIzD,EAASwG,KAAKxG,OACdqgB,EAAS7Z,KAAK6Z,OACd3c,EAAU8C,KAAK9C,QAEf7C,EAASb,EAAOmJ,SAGpB,GAFAqJ,GAAU3R,aAAkBkW,GAAY,kCAE1B,OAAVtT,GAAmC,iBAAVA,GAAuC,mBAAVA,OAClD,CAACU,EAAMgI,EAAgB,qBAAsB3F,UADrD,CAKA,IAAI5C,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAAsDoB,EAAlDC,EAAYnD,EAAO+N,WAAWvP,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CAClK,IAAIuQ,EAAOpQ,EAAMxE,MAEb+gB,EAAUD,EAAOlX,SACrBqJ,GAAU8N,aAAmB9P,GAAc,mCAE3C,IAAIE,EAAa4P,EAAQC,OAAO7c,EAAQyc,QAAQhM,EAAKtU,MAEjDN,EAAQkE,EAAM0Q,EAAKtU,WAChB6Q,EAAW/M,OAAOJ,EAAYY,EAAKU,OAAOsP,EAAKtU,KAAMN,IAE9D,MAAO0D,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,OAKb,CACDjE,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAIzD,EAASwG,KAAKxG,OACdqgB,EAAS7Z,KAAK6Z,OACd3c,EAAU8C,KAAK9C,QAEf7C,EAASb,EAAOmJ,SAGpB,GAFAqJ,GAAU3R,aAAkBkW,GAAY,kCAE1B,OAAVtT,GAAmC,iBAAVA,GAAuC,mBAAVA,EACxD,OAAO,EAGT,IAAIqD,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkBrE,EAEtB,IACE,IAAK,IAAuDsE,EAAnDC,EAAarG,EAAO+N,WAAWvP,OAAOiD,cAAuBwE,GAA8BG,EAASC,EAAWpE,QAAQC,MAAO+D,GAA6B,EAAM,CACxK,IAAIqN,EAAOlN,EAAO1H,MAEd+gB,EAAUD,EAAOlX,SACrBqJ,GAAU8N,aAAmB9P,GAAc,mCAE3C,IAAIE,EAAa4P,EAAQC,OAAO7c,EAAQyc,QAAQhM,EAAKtU,MAEjDN,EAAQkE,EAAM0Q,EAAKtU,KACvB,IAAK6Q,EAAWjE,QAAQlN,GACtB,OAAO,GAGX,MAAO0D,GACP8D,GAAqB,EACrBC,EAAkB/D,EAClB,QACA,KACO6D,GAA8BI,EAAWlC,QAC5CkC,EAAWlC,SAEb,QACA,GAAI+B,EACF,MAAMC,GAKZ,OAAO,IAER,CACDnH,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAK2C,SAAU1F,KAEpC,CACD5D,IAAK,SACLN,MAAO,WACL,IAAIS,EAASwG,KAAKxG,OACdqgB,EAAS7Z,KAAK6Z,OACd3c,EAAU8C,KAAK9C,QAEf7C,EAASb,EAAOmJ,SACpBqJ,GAAU3R,aAAkBkW,GAAY,kCAExC,IAAI9M,EAAO,GAEPuW,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkB/d,EAEtB,IACE,IAAK,IAAuDge,EAAnDC,EAAa/f,EAAO+N,WAAWvP,OAAOiD,cAAuBke,GAA8BG,EAASC,EAAW9d,QAAQC,MAAOyd,GAA6B,EAAM,CACxK,IAAIrM,EAAOwM,EAAOphB,MAEd+gB,EAAUD,EAAOlX,SACrBqJ,GAAU8N,aAAmB9P,GAAc,mCAE3CvG,EAAKjH,KAAKU,EAAQzD,SAASkU,EAAKtU,IAAKygB,EAAQC,OAAO7c,EAAQyc,QAAQhM,EAAKtU,SAE3E,MAAOoD,GACPwd,GAAqB,EACrBC,EAAkBzd,EAClB,QACA,KACOud,GAA8BI,EAAW5b,QAC5C4b,EAAW5b,SAEb,QACA,GAAIyb,EACF,MAAMC,GAKZ,OAAOhd,EAAQ1D,OAAOmK,MAAMzG,EAASuG,KAEtC,CACDpK,IAAK,WACLN,MAAO,WACL,MAAO,WAAWiH,KAAKxG,OAAOuE,eAAeiC,KAAK6Z,OAAO9b,gBAE1D,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf1J,OAAQwG,KAAKxG,OACbqgB,OAAQ7Z,KAAK6Z,YAIZQ,EA9KS,CA+KhBpX,GAIEqX,GAAgB,SAAUhX,GAG5B,SAASgX,IACP,IAAI7c,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMsa,GAErB,IAAK,IAAI9W,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO6c,EAAchf,WAAa9C,OAAO+I,eAAe+Y,IAAgBriB,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,gBAAyB3H,EAA0B+F,EAAlCiC,GA2C7N,OAxDAtI,EAASqf,EAAehX,GAgBxBnJ,EAAYmgB,EAAe,CAAC,CAC1BjhB,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,SACjC+C,KAAK2C,SAASxF,OAAOJ,EAAYY,EAAMV,KAE/C,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAO+C,KAAK2C,SAASsD,QAAQhJ,KAE9B,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAK2C,SAAU1F,KAEpC,CACD5D,IAAK,SACLN,MAAO,WACL,IAAIS,EAASwG,KAAKxG,OACdC,EAAWuG,KAAKvG,SAEhB8gB,EAAY/gB,EAAOmJ,SAEvB,OADAqJ,GAA2C,mBAA1BuO,EAAUpT,YAA4B,0CAChDoT,EAAUpT,YAAY1N,GAAUkJ,WAExC,CACDtJ,IAAK,WACLN,MAAO,WACL,MAAO,iBAAiBiH,KAAKxG,OAAOuE,eAAegD,OAAOf,KAAKvG,eAEhE,CACDJ,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf1J,OAAQwG,KAAKxG,OACbC,SAAUuG,KAAKvG,cAId6gB,EAzDW,CA0DlBrX,GAMEuX,GAAa,SAAUlX,GAGzB,SAASkX,IACP,IAAI/c,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMwa,GAErB,IAAK,IAAIhX,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAO+c,EAAWlf,WAAa9C,OAAO+I,eAAeiZ,IAAaviB,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,aAAsB3H,EAA0B+F,EAAlCiC,GAkFpN,OA/FAtI,EAASuf,EAAYlX,GAgBrBnJ,EAAYqgB,EAAY,CAAC,CACvBnhB,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAI6B,EAAOkB,KAAKlB,KAGhB,GAAc,OAAV7B,GAAmC,iBAAVA,GAAuC,mBAAVA,OAClD,CAACU,EAAMgI,EAAgB,qBAAsB3F,WAOrD,IAAK,IAAI3G,KAFT2S,GAAsC,mBADtClN,EAAOA,EAAK6D,UACUwE,YAA4B,oCAElClK,EAAO,CAErB,IAAIxD,EAAWqF,EAAKqI,YAAY9N,GAC3BI,UAGEA,EAAS0D,OAAOJ,EAAYY,EAAMV,OAG5C,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAI6B,EAAOkB,KAAKlB,KAEhB,GAAc,OAAV7B,GAAmC,iBAAVA,GAAuC,mBAAVA,EACxD,OAAO,EAIT,IAAK,IAAI5D,KADT2S,GAAsC,mBADtClN,EAAOA,EAAK6D,UACUwE,YAA4B,oCAClClK,EAAO,CAErB,IAAIxD,EAAWqF,EAAKqI,YAAY9N,GAChC,IAAKI,IAAaA,EAASwM,QAAQhJ,GACjC,OAAO,EAGX,OAAO,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAK2C,SAAU1F,KAEpC,CACD5D,IAAK,SACLN,MAAO,WACL,IAAIygB,EAEA1a,EAAOkB,KAAKlB,KAEhBA,EAAOA,EAAK6D,SACZ,IAAIzF,EAAU8C,KAAK9C,QACnB8O,GAAUlN,aAAgByR,GAAY,oCAGtC,IAFA,IAAInI,EAAatJ,EAAKsJ,WAClB3E,EAAO,IAAI7H,MAAMwM,EAAW7N,QACvBzC,EAAI,EAAGA,EAAIsQ,EAAW7N,OAAQzC,IAAK,CAC1C,IAAI2B,EAAW2O,EAAWtQ,GAC1B2L,EAAK3L,GAAKoF,EAAQzD,SAASA,EAASJ,IAAKI,EAASV,OAAO,GAE3D,OAAQygB,EAAWxZ,KAAK9C,SAAS1D,OAAOmK,MAAM6V,EAAU/V,KAEzD,CACDpK,IAAK,WACLN,MAAO,WACL,MAAO,UAAUiH,KAAKlB,KAAKf,gBAE5B,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfpE,KAAMkB,KAAKlB,UAIV0b,EAhGQ,CAiGfvX,GAIEwX,GAAW,SAAUnX,GAGvB,SAASmX,IACP,IAAIhd,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMya,GAErB,IAAK,IAAIjX,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOgd,EAASnf,WAAa9C,OAAO+I,eAAekZ,IAAWxiB,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,WAAoB3H,EAA0B+F,EAAlCiC,GAqC9M,OAlDAtI,EAASwf,EAAUnX,GAgBnBnJ,EAAYsgB,EAAU,CAAC,CACrBphB,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,SACjC+C,KAAKlB,KAAK3B,OAAOF,EAAOU,KAEhC,CACDtE,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAO+C,KAAKlB,KAAKmH,QAAQhJ,KAE1B,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAK2C,SAAU1F,KAEpC,CACD5D,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKlB,OAEb,CACDzF,IAAK,WACLN,MAAO,WACL,MAAO,YAAYiH,KAAKlB,KAAKf,gBAE9B,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfpE,KAAMkB,KAAKlB,UAIV2b,EAnDM,CAoDbxX,GAIEyX,GAAa,SAAUpX,GAGzB,SAASoX,IACP,IAAIjd,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM0a,GAErB,IAAK,IAAIlX,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOid,EAAWpf,WAAa9C,OAAO+I,eAAemZ,IAAaziB,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,aAAsB3H,EAA0B+F,EAAlCiC,GAqCpN,OAlDAtI,EAASyf,EAAYpX,GAgBrBnJ,EAAYugB,EAAY,CAAC,CACvBrhB,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,SACjC+C,KAAKlB,KAAK3B,OAAOJ,EAAYY,EAAMV,KAE3C,CACD5D,IAAK,UACLN,MAAO,SAAiBkE,GACtB,OAAO+C,KAAKlB,KAAKmH,QAAQhJ,KAE1B,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAK2C,SAAU1F,KAEpC,CACD5D,IAAK,SACLN,MAAO,WACL,OAAOiH,KAAKlB,OAEb,CACDzF,IAAK,WACLN,MAAO,WACL,MAAO,cAAciH,KAAKlB,KAAKf,gBAEhC,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfpE,KAAMkB,KAAKlB,UAIV4b,EAnDQ,CAoDfzX,GAIE0X,GAAgB,SAAUrX,GAG5B,SAASqX,IACP,IAAIld,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM2a,GAErB,IAAK,IAAInX,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOkd,EAAcrf,WAAa9C,OAAO+I,eAAeoZ,IAAgB1iB,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,gBAAyB3H,EAA0B+F,EAAlCiC,GA8F7N,OA3GAtI,EAAS0f,EAAerX,GAgBxBnJ,EAAYwgB,EAAe,CAAC,CAC1BthB,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAI2d,EAAQ5a,KAAK4a,MACbf,EAAS7Z,KAAK6Z,OACd3c,EAAU8C,KAAK9C,QAEf7C,EAASugB,EAAMjY,SAGnB,GAFAqJ,GAAU3R,aAAkByL,EAAW,gCAElC5I,EAAQ8I,eAAe,QAAS/I,GAKrC,IAAK,IAAInF,EAAI,EAAGA,EAAIuC,EAAO0L,MAAMxL,OAAQzC,IAAK,CAC5C,IAAIgH,EAAOzE,EAAO0L,MAAMjO,GACpBgiB,EAAUD,EAAOlX,SACrBqJ,GAAU8N,aAAmB9P,GAAc,mCAE3C,IAAIlM,EAAWgc,EAAQC,OAAOjb,GAC1B/F,EAAQkE,EAAMnF,SACXgG,EAASX,OAAOJ,EAAYY,EAAKU,OAAOvG,GAAIiB,aAX7C,CAAC4E,EAAMgI,EAAgB,oBAAqB3F,QAcrD,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAI2d,EAAQ5a,KAAK4a,MACbf,EAAS7Z,KAAK6Z,OACd3c,EAAU8C,KAAK9C,QAEf7C,EAASugB,EAAMjY,SAGnB,GAFAqJ,GAAU3R,aAAkByL,EAAW,iCAElC5I,EAAQ8I,eAAe,QAAS/I,GACnC,OAAO,EAGT,IAAK,IAAInF,EAAI,EAAGA,EAAIuC,EAAO0L,MAAMxL,OAAQzC,IAAK,CAC5C,IAAIgH,EAAOzE,EAAO0L,MAAMjO,GACpBgiB,EAAUD,EAAOlX,SAGrB,GAFAqJ,GAAU8N,aAAmB9P,GAAc,oCAEtC8P,EAAQC,OAAOjb,GAAMmH,QAAQhJ,EAAMnF,IACtC,OAAO,EAGX,OAAO,IAER,CACDuB,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAK2C,SAAU1F,KAEpC,CACD5D,IAAK,SACLN,MAAO,WACL,IAAI6hB,EAAQ5a,KAAK4a,MACbf,EAAS7Z,KAAK6Z,OACd3c,EAAU8C,KAAK9C,QAEf7C,EAASugB,EAAMjY,SACnBqJ,GAAU3R,aAAkByL,EAAW,iCAGvC,IADA,IAAIrC,EAAO,GACF3L,EAAI,EAAGA,EAAIuC,EAAO0L,MAAMxL,OAAQzC,IAAK,CAC5C,IAAIgH,EAAOzE,EAAO0L,MAAMjO,GACpBgiB,EAAUD,EAAOlX,SACrBqJ,GAAU8N,aAAmB9P,GAAc,mCAE3CvG,EAAKjH,KAAKsd,EAAQC,OAAOjb,GAAM6D,SAASA,UAG1C,OAAOzF,EAAQ0d,MAAMjX,MAAMzG,EAASuG,KAErC,CACDpK,IAAK,WACLN,MAAO,WACL,MAAO,aAAaiH,KAAK4a,MAAM7c,eAAeiC,KAAK6Z,OAAO9b,gBAE3D,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf0X,MAAO5a,KAAK4a,MACZf,OAAQ7Z,KAAK6Z,YAIZc,EA5GW,CA6GlB1X,GAIE4X,GAAc,SAAUvX,GAG1B,SAASuX,IACP,IAAIpd,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAM6a,GAErB,IAAK,IAAIrX,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOod,EAAYvf,WAAa9C,OAAO+I,eAAesZ,IAAc5iB,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,cAAuB3H,EAA0B+F,EAAlCiC,GA0EvN,OAvFAtI,EAAS4f,EAAavX,GAgBtBnJ,EAAY0gB,EAAa,CAAC,CACxBxhB,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAI6B,EAAOkB,KAAKlB,KAAK6D,SACrBqJ,GAAUlN,aAAgByR,GAAY,qCAItC,IAFA,IAAInI,EAAatJ,EAAKsJ,WAClB7N,EAAS6N,EAAW7N,OACfzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAE/B,GADesQ,EAAWtQ,GACbiB,MAAMkN,QAAQhJ,GACzB,OAIJ,IADA,IAAIoa,EAAS,IAAIzb,MAAMrB,GACd8B,EAAK,EAAGA,EAAK9B,EAAQ8B,IAC5Bgb,EAAOhb,GAAM+L,EAAW/L,GAAItD,MAAMgF,gBAE9B,CAACJ,EAAMgI,EAAgB,eAAgB0R,EAAO9Y,KAAK,QAASyB,QAEnE,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAI6B,EAAOkB,KAAKlB,KAAK6D,SACrBqJ,GAAUlN,aAAgByR,GAAY,qCAItC,IAFA,IAAInI,EAAatJ,EAAKsJ,WAClB7N,EAAS6N,EAAW7N,OACfzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAE/B,GADesQ,EAAWtQ,GACbiB,MAAMkN,QAAQhJ,GACzB,OAAO,EAGX,OAAO,IAER,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,OAAOkF,EAAanC,KAAK2C,SAAU1F,KAEpC,CACD5D,IAAK,SACLN,MAAO,WACL,IAAImE,EAAU8C,KAAK9C,QACf4B,EAAOkB,KAAKlB,KAAK6D,SACrBqJ,GAAUlN,aAAgByR,GAAY,qCAKtC,IAHA,IAAInI,EAAatJ,EAAKsJ,WAClB7N,EAAS6N,EAAW7N,OACpB8c,EAAS,IAAIzb,MAAMrB,GACdzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAI2B,EAAW2O,EAAWtQ,GAC1Buf,EAAOvf,GAAK2B,EAASV,MAEvB,OAAOmE,EAAQ4L,MAAMnF,MAAMzG,EAASma,KAErC,CACDhe,IAAK,WACLN,MAAO,WACL,MAAO,WAAWiH,KAAKlB,KAAKf,gBAE7B,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACfpE,KAAMkB,KAAKlB,UAIV+b,EAxFS,CAyFhB5X,GAEF,SAAS6X,GAAiB5d,EAASY,EAAUb,GAC3C,IAAI4O,EAAO/N,EAAS+N,KAEpB,GAAoB,mBAATA,EAET,OAAO,EACF,GAAIA,IAAS5O,GAAS4O,EAAKE,cAAc9O,GAC9C,OAAO,EAGT,IAAIgN,EAAa/M,EAAQ4O,cAAcD,GACvC,OAAkB,MAAd5B,GAGK8Q,GAAU7d,EAAS+M,EAAYhN,GAI1C,SAAS8d,GAAU7d,EAASY,EAAUb,GACpC,IAAIgN,EAAa/M,EAAQ4O,cAAc7O,GACvC,OAAkB,MAAdgN,IAEiB,IADN9H,EAAarE,EAAUmM,GAMxC,IAtiDgC/M,GArWAlE,GA24D5BgiB,GAAY,SAAU1X,GAGxB,SAAS0X,IACP,IAAIvd,EAEA8F,EAAOjC,EAEXvH,EAAeiG,KAAMgb,GAErB,IAAK,IAAIxX,EAAOzI,UAAUR,OAAQkJ,EAAO7H,MAAM4H,GAAOE,EAAO,EAAGA,EAAOF,EAAME,IAC3ED,EAAKC,GAAQ3I,UAAU2I,GAGzB,OAAeH,EAASjC,EAAQ/F,EAA0ByE,MAAOvC,EAAOud,EAAU1f,WAAa9C,OAAO+I,eAAeyZ,IAAY/iB,KAAK0L,MAAMlG,EAAM,CAACuC,MAAM3B,OAAOoF,KAAiBnC,EAAM4B,SAAW,YAAqB3H,EAA0B+F,EAAlCiC,GA2DjN,OAxEAtI,EAAS+f,EAAW1X,GAgBpBnJ,EAAY6gB,EAAW,CAAC,CACtB3hB,IAAK,SACLN,MAAO,UAAiBgE,EAAYY,EAAMV,GACxC,IAAIge,EAAejb,KAAKib,aACpB/d,EAAU8C,KAAK9C,QAEnB,GAAqB,mBAAVD,EAAX,CAIA,IAAIY,EAAyC,qBAA1Bod,EAAa/X,SAAkC+X,EAAeA,EAAatY,UAChF9E,aAAwB8N,GAAcmP,GAAiB5d,EAASW,EAAcZ,GAAS8d,GAAU7d,EAASW,EAAcZ,WAE9H,CAACU,EAAMgI,EAAgB,mBAAoBsV,EAAald,YAAaiC,iBANrE,CAACrC,EAAMgI,EAAgB,mBAAoBsV,EAAald,YAAaiC,QAS9E,CACD3G,IAAK,UACLN,MAAO,SAAiBkE,GACtB,IAAIge,EAAejb,KAAKib,aACpB/d,EAAU8C,KAAK9C,QAEnB,GAAqB,mBAAVD,EACT,OAAO,EAET,IAAIY,EAAyC,qBAA1Bod,EAAa/X,SAAkC+X,EAAeA,EAAatY,SAC9F,OAAI9E,aAAwB8N,GACnBmP,GAAiB5d,EAASW,EAAcZ,GAExC8d,GAAU7d,EAASW,EAAcZ,KAG3C,CACD5D,IAAK,cACLN,MAAO,SAAqBkE,GAC1B,IAAIge,EAAejb,KAAKib,aAExB,OAAIhe,aAAiB+d,EACZ7Y,EAAa8Y,EAAche,EAAMge,eAElC,IAET,CACD5hB,IAAK,WACLN,MAAO,WACL,MAAO,SAASiH,KAAKib,aAAald,gBAEnC,CACD1E,IAAK,SACLN,MAAO,WACL,MAAO,CACLmK,SAAUlD,KAAKkD,SACf+X,aAAcjb,KAAKib,kBAIlBD,EAzEO,CA0Ed/X,GAMEiY,GAA0B,IAAItc,QAE9Buc,GAAc,WAChB,SAASA,IACPphB,EAAeiG,KAAMmb,GACrBnb,KAAK/G,KAAO,SACZ+G,KAAKwJ,IAAsB,GAC3BxJ,KAAK+J,IAA+B,GACpC/J,KAAK2J,IAAiC,IAAI1I,IAC1CjB,KAAK4J,IAAkB,IAAI+L,GAAY3V,MACvCA,KAAKyJ,IAAwB,GA4uC/B,OAjtCAtP,EAAYghB,EAAa,CAAC,CACxB9hB,IAAK,gBACLN,MAAO,SAA0BgE,GAC/B,OAAOD,EAAcC,KAEtB,CACD1D,IAAK,gBACLN,MAAO,SAA0BgE,GAC/B,OAAO0E,EAAc1E,KAEtB,CACD1D,IAAK,gBACLN,MAAO,WACL,IAAImE,EAAU,IAAIie,EAGlB,OADAje,EAAQqM,IAAgBvJ,KACjB9C,IAER,CACD7D,IAAK,SACLN,MAAO,SAAgBkE,GAErB,IAAIgN,EAAajK,KAAK8L,cAAc7O,GACpC,GAAIgN,EACF,MAAqB,mBAAVhN,IAAyBgN,aAAsBwE,IAAoBxE,aAAsBwF,IAC3FzP,KAAKob,MAAMnR,GAEbA,EAGT,IAAIoR,EAAWrb,KAAK4J,IAGpB,OAAOyR,EAASC,MAAMre,KAEvB,CACD5D,IAAK,eACLN,MAAO,SAAyBqJ,EAAGC,GACjC,OAAOF,EAAaC,EAAGC,KAExB,CACDhJ,IAAK,MACLN,MAAO,SAAgBV,GAIrB,IAFA,IAAIif,EAAOtX,KAAKwJ,IAAoBnR,GAE3BmL,EAAOzI,UAAUR,OAAQghB,EAAgB3f,MAAM4H,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACvG6X,EAAc7X,EAAO,GAAK3I,UAAU2I,GAGtC,GAAY,MAAR4T,EAAc,CAEhB,IADA,IAAIvI,EAA0B,mBAATuI,EAAsB,IAAIA,EAAKtX,MAAQsX,EACnDxf,EAAI,EAAGA,EAAIyjB,EAAchhB,OAAQzC,IAAK,CAC7C,IAAI+W,EAAe0M,EAAczjB,GACjC,GAAmC,mBAAxBiX,EAAQ5H,YACjB,OAGF,KADA4H,EAAUA,EAAQ5H,YAAY0H,IAE5B,OAEFE,EAAUA,EAAQpM,SAEpB,OAAOoM,EAGT,IAAIjI,EAAS9G,KAAKuJ,IAClB,GAAIzC,EAAQ,CACV,IAAI0U,EAAa1U,EAAOnO,IAAIgL,MAAMmD,EAAQ,CAACzO,GAAMgG,OAAO1B,EAAkB4e,KAC1E,GAAIC,EACF,OAAOA,EAKX,GAA4B,mBAAjBC,OAAOpjB,GAAsB,CACtC,IAAIgC,EAAS,IAAIsR,GAAY3L,MAK7B,OAJA3F,EAAOhC,KAAOA,EACdgC,EAAOwR,KAAO4P,OAAOpjB,GAErB2H,KAAKwJ,IAAoBnR,GAAQgC,EAC1BA,KASV,CACDhB,IAAK,eACLN,MAAO,SAAsBV,GAC3B,IAAIif,EAAOtX,KAAK+J,IAA6B1R,GAC7C,GAAIif,EACF,OAAOA,EAET,IAAIxQ,EAAS9G,KAAKuJ,IAClB,OAAIzC,EACKA,EAAO4U,aAAarjB,QAD7B,IAWD,CACDgB,IAAK,eACLN,MAAO,SAAsBV,EAAMsjB,GACjC3b,KAAK+J,IAA6B1R,GAAQsjB,IAS3C,CACDtiB,IAAK,iBACLN,MAAO,SAAwBV,EAAM4E,GACnC,IAAI0e,EAAY3b,KAAK0b,aAAarjB,GAClC,QAAIsjB,GACKA,EAAU1e,KAUpB,CACD5D,IAAK,WACLN,MAAO,SAAkB+F,EAAMoZ,GAC7B,IAAI0D,EAAS5b,KAKb,OAHoB,MAAhBkY,IACFA,EAA6B,WAAdlY,KAAK/G,MAEf,SAAUgE,EAAO4R,EAAcrU,GACpC,OAAIA,GAAsC,iBAAjBqU,EAChBmJ,GAAuBlZ,EAAM7B,EAAO4R,EAAcrU,EAAYqhB,QAAQ3D,KAE7ElM,GAA0B,mBAATlN,EAAqB,sDAC/B8c,EAAOE,SAAS7e,EAAO6B,OAWnC,CACDzF,IAAK,WACLN,MAAO,SAAkBkE,EAAO6B,GAC9B,YAAa3C,IAAT2C,EACKsa,GAAcnc,GAEdmc,GAAcnc,EAAO6B,KAG/B,CACDzF,IAAK,gBACLN,MAAO,SAAuBkE,GAC5B,GAAc,OAAVA,GAAmC,iBAAVA,GAAuC,mBAAVA,EAExD,OAAOA,EAAM4M,MAGhB,CACDxQ,IAAK,gBACLN,MAAO,SAAuBkE,GAC5B,OAAa,MAATA,KAGKA,EAAM4M,MAGhB,CACDxQ,IAAK,gBACLN,MAAO,SAAuBkE,EAAO6B,GAEnC,OADA7B,EAAM4M,IAAc/K,EACb7B,IAER,CACD5D,IAAK,OACLN,MAAO,SAAcV,EAAMghB,GACzB,GAAqB,mBAAVA,EAAsB,CAC/B,IAAIhf,EAAS,IAAIiZ,GAAuBtT,MAGxC,OAFA3F,EAAOhC,KAAOA,EACdgC,EAAOqZ,YAAc2F,EACdhf,EAEP,IAAI0hB,EAAU,IAAIxZ,EAAUvC,MAG5B,OAFA+b,EAAQ1jB,KAAOA,EACf0jB,EAAQjd,KAAOua,EACR0C,IAGV,CACD1iB,IAAK,UACLN,MAAO,SAAiBV,EAAMyG,GAY5B,IAVIzG,aAAgBwU,IAGTxU,aAAgBkK,KADzBlK,GADAyG,EAAOzG,GACKA,MAKM,mBAATyG,IACTA,EAAOkB,KAAKlB,KAAKzG,EAAMyG,IAErBA,aAAgB0O,GAGlB,OAFqBxN,KAAKyJ,IACXpR,GAAQyG,EAChBA,EAEPkN,GAA0B,iBAAT3T,EAAmB,yBACpC2T,GAAUlN,aAAgBmE,EAAM,wCAChC,IAAI+Y,EAAehc,KAAKwJ,IAExB,GAAI1K,aAAgB+N,GAElB,OADAmP,EAAa3jB,GAAQyG,EACdA,EACF,GAAIA,aAAgByD,GAAazD,aAAgBwU,GAAwB,CAC9E,IAAIjZ,EAAS,IAAI2S,GAAgBhN,MAIjC,OAHA3F,EAAOhC,KAAOA,EACdgC,EAAO6S,UAAYpO,EACnBkd,EAAa3jB,GAAQgC,EACdA,EAEP,IAAI4hB,EAAWjc,KAAKkc,IAAI7jB,EAAMyG,GAE9B,OADAkd,EAAa3jB,GAAQ4jB,EACdA,IAIZ,CACD5iB,IAAK,eACLN,MAAO,YACL,IAAIijB,EAAehc,KAAKwJ,IACxB,IAAK,IAAInQ,KAAO2iB,OAER,CAAC3iB,EAAK2iB,EAAa3iB,MAG5B,CACDA,IAAK,UACLN,MAAO,YACL,IAAIojB,EAAiBnc,KAAKyJ,IAC1B,IAAK,IAAIpQ,KAAO8iB,QAERA,EAAe9iB,KAGxB,CACDA,IAAK,SACLN,MAAO,SAAiB+U,GACtB,IAAIqO,EAAiBnc,KAAKyJ,IAC1B,GAAI0S,EAAerO,GACjB,OAAOqO,EAAerO,GAGxB,IAAIsO,EAAoBtO,EAAWQ,MAAM,KAIrCzW,EAASskB,EAHYzgB,EAAc0gB,EAAmB,GAC5B,IAG9B,GAAIvkB,EACF,OAAOA,EAAOoW,OAAOH,GAEvB,IAAIhH,EAAS9G,KAAKuJ,IAClB,OAAIzC,EACKA,EAAOmH,OAAOH,QADvB,IAID,CACDzU,IAAK,yBACLN,MAAO,SAAgC0E,GACrC,IAAIpF,EAAOoF,EAAKpF,KACZwT,EAAOpO,EAAKoO,KACZ3I,EAAWzF,EAAKyF,SAChB/F,EAASM,EAAKN,OACd8I,EAAUxI,EAAKwI,QACf8Q,EAAsBtZ,EAAKsZ,oBAC3BnU,EAAcnF,EAAKmF,YAEnBoZ,EAAehc,KAAKwJ,IAEpBwS,EAAa3jB,IACf2H,KAAK0L,mBAAmB,qBAAqBrT,8BAG/C,IAAIgC,EAAS,IAAIoR,GAAgBzL,MAajC,GAZA3F,EAAOhC,KAAOA,EACdgC,EAAO6I,SAAWA,EAClB7I,EAAOwR,KAAOA,EACdxR,EAAO8C,OAASA,EAChB9C,EAAO4L,QAAUA,EACjB5L,EAAO0c,oBAAsBA,EACF,mBAAhBnU,IACTvI,EAAOuI,YAAcA,GAGvBoZ,EAAa3jB,GAAQgC,EAED,mBAATwR,EAAqB,CAE9B,IAAIwQ,EAAkBrc,KAAK2J,IAGvB0S,EAAgB7c,IAAIqM,IACtB7L,KAAK0L,mBAAmB,iEAAiErT,MAE3FgkB,EAAgBld,IAAI0M,EAAMxR,GAE5B,OAAOA,IAER,CACDhB,IAAK,qBACLN,MAAO,SAA4B8S,GAEjC,IAAIwQ,EAAkBrc,KAAK2J,IAG3B,OAAO0S,EAAgB1jB,IAAIkT,KAE5B,CACDxS,IAAK,UACLN,MAAO,SAAiBkE,GACtB,YAAcd,IAAVc,EACK+C,KAAKiW,OACO,OAAVhZ,EACF+C,KAAKgW,OACc,kBAAV/Y,EACT+C,KAAKmW,QAAQlZ,GACM,iBAAVA,EACT+C,KAAKkW,OAAOjZ,GACO,iBAAVA,EACT+C,KAAKoW,OAAOnZ,GAGK,iBAAVA,EACL+C,KAAKqW,OAAOpZ,GAEZ+C,KAAK/B,OAAOhB,KAGxB,CACD5D,IAAK,OACLN,MAAO,WACL,OAAOe,EAAekc,OAEvB,CACD3c,IAAK,WACLN,MAAO,SAAkB+F,GACvB,IAAIzE,EAAS,IAAI8R,GAAanM,MAE9B,OADA3F,EAAOyE,KAAOA,EACPzE,IAER,CACDhB,IAAK,cACLN,MAAO,WACL,OAAOe,EAAe2c,cAEvB,CACDpd,IAAK,QACLN,MAAO,WACL,OAAOe,EAAeoR,QAEvB,CACD7R,IAAK,MACLN,MAAO,WACL,OAAOe,EAAewQ,MAEvB,CACDjR,IAAK,QACLN,MAAO,WACL,OAAOe,EAAekb,QAEvB,CACD3b,IAAK,OACLN,MAAO,WACL,OAAOe,EAAemc,OAEvB,CACD5c,IAAK,OACLN,MAAO,SAAekE,GACpB,IAAI5C,EAAS,IAAIsa,GAAS3U,MAI1B,YAHc7D,IAAVc,IACF5C,EAAOoO,SAAWxL,GAEb5C,IAER,CACDhB,IAAK,SACLN,MAAO,SAAgBkE,GACrB,QAAcd,IAAVc,EAAqB,CACvB,IAAI5C,EAAS,IAAI+Y,GAAmBpT,MAEpC,OADA3F,EAAOtB,MAAQkE,EACR5C,EAEP,OAAOP,EAAeoc,SAGzB,CACD7c,IAAK,UACLN,MAAO,SAAiBkE,GACtB,QAAcd,IAAVc,EAAqB,CACvB,IAAI5C,EAAS,IAAIqM,EAAmB1G,MAEpC,OADA3F,EAAOtB,MAAQkE,EACR5C,EAEP,OAAOP,EAAeqc,UAGzB,CACD9c,IAAK,SACLN,MAAO,SAAgBkE,GACrB,QAAcd,IAAVc,EAAqB,CACvB,IAAI5C,EAAS,IAAIka,GAAkBvU,MAEnC,OADA3F,EAAOtB,MAAQkE,EACR5C,EAEP,OAAOP,EAAesc,SAGzB,CACD/c,IAAK,SACLN,MAAO,SAAgBkE,GACrB,QAAcd,IAAVc,EAAqB,CACvB,IAAI5C,EAAS,IAAIoa,GAAkBzU,MAEnC,OADA3F,EAAOtB,MAAQkE,EACR5C,EAEP,OAAOP,EAAeuc,SAGzB,CACDhd,IAAK,gBACLN,MAAO,SAAuB4P,EAAIJ,EAAOK,GACvC,IAAIvO,EAAS,IAAImI,EAAcxC,MAI/B,OAHA3F,EAAOsO,GAAKA,EACZtO,EAAOkO,MAAQA,EACflO,EAAOmO,QAAUI,EACVvO,IAER,CACDhB,IAAK,WACLN,MAAO,SAAkB8P,GACvB,OA94NN,SAA+BA,GAC7B,IAAI2M,EAAW3M,EAAcR,GAC7B,GAAImN,EACF,OAAOA,EAGT,IAAInb,EAAS,IAAIwI,EAAagG,EAAc3L,SAG5C,OAFA7C,EAAOwO,cAAgBA,EACvBA,EAAcR,GAAkBhO,EACzBA,EAq4NIiiB,CAAsBzT,KAO9B,CACDxP,IAAK,qBACLN,MAAO,SAA4BiI,GACjC,IAAIub,EAAoB/jB,OAAO+I,eAAeP,GAE1Cwb,EAAkBD,GAAqB/jB,OAAO+I,eAAegb,GAE7DE,EAAcD,GAAmBA,EAAgBphB,YAErD,IAAKqhB,EAEH,OADAzc,KAAK0L,mBAAmB,iEACjB1K,EAGT,IAAI0b,EAAwBD,EAAY3S,IAExC,GAAI4S,EAAuB,CAIzB,IAHA,IAAInN,EAAiBvO,EAAQ0b,GACzB5D,EAAOtgB,OAAOsgB,KAAKvJ,GAEd5H,EAAQ5M,UAAUR,OAAQsM,EAAgBjL,MAAM+L,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7Gf,EAAce,EAAQ,GAAK7M,UAAU6M,GAIvC,IADA,IAAIrN,EAAS4V,KAAKC,IAAI0I,EAAKve,OAAQsM,EAActM,QACxCzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAI6kB,EAAYpN,EAAeuJ,EAAKhhB,IACpC6kB,EAAUpU,MAAQ1B,EAAc/O,IAGpC,OAAOkJ,IAER,CACD3H,IAAK,SACLN,MAAO,SAAgBV,EAAM6V,GAC3B,IAAI7T,EAAS,IAAImT,GAAkBxN,MACnC3F,EAAOhC,KAAOA,EACd,IAAI2V,EAAehO,KAAK4c,gBAQxB,OANA5O,EAAazE,IAAgBvJ,KAE7BgO,EAAatE,IAAuBrP,EAEpCA,EAAO2T,aAAeA,EACtBE,EAAKF,GACE3T,IAER,CACDhB,IAAK,gBACLN,MAAO,SAAuB+F,GAC5B,IAAI+d,EAAgB7c,KAAK0J,IACzB,IAAKmT,EACH,MAAM,IAAI1Z,MAAM,sDAElB,IAAI9I,EAAS,IAAImU,GAAcxO,MAG/B,OAFA3F,EAAOyE,KAAOA,EACd+d,EAAcpP,cAAgBpT,EACvBA,IAER,CACDhB,IAAK,MACLN,MAAO,SAAcV,EAAMyG,GACzB,IAAIzE,EAAS,IAAIyS,GAAe9M,MAGhC,OAFA3F,EAAOhC,KAAOA,EACdgC,EAAOyE,KAAOA,EACPzE,IAER,CACDhB,IAAK,QACLN,MAAO,SAAgBV,EAAMykB,GAC3B,GAAoB,mBAATA,EAAqB,CAC9B,IAAIC,EAAW,IAAItN,GAA8BzP,MAGjD,OAFA+c,EAAS1kB,KAAOA,EAChB0kB,EAASjN,YAAcgN,EAChBC,EAET,IAAI1iB,EAAS,IAAIoU,GAAiBzO,MAClC3F,EAAOhC,KAAOA,EAEd,IAAK,IAAI2P,EAAQjN,UAAUR,OAAQyiB,EAAOphB,MAAMoM,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACpG+U,EAAK/U,EAAQ,GAAKlN,UAAUkN,GAGlB,MAAR6U,GACFE,EAAKC,QAAQH,GAOf,IALA,IA4BMI,EA5BF3iB,EAASyiB,EAAKziB,OAEd6N,EAAa,GACb8F,OAAO,EAEFpW,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAIwf,EAAO0F,EAAKllB,GAChB,GAAIwf,aAAgBlL,IAAsBkL,aAAgB7K,GACxDrE,EAAW5L,KAAK8a,QACX,GAAIA,aAAgB/G,GACzBvE,IAAWkC,EAAM,0CACjBA,EAAOoJ,OACF,GAAIA,aAAgBhH,GACzBtE,IAAW3R,EAAOc,WAAY,0CAC9Bd,EAAOc,WAAamc,MACf,IAAY,MAARA,GAAgC,iBAATA,GAAuBA,aAAgBrU,EAMvE,MAAM,IAAIE,MAAM,4DALhB,IAAK,IAAI0L,KAAgByI,EAEvBlP,EAAW5L,KAAKwD,KAAKvG,SAASoV,EAAcyI,EAAKzI,OAMlDX,IACHA,EAAO,IAAIqC,GAAWvQ,OAEpBoI,EAAW7N,UAGZ2iB,EAAmBhP,EAAK9F,YAAY5L,KAAKmH,MAAMuZ,EAAkB9U,GAGpE,OADA/N,EAAO6T,KAAOA,EACP7T,IAER,CACDhB,IAAK,UACLN,MAAO,SAAkBiI,GAGvB,IAFA,IAAI3G,EAAS,IAAIiW,GAAmBtQ,MAE3BgL,EAAQjQ,UAAUR,OAAQsM,EAAgBjL,MAAMoP,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IAC7GpE,EAAcoE,EAAQ,GAAKlQ,UAAUkQ,GAIvC,OADA5Q,EAAOyE,KAAOkB,KAAK+U,IAAIpR,MAAM3D,KAAM,CAACgB,GAAS3C,OAAO1B,EAAkBkK,KAC/DxM,IAER,CACDhB,IAAK,KACLN,MAAO,SAAY+jB,GACjB,IAAK,IAAInN,EAAQ5U,UAAUR,OAAQyiB,EAAOphB,MAAM+T,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACpGoN,EAAKpN,EAAQ,GAAK7U,UAAU6U,GAG9B,OAAO5P,KAAKqU,SAAS1Q,MAAM3D,KAAM,CAAC8c,GAAMze,OAAO2e,MAEhD,CACD3jB,IAAK,WACLN,MAAO,SAAmB+jB,GACxB,GAAoB,mBAATA,EAAqB,CAC9B,IAAIK,EAAW,IAAItJ,GAA0B7T,MAE7C,OADAmd,EAASrN,YAAcgN,EAChBK,EAET,IAAI9iB,EAAS,IAAI2P,GAAahK,MAC9B,GAAY,MAAR8c,EAAc,CAChB,IAAK,IAAI9M,EAAQjV,UAAUR,OAAQyiB,EAAOphB,MAAMoU,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACpG+M,EAAK/M,EAAQ,GAAKlV,UAAUkV,GAG9B+M,EAAKC,QAAQH,GAGb,IAFA,IAAIviB,EAASyiB,EAAKziB,OAETzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAIwf,EAAO0F,EAAKllB,GAChB,GAAIwf,aAAgBlO,EAClB/O,EAAOuL,OAAOpJ,KAAK8a,QACd,GAAIA,aAAgBnO,EACzB9O,EAAOsQ,KAAO2M,MACT,MAAIA,aAAgBhO,IAGzB,MAAM,IAAInG,MAAM,wDAFhB9I,EAAO6P,WAAaoN,IAS1B,OAHKjd,EAAO6P,aACV7P,EAAO6P,WAAalK,KAAKsK,OAEpBjQ,IAER,CACDhB,IAAK,QACLN,MAAO,SAAeV,EAAMyG,GAC1B,IAAIuK,EAAWtO,UAAUR,OAAS,QAAsB4B,IAAjBpB,UAAU,IAAmBA,UAAU,GAE1EV,EAAS,IAAI+O,EAAkBpJ,MAInC,OAHA3F,EAAOhC,KAAOA,EACdgC,EAAOyE,KAAOA,EACdzE,EAAOgP,SAAWA,EACXhP,IAER,CACDhB,IAAK,OACLN,MAAO,SAAcV,EAAMyG,GACzB,IAAIzE,EAAS,IAAI8O,EAAsBnJ,MAGvC,OAFA3F,EAAOhC,KAAOA,EACdgC,EAAOyE,KAAOA,EACPzE,IAER,CACDhB,IAAK,SACLN,MAAO,SAAiB+F,GACtB,IAAIzE,EAAS,IAAIiP,GAAmBtJ,MAEpC,OADA3F,EAAOyE,KAAOA,EACPzE,IAER,CACDhB,IAAK,YACLN,MAAO,SAAmBuS,EAAWpB,EAAYqB,GAC/C,IAAIlR,EAAS,IAAI+Q,GAAcpL,MAI/B,OAHA3F,EAAOiR,UAAYA,EACnBjR,EAAO6P,WAAaA,GAAclK,KAAKsK,MACvCjQ,EAAOkR,SAAWA,GAAYvL,KAAKsK,MAC5BjQ,IAER,CACDhB,IAAK,SACLN,MAAO,SAAgB+jB,GACrB,IAAIziB,EAAS,IAAIkW,GAAWvQ,MAC5B,GAAY,MAAR8c,GAAgC,iBAATA,GAAuBA,aAAgB7Z,EAK3D,CAGL,IAFA,IAAIiL,OAAO,EAEFyF,EAAQ5Y,UAAUR,OAAQyiB,EAAOphB,MAAM+X,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACpGoJ,EAAKpJ,EAAQ,GAAK7Y,UAAU6Y,GAW9B,IAHA,IAAIwJ,EAJFlP,EADE4O,EACK,CAACA,GAAMze,OAAO1B,EAAkBqgB,IAEhCA,EAGLziB,EAAS6iB,EAAM7iB,OAEVzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAIwf,EAAOpJ,EAAKpW,GAChB,GAAIwf,aAAgBlL,GAClB/R,EAAO+N,WAAW5L,KAAK8a,QAClB,GAAIA,aAAgB7K,GACzBpS,EAAOmW,SAAShU,KAAK8a,OAChB,MAAIA,aAAgB1K,IAGzB,MAAM,IAAIzJ,MAAM,sDAFhB9I,EAAOoW,eAAejU,KAAK8a,UA1B/B,IAAK,IAAIzI,KAAgBiO,EAEvBziB,EAAO+N,WAAW5L,KAAKwD,KAAKvG,SAASoV,EAAciO,EAAKjO,KA8B5D,OAAOxU,IAER,CACDhB,IAAK,cACLN,MAAO,SAAqB+jB,GAC1B,IAAK,IAAIO,EAAQtiB,UAAUR,OAAQyiB,EAAOphB,MAAMyhB,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACpGN,EAAKM,EAAQ,GAAKviB,UAAUuiB,GAG9B,IAAI9jB,EAASwG,KAAKxG,OAAOmK,MAAM3D,KAAM,CAAC8c,GAAMze,OAAO1B,EAAkBqgB,KAErE,OADAxjB,EAAOkX,OAAQ,EACRlX,IAER,CACDH,IAAK,eACLN,MAAO,SAAsBA,GAC3B,IAAIsB,EAAS,IAAIuS,GAAuB5M,MAExC,OADA3F,EAAOtB,MAAQA,EACRsB,IAER,CACDhB,IAAK,WACLN,MAAO,SAAkBM,EAAKN,GAC5B,IAAIsQ,EAAWtO,UAAUR,OAAS,QAAsB4B,IAAjBpB,UAAU,IAAmBA,UAAU,GAE1EV,EAAS,IAAI+R,GAAmBpM,MAQpC,OAPA3F,EAAOhB,IAAMA,EAEXgB,EAAOtB,MADLA,aAAiBkK,EACJlK,EAEAiH,KAAKxG,OAAOT,GAE7BsB,EAAOgP,SAAWA,EACXhP,IAER,CACDhB,IAAK,UACLN,MAAO,SAAiB4P,EAAItP,EAAKN,GAC/B,IAAIsB,EAAS,IAAIoS,GAAkBzM,MAInC,OAHA3F,EAAOsO,GAAKA,EACZtO,EAAOhB,IAAMA,EACbgB,EAAOtB,MAAQA,EACRsB,IAER,CACDhB,IAAK,SACLN,MAAO,SAAgBV,EAAMykB,GAC3B,IAAIziB,EAAS,IAAI+R,GAAmBpM,MACpC3F,EAAOhB,IAAMhB,EAEb,IAAK,IAAIklB,EAAQxiB,UAAUR,OAAQyiB,EAAOphB,MAAM2hB,EAAQ,EAAIA,EAAQ,EAAI,GAAIC,EAAQ,EAAGA,EAAQD,EAAOC,IACpGR,EAAKQ,EAAQ,GAAKziB,UAAUyiB,GAI9B,OADAnjB,EAAOtB,MAAQiH,KAAKqU,SAAS1Q,MAAM3D,KAAM,CAAC8c,GAAMze,OAAO2e,IAChD3iB,IAER,CACDhB,IAAK,qBACLN,MAAO,SAA4BA,GACjC,IAAI4U,EAAO3N,KAAKkS,aAAanZ,GAE7B,OADA4U,EAAKtB,QAAS,EACPsB,IAER,CACDtU,IAAK,iBACLN,MAAO,SAAwBM,EAAKN,GAClC,IAAIsQ,EAAWtO,UAAUR,OAAS,QAAsB4B,IAAjBpB,UAAU,IAAmBA,UAAU,GAE1E4S,EAAO3N,KAAKvG,SAASJ,EAAKN,EAAOsQ,GAErC,OADAsE,EAAKtB,QAAS,EACPsB,IAER,CACDtU,IAAK,eACLN,MAAO,SAAsBV,EAAMykB,GACjC,IAAK,IAAIW,EAAS1iB,UAAUR,OAAQyiB,EAAOphB,MAAM6hB,EAAS,EAAIA,EAAS,EAAI,GAAIC,EAAS,EAAGA,EAASD,EAAQC,IAC1GV,EAAKU,EAAS,GAAK3iB,UAAU2iB,GAG/B,IAAI/P,EAAO3N,KAAK2d,OAAOha,MAAM3D,KAAM,CAAC3H,EAAMykB,GAAMze,OAAO2e,IAEvD,OADArP,EAAKtB,QAAS,EACPsB,IAER,CACDtU,IAAK,SACLN,MAAO,WAGL,IAFA,IAAIsB,EAAS,IAAIkW,GAAWvQ,MAEnB4d,EAAS7iB,UAAUR,OAAQwL,EAAQnK,MAAMgiB,GAASC,EAAS,EAAGA,EAASD,EAAQC,IACtF9X,EAAM8X,GAAU9iB,UAAU8iB,GAG5B,IAAK,IAAI/lB,EAAI,EAAGA,EAAIiO,EAAMxL,OAAQzC,IAAK,CACrC,IAEMgmB,EAKAC,EAPFjf,EAAOiH,EAAMjO,GAAG6K,SACpB,GAAI/G,MAAMC,QAAQiD,EAAK2R,iBAGpBqN,EAAwBzjB,EAAOoW,gBAAgBjU,KAAKmH,MAAMma,EAAuBnhB,EAAkBmC,EAAK2R,iBAE3G,GAAI7U,MAAMC,QAAQiD,EAAK0R,WAGpBuN,EAAmB1jB,EAAOmW,UAAUhU,KAAKmH,MAAMoa,EAAkBphB,EAAkBmC,EAAK0R,WAE3F,GAAI5U,MAAMC,QAAQiD,EAAKsJ,YACrB,IAAK,IAAI+J,EAAI,EAAGA,EAAIrT,EAAKsJ,WAAW7N,OAAQ4X,IAAK,CAC/C,IAAIxE,EAAO7O,EAAKsJ,WAAW+J,GAC3BnG,GAAU2B,aAAgBvB,IAC1B/R,EAAO2jB,YAAYrQ,EAAKtU,IAAKsU,EAAK5U,MAAO4U,EAAKtE,WAIpD,OAAOhP,IAER,CACDhB,IAAK,QACLN,MAAO,WAGL,IAFA,IAAIsB,EAAS,IAAIyL,EAAU9F,MAElBie,EAASljB,UAAUR,OAAQwL,EAAQnK,MAAMqiB,GAASC,EAAS,EAAGA,EAASD,EAAQC,IACtFnY,EAAMmY,GAAUnjB,UAAUmjB,GAI5B,OADA7jB,EAAO0L,MAAQA,EACR1L,IAER,CACDhB,IAAK,QACLN,MAAO,SAAewN,GACpB,IAAIlM,EAAS,IAAI+L,EAAUpG,MAE3B,OADA3F,EAAOkM,YAAcA,GAAevG,KAAKsK,MAClCjQ,IAER,CACDhB,IAAK,QACLN,MAAO,WACL,IAAK,IAAIolB,EAASpjB,UAAUR,OAAQwL,EAAQnK,MAAMuiB,GAASC,EAAS,EAAGA,EAASD,EAAQC,IACtFrY,EAAMqY,GAAUrjB,UAAUqjB,GAG5B,OAAO1G,GAAU1X,KAAM+F,KAExB,CACD1M,IAAK,YACLN,MAAO,WAGL,IAFA,IAAIsB,EAAS,IAAI0Y,GAAiB/S,MAEzBqe,EAAStjB,UAAUR,OAAQwL,EAAQnK,MAAMyiB,GAASC,EAAS,EAAGA,EAASD,EAAQC,IACtFvY,EAAMuY,GAAUvjB,UAAUujB,GAI5B,OADAjkB,EAAO0L,MAAQA,EACR1L,IAER,CACDhB,IAAK,eACLN,MAAO,WACL,OAAOiH,KAAKqQ,UAAU1M,MAAM3D,KAAMjF,aAEnC,CACD1B,IAAK,MACLN,MAAO,SAAa+b,GAClB,IAAI6B,EAAM,IAAI9B,GAAQ7U,MAEtB,OADA2W,EAAI7B,OAASA,EACN6B,IAER,CACDtd,IAAK,MACLN,MAAO,SAAa+b,EAAQzc,GAC1B,IAAIkmB,EAAM,IAAI7b,GAAQ1C,MAGtB,OAFAue,EAAIzJ,OAASA,EACbyJ,EAAIlmB,KAAOA,EACJkmB,IAER,CACDllB,IAAK,MACLN,MAAO,SAAaiI,GAClB,IAwCMwd,EAxCFnkB,OAAS,EACb,GAAuB,iBAAZ2G,GAET3G,EAAS2F,KAAKrH,IAAIqI,OAGhB3G,EAAS,IAAI6a,GAAclV,OACpB3H,KAAO2I,QAEX,GAAuB,mBAAZA,EAAwB,CAExC,IAAIqb,EAAkBrc,KAAK2J,KAI3BtP,EAASgiB,EAAgB1jB,IAAIqI,OAI3B3G,EAAS,IAAIsR,GAAY3L,OAClB6L,KAAO7K,EACd3G,EAAOhC,KAAO2I,EAAQ3I,UAEnB,MAAI2I,aAAmBiC,GAS5B,OANe,MAAXjC,GAAsC,iBAAZA,EAC5BhB,KAAK0L,mBAAmB,yEAAyE3K,OAAOC,OAC9Fka,GAAwB1b,IAAIwB,KACtChB,KAAK0L,mBAAmB,oEACxBwP,GAAwBxb,IAAIsB,IAEvBhB,KAAKsK,MARZjQ,EAAS2G,EAWX,IAAK,IAAIyd,EAAS1jB,UAAUR,OAAQsM,EAAgBjL,MAAM6iB,EAAS,EAAIA,EAAS,EAAI,GAAIC,EAAS,EAAGA,EAASD,EAAQC,IACnH7X,EAAc6X,EAAS,GAAK3jB,UAAU2jB,GAGxC,OAAI7X,EAActM,QAGhByR,GAAkC,mBAAjB3R,EAAOsJ,MAAsB,qCAAqCtJ,EAAO6I,cAClFsb,EAAWnkB,GAAQsJ,MAAMA,MAAM6a,EAAU7hB,EAAkBkK,KAE5DxM,IAGV,CACDhB,IAAK,WACLN,MAAO,SAAkB+F,EAAM7B,GAC7B,IAKM0hB,EALF1e,EAASlF,UAAUR,OAAS,QAAsB4B,IAAjBpB,UAAU,GAAmBA,UAAU,GAAK,GAC7E4C,EAAO5C,UAAU,GAEjBgC,EAAa,IAAIgD,EAAWC,KAAM/C,GAClCU,GAGDghB,EAAmB5hB,EAAWY,MAAMnB,KAAKmH,MAAMgb,EAAkBhiB,EAAkBgB,IACtD,iBAAdmB,EAAKzG,MACrB0E,EAAWY,KAAKnB,KAAKsC,EAAKzG,MAI5B,OAFA0E,EAAWkD,OAASA,EACpBlD,EAAWI,OAASvB,MAAMiB,KAAKiC,EAAK3B,OAAOJ,EAAY,GAAIE,IACpDF,IAER,CACD1D,IAAK,QACLN,MAAO,SAAe+F,EAAM7B,GAC1B,IAAIgD,EAASlF,UAAUR,OAAS,QAAsB4B,IAAjBpB,UAAU,GAAmBA,UAAU,GAAK,GAC7E4C,EAAO5C,UAAU,GAErB,MAAkB,WAAdiF,KAAK/G,KACA+G,KAAKqD,OAAOvE,EAAM7B,EAAOgD,EAAQtC,GAEjCqC,KAAKuY,KAAKzZ,EAAM7B,EAAOgD,EAAQtC,KAGzC,CACDtE,IAAK,SACLN,MAAO,SAAgB+F,EAAM7B,GAC3B,IAAIgD,EAASlF,UAAUR,OAAS,QAAsB4B,IAAjBpB,UAAU,GAAmBA,UAAU,GAAK,GAC7E4C,EAAO5C,UAAU,GAEjBgC,EAAaiD,KAAKkC,SAASpD,EAAM7B,EAAOgD,EAAQtC,GAChDgD,EAAQX,KAAKyB,cAAc1E,GAC/B,GAAI4D,EACF,MAAMA,EAER,OAAO1D,IAER,CACD5D,IAAK,OACLN,MAAO,SAAc+F,EAAM7B,GACzB,IAAIgD,EAASlF,UAAUR,OAAS,QAAsB4B,IAAjBpB,UAAU,GAAmBA,UAAU,GAAK,GAC7E4C,EAAO5C,UAAU,GAEjBgC,EAAaiD,KAAKkC,SAASpD,EAAM7B,EAAOgD,EAAQtC,GAChDC,EAAU6Z,GAAmB1a,GAIjC,MAHuB,iBAAZa,GACToC,KAAK0L,mBAAmB9N,GAEnBX,IAOR,CACD5D,IAAK,qBACLN,MAAO,SAA4B6E,GACjCghB,QAAQrG,KAAK,gBAAiB3a,KAE/B,CACDvE,IAAK,YACLN,MAAO,SAAmB+F,GACxB,OA97EN,SAA4B+f,GAC1B,IAAIpY,EAAS,GACb,IAAKoY,EAAWzW,WACd,OAAO3B,EAGT,IAAIkL,EAAQ,SAAelY,GACzBgN,EAAOhN,EAASJ,KAAO,SAAUiB,EAAOwkB,EAAUC,GAChD,OAAO9c,EAAUxI,EAAUa,KAI3B8C,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAA0DoB,EAAtDC,EAAYqhB,EAAWzW,WAAWvP,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CAGtKuU,EAFepU,EAAMxE,QAIvB,MAAO0D,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,GAKZ,OAAOmJ,EAy5EIuY,CAAmBlgB,EAAK6D,YAEhC,CACDtJ,IAAK,QACLN,MAAO,WACL,IAAK,IAAIkmB,EAASlkB,UAAUR,OAAQkJ,EAAO7H,MAAMqjB,GAASC,EAAS,EAAGA,EAASD,EAAQC,IACrFzb,EAAKyb,GAAUnkB,UAAUmkB,GAG3B,IAAIC,EAAU1b,EAAK2b,MACnB,IAAKxjB,MAAMC,QAAQsjB,GACjB,MAAM,IAAIhc,MAAM,oDAGlB,IAAIkc,EAAUrf,KAAKqf,QAAQ1b,MAAM3D,KAAMrD,EAAkBwiB,IACzD,OAAOE,EAAQ1b,WAAMxH,EAAWsH,KAEjC,CACDpK,IAAK,UACLN,MAAO,WACL,IAAK,IAAIumB,EAASvkB,UAAUR,OAAQ4kB,EAAUvjB,MAAM0jB,GAASC,EAAS,EAAGA,EAASD,EAAQC,IACxFJ,EAAQI,GAAUxkB,UAAUwkB,GAM9B,IAHA,IAAIhlB,EAAS4kB,EAAQ5kB,OAEjBilB,EAAQ,IAAI5jB,MAAMrB,GACbzC,EAAI,EAAGA,EAAIyC,EAAQzC,IAAK,CAC/B,IAAI2nB,EAASN,EAAQrnB,GACjBmS,EAAajK,KAAK8L,cAAc2T,GACpC,GAAKxV,EAMH+B,GAAU/B,aAAsBD,IAAgBC,aAAsB4J,GAA2B,gDACjG2L,EAAM1nB,GAAKmS,MAPI,CACf,GAAInS,IAAMyC,EAAS,EACjB,MAAM,IAAI4I,MAAM,4DAA4DrL,oCAE9E0nB,EAAM1nB,IAAK,GAMf,OAAO,WACL,IAAK,IAAIuE,EAAK,EAAGA,EAAKmjB,EAAMjlB,OAAQ8B,IAAM,CACxC,IAAIyE,EAAO0e,EAAMnjB,GACbqjB,EAAUP,EAAQ9iB,GACtB,IAAa,IAATyE,EACF,OAAO4e,EAAQ/b,WAAMxH,EAAWpB,WAC3B,GAAI+F,EAAKkT,cAAcrQ,MAAM7C,EAAM/F,WACxC,OAAO2kB,EAAQ/b,WAAMxH,EAAWpB,WAGpC,IAAI4F,EAAQ,IAAIzG,UAAU,8CAE1B,MADAyG,EAAMtI,KAAO,mBACPsI,KAGT,CACDtH,IAAK,eACLN,MAAO,SAAsB+F,GAC3B,IAAI9F,EAAIgH,KACR,OAAO,UAA0B/C,GAC/B,IAAIG,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAA0CoB,EAAtCC,EAAYP,EAAMpE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CACtJ,IAAIka,EAAO/Z,EAAMxE,YAEXC,EAAEigB,MAAMna,EAAMwY,IAEtB,MAAO7a,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,OAMf,CACDjE,IAAK,aACLN,MAAO,SAAoB+F,GACzB,IAAIzE,EAAS,IAAIia,GAAetU,MAChC3F,EAAOyE,KAAOA,EAEd,IAAK,IAAI6gB,EAAS5kB,UAAUR,OAAQkN,EAAc7L,MAAM+jB,EAAS,EAAIA,EAAS,EAAI,GAAIC,EAAS,EAAGA,EAASD,EAAQC,IACjHnY,EAAYmY,EAAS,GAAK7kB,UAAU6kB,GAItC,OADAvlB,EAAO8S,cAAcxJ,MAAMtJ,EAAQsC,EAAkB8K,IAC9CpN,IAER,CACDhB,IAAK,SACLN,MAAO,SAAgB+F,GACrB,IAGM+gB,EAKAC,EAKAC,EAbF1lB,EAAS,IAAIkW,GAAWvQ,OAC5BlB,EAAOA,EAAK6D,SACR/G,MAAMC,QAAQiD,EAAK2R,mBAGpBoP,EAAyBxlB,EAAOoW,gBAAgBjU,KAAKmH,MAAMkc,EAAwBljB,EAAkBmC,EAAK2R,iBAEzG7U,MAAMC,QAAQiD,EAAK0R,YAGpBsP,EAAoBzlB,EAAOmW,UAAUhU,KAAKmH,MAAMmc,EAAmBnjB,EAAkBmC,EAAK0R,WAEzF5U,MAAMC,QAAQiD,EAAKsJ,cAGpB2X,EAAqB1lB,EAAO+N,YAAY5L,KAAKmH,MAAMoc,EAAoBpjB,EAAkBmC,EAAKsJ,aAGjG,OADA/N,EAAOqW,OAAQ,EACRrW,IAER,CACDhB,IAAK,QACLN,MAAO,SAAewgB,EAAOxB,GAC3B,IAAI1d,EAAS,IAAIif,GAAUtZ,MAG3B,OAFA3F,EAAOkf,MAAQA,EACflf,EAAO0d,MAAQA,EACR1d,IAER,CACDhB,IAAK,aACLN,MAAO,WACL,OAAO,IAAI0gB,GAAezZ,QAE3B,CACD3G,IAAK,QACLN,MAAO,SAAe+F,GACpB,IAAIzE,EAAS,IAAIqf,GAAU1Z,MAE3B,OADA3F,EAAOyE,KAAOA,EACPzE,IAER,CACDhB,IAAK,UACLN,MAAO,SAAiBS,EAAQqgB,GAC9B,IAAIxf,EAAS,IAAIggB,GAAYra,MAG7B,OAFA3F,EAAOb,OAASA,EAChBa,EAAOwf,OAASA,EACTxf,IAER,CACDhB,IAAK,WACLN,MAAO,SAAkBS,EAAQqgB,GAC/B,IAAIxf,EAAS,IAAIuf,GAAa5Z,MAG9B,OAFA3F,EAAOb,OAASA,EAChBa,EAAOwf,OAASA,EACTxf,IAER,CACDhB,IAAK,gBACLN,MAAO,SAAuBS,EAAQC,GACpC,IAAIY,EAAS,IAAIigB,GAActa,MAE/B,GADA3F,EAAOb,OAASA,EACZC,aAAoBwJ,EAAM,CAC5B,IAAIsX,EAAY9gB,EAASkJ,SACzBtI,EAAOZ,SAAW8gB,EAAUxhB,WAE5BsB,EAAOZ,SAAWA,EAEpB,OAAOY,IAER,CACDhB,IAAK,SACLN,MAAO,SAAgB+F,GACrB,IAAIzE,EAAS,IAAImgB,GAAWxa,MAE5B,OADA3F,EAAOyE,KAAOA,EACPzE,IAER,CACDhB,IAAK,WACLN,MAAO,SAAkB+F,GACvB,IAAIzE,EAAS,IAAIogB,GAASza,MAE1B,OADA3F,EAAOyE,KAAOA,EACPzE,IAER,CACDhB,IAAK,aACLN,MAAO,SAAoB+F,GACzB,IAAIzE,EAAS,IAAIqgB,GAAW1a,MAE5B,OADA3F,EAAOyE,KAAOA,EACPzE,IAER,CACDhB,IAAK,YACLN,MAAO,SAAmB6hB,EAAOf,GAC/B,IAAIxf,EAAS,IAAIsgB,GAAc3a,MAG/B,OAFA3F,EAAOugB,MAAQA,EACfvgB,EAAOwf,OAASA,EACTxf,IAER,CACDhB,IAAK,UACLN,MAAO,SAAiB+F,GACtB,IAAIzE,EAAS,IAAIwgB,GAAY7a,MAE7B,OADA3F,EAAOyE,KAAOA,EACPzE,IAER,CACDhB,IAAK,QACLN,MAAO,SAAekiB,GACpB,IAAI5gB,EAAS,IAAI2gB,GAAUhb,MAE3B,OADA3F,EAAO4gB,aAAeA,EACf5gB,IAER,CACDhB,IAAK,uBAILV,IAAK,WACH,OAAOmR,OAGJqR,EApvCS,GAuvCd6E,QAAkB,EACA,oBAAXvE,aAAqG,IAApEA,OAAOwE,yDACjDD,GAAkBvE,OAAOwE,0DAEzBD,GAAkB,IAAI7E,GAxtGQniB,GAytGPgnB,GAxtGvBlmB,EAAekc,KAAOxd,OAAO0nB,OAAO,IAAIjU,GAAgBjT,KACxDc,EAAeoR,MAAQ1S,OAAO0nB,OAAO,IAAItZ,EAAU5N,KACnDc,EAAeoc,OAAS1d,OAAO0nB,OAAO,IAAI7M,GAAWra,KACrDc,EAAeqc,QAAU3d,OAAO0nB,OAAO,IAAIvZ,EAAY3N,KACvDc,EAAesc,OAAS5d,OAAO0nB,OAAO,IAAI1L,GAAWxb,KACrDc,EAAeuc,OAAS7d,OAAO0nB,OAAO,IAAIxL,GAAW1b,KACrDc,EAAewQ,IAAM9R,OAAO0nB,OAAO,IAAIpd,EAAQ9J,KAC/Cc,EAAekb,MAAQxc,OAAO0nB,OAAO,IAAIld,GAAUhK,KACnDc,EAAemc,KAAOzd,OAAO0nB,OAAO,IAAIhU,GAASlT,KACjDc,EAAe2c,YAAcje,OAAO0nB,OAAO,IAAInd,EAAgB/J,KAIjE,SAAyCA,GAEvCA,EAAEmnB,uBAAuB,CACvB9nB,KAAM,OACNwT,KAAMuU,KACNld,SAAU,WACV,QAAQnG,EAAYY,EAAMV,GAClBA,aAAiBmjB,KAEZhJ,MAAMna,EAAMojB,kBACf,CAAC1iB,EAAMgI,EAAgB,oBAAqB3F,YAF5C,CAACrC,EAAMgI,EAAgB,wBAAyB,QAAS3F,OAKnEiG,QAAQhJ,GACCA,aAAiBmjB,OAAShJ,MAAMna,EAAMojB,WAE/Czd,YAAY3F,GACa,aAAnBA,EAAMiG,SACD,GAED,EAEV6T,oBAAoB9Z,GACX,KAIXjE,EAAEmnB,uBAAuB,CACvB9nB,KAAM,UACNwT,KAAMyU,QACNpd,SAAU,cACV,QAAQnG,EAAYY,EAAMV,EAAOsjB,GAC/BvU,GAAUuU,EAAY,4CACRvgB,KAAK9C,QAEN8I,eAAe,UAAW/I,UAC/B,CAACU,EAAMgI,EAAgB,qBAAsB4a,GAAavgB,QAGpE,QAAQ/C,GAGN,OAFc+C,KAAK9C,QAEJ8I,eAAe,UAAW/I,IAE3C2F,YAAY3F,GACa,gBAAnBA,EAAMiG,SACD,GAED,EAEV6T,oBAAoB9Z,GACX,KAIXjE,EAAEmnB,uBAAuB,CACvB9nB,KAAM,MACNwT,KAAM5K,IACNiC,SAAU,UACV,QAAQnG,EAAYY,EAAMV,EAAOujB,EAASC,GAKxC,GAJAzU,GAAUwU,EAAS,6CACnBxU,GAAUyU,EAAW,6CACPzgB,KAAK9C,QAEN8I,eAAe,MAAO/I,GAAnC,CAIA,IAAIG,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnB,EAErB,IACE,IAAK,IAA0CoB,EAAtCC,EAAYP,EAAMpE,OAAOiD,cAAsBsB,GAA6BG,EAAQC,EAAUlB,QAAQC,MAAOa,GAA4B,EAAM,CACtJ,IAAIK,EAAOF,EAAMxE,MAEb2E,EAAQhC,EAAc+B,EAAM,GAE5BpE,EAAMqE,EAAM,GACZ3E,EAAQ2E,EAAM,GAEb8iB,EAAQva,QAAQ5M,UACb,CAACsE,EAAMgI,EAAgB,sBAAuB6a,GAAUxgB,aAGzDygB,EAAUtjB,OAAOJ,EAAYY,EAAKU,OAAOhF,GAAMN,IAExD,MAAO0D,GACPY,GAAoB,EACpBC,EAAiBb,EACjB,QACA,KACOW,GAA6BI,EAAUgB,QAC1ChB,EAAUgB,SAEZ,QACA,GAAInB,EACF,MAAMC,cAhCJ,CAACK,EAAMgI,EAAgB,wBAAyB,OAAQ3F,OAqClE,QAAQ/C,EAAOujB,EAASC,GAGtB,IAFczgB,KAAK9C,QAEN8I,eAAe,MAAO/I,GACjC,OAAO,EAET,IAAIqD,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkBrE,EAEtB,IACE,IAAK,IAA2CsE,EAAvCC,EAAazD,EAAMpE,OAAOiD,cAAuBwE,GAA8BG,EAASC,EAAWpE,QAAQC,MAAO+D,GAA6B,EAAM,CAC5J,IAAI4G,EAAQzG,EAAO1H,MAEf2nB,EAAQhlB,EAAcwL,EAAO,GAE7B7N,EAAMqnB,EAAM,GACZ3nB,EAAQ2nB,EAAM,GAElB,IAAKF,EAAQva,QAAQ5M,KAASonB,EAAUxa,QAAQlN,GAC9C,OAAO,GAGX,MAAO0D,GACP8D,GAAqB,EACrBC,EAAkB/D,EAClB,QACA,KACO6D,GAA8BI,EAAWlC,QAC5CkC,EAAWlC,SAEb,QACA,GAAI+B,EACF,MAAMC,GAKZ,OAAO,GAEToC,YAAY3F,GACa,YAAnBA,EAAMiG,SACD,GAED,EAEV,oBAAoBjG,GAClB,IAAI0jB,EAAW,GACXC,EAAa,GACb5G,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkB/d,EAEtB,IACE8U,EAAM,IAAK,IAA2CkJ,EAAvCC,EAAand,EAAMpE,OAAOiD,cAAuBke,GAA8BG,EAASC,EAAW9d,QAAQC,MAAOyd,GAA6B,EAAM,CAClK,IAAI6G,EAAQ1G,EAAOphB,MAEf+nB,EAAQplB,EAAcmlB,EAAO,GAE7BxnB,EAAMynB,EAAM,GACZ/nB,EAAQ+nB,EAAM,GAElBC,EAAS,CACP,IAAK,IAAIjpB,EAAI,EAAGA,EAAI6oB,EAASpmB,OAAQzC,IAAK,CAExC,GADW6oB,EAAS7oB,GACXmO,QAAQ5M,GACf,MAAM0nB,EAGVJ,EAASnkB,KAAKxD,EAAEiF,OAAO5E,IAGzB,IAAK,IAAIgD,EAAK,EAAGA,EAAKukB,EAAWrmB,OAAQ8B,IAAM,CAE7C,GADYukB,EAAWvkB,GACb4J,QAAQlN,GAChB,SAASkY,EAGb2P,EAAWpkB,KAAKxD,EAAEiF,OAAOlF,KAE3B,MAAO0D,GACPwd,GAAqB,EACrBC,EAAkBzd,EAClB,QACA,KACOud,GAA8BI,EAAW5b,QAC5C4b,EAAW5b,SAEb,QACA,GAAIyb,EACF,MAAMC,GAKZ,IAAIrT,EAAgB,GAkBpB,OAhBwB,IAApB8Z,EAASpmB,OACXsM,EAAcrK,KAAKxD,EAAEyd,eACQ,IAApBkK,EAASpmB,OAClBsM,EAAcrK,KAAKmkB,EAAS,IAE5B9Z,EAAcrK,KAAKxD,EAAE8P,MAAMnF,MAAM3K,EAAG2nB,IAGZ,IAAtBC,EAAWrmB,OACbsM,EAAcrK,KAAKxD,EAAEyd,eACU,IAAtBmK,EAAWrmB,OACpBsM,EAAcrK,KAAKokB,EAAW,IAE9B/Z,EAAcrK,KAAKxD,EAAE8P,MAAMnF,MAAM3K,EAAG4nB,IAG/B/Z,KAIX7N,EAAEmnB,uBAAuB,CACvB9nB,KAAM,MACNwT,KAAMmV,IACN9d,SAAU,UACV,QAAQnG,EAAYY,EAAMV,EAAOwjB,GAI/B,GAHAzU,GAAUyU,EAAW,wCACPzgB,KAAK9C,QAEN8I,eAAe,MAAO/I,GAAnC,CAIA,IAAIgkB,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkBhlB,EAEtB,IACE,IAAK,IAA2CilB,EAAvCC,EAAapkB,EAAMpE,OAAOiD,cAAuBmlB,GAA8BG,EAASC,EAAW/kB,QAAQC,MAAO0kB,GAA6B,EAAM,CAC5J,IAAIloB,EAAQqoB,EAAOroB,YAEZ0nB,EAAUtjB,OAAOJ,EAAYY,EAAM5E,IAE5C,MAAO0D,GACPykB,GAAqB,EACrBC,EAAkB1kB,EAClB,QACA,KACOwkB,GAA8BI,EAAW7iB,QAC5C6iB,EAAW7iB,SAEb,QACA,GAAI0iB,EACF,MAAMC,cAvBJ,CAACxjB,EAAMgI,EAAgB,wBAAyB,OAAQ3F,OA4BlE,QAAQ/C,EAAOwjB,GAGb,IAFczgB,KAAK9C,QAEN8I,eAAe,MAAO/I,GACjC,OAAO,EAET,IAAIqkB,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkBrlB,EAEtB,IACE,IAAK,IAA2CslB,EAAvCC,EAAazkB,EAAMpE,OAAOiD,cAAuBwlB,GAA8BG,EAASC,EAAWplB,QAAQC,MAAO+kB,GAA6B,EAAM,CAC5J,IAAIvoB,EAAQ0oB,EAAO1oB,MAEnB,IAAK0nB,EAAUxa,QAAQlN,GACrB,OAAO,GAGX,MAAO0D,GACP8kB,GAAqB,EACrBC,EAAkB/kB,EAClB,QACA,KACO6kB,GAA8BI,EAAWljB,QAC5CkjB,EAAWljB,SAEb,QACA,GAAI+iB,EACF,MAAMC,GAKZ,OAAO,GAET5e,YAAY3F,GACa,YAAnBA,EAAMiG,SACD,GAED,EAEV,oBAAoBjG,GAClB,IAAI2jB,EAAa,GACbe,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkB1lB,EAEtB,IACE8U,EAAM,IAAK,IAA2C6Q,EAAvCC,EAAa9kB,EAAMpE,OAAOiD,cAAuB6lB,GAA8BG,EAASC,EAAWzlB,QAAQC,MAAOolB,GAA6B,EAAM,CAGlK,IAFA,IAAI5oB,EAAQ+oB,EAAO/oB,MAEVjB,EAAI,EAAGA,EAAI8oB,EAAWrmB,OAAQzC,IAAK,CAE1C,GADW8oB,EAAW9oB,GACbmO,QAAQlN,GACf,SAASkY,EAGb2P,EAAWpkB,KAAKxD,EAAEiF,OAAOlF,KAE3B,MAAO0D,GACPmlB,GAAqB,EACrBC,EAAkBplB,EAClB,QACA,KACOklB,GAA8BI,EAAWvjB,QAC5CujB,EAAWvjB,SAEb,QACA,GAAIojB,EACF,MAAMC,GAKZ,OAA0B,IAAtBjB,EAAWrmB,OACN,CAACvB,EAAEyd,eACqB,IAAtBmK,EAAWrmB,OACb,CAACqmB,EAAW,IAEZ,CAAC5nB,EAAE8P,MAAMnF,MAAM3K,EAAG4nB,OA63F/BoB,CAAgChC,KAr3FF9iB,GAs3FP8iB,IAr3FfiC,aAAa,SAAS,SAAUhlB,GACtC,OAAOrB,MAAMC,QAAQoB,MAEvBC,GAAQ+kB,aAAa,OAAO,SAAUhlB,GACpC,OAAOA,aAAiBgE,OAE1B/D,GAAQ+kB,aAAa,OAAO,SAAUhlB,GACpC,OAAOA,aAAiB+jB,OAE1B9jB,GAAQ+kB,aAAa,WAAW,SAAUhlB,GACxC,OAAIA,aAAiBqjB,SAGF,OAAVrjB,IAAoC,iBAAVA,GAAuC,mBAAVA,IAA+C,mBAAfA,EAAMilB,QAy2FlF,oBAAXzG,SACTA,OAAOwE,yDAA2DD,KAItE,IAAImC,GAAkBnC,GAEw2B,Q,gCC/3S93B,gGAEA,MAAC,WAAU,aAAC,sBAAA5J,UAAD,WAAY,kBAAQ,aAAC,IAAAA,cAChC,MAAC,YAAW,aAAC,sBAAAA,UAAQ,sBAAAA,UAAT,WAAoB,kBAAQ,IAAAF,aACxC,MAAC,WAAU,aAAC,sBAAAE,UAAQ,sBAAAA,UAAT,WAAoB,kBAAQ,IAAAH,WACvC,MAAC,gBAAe,aAAC,sBAAAG,UAAD,WAAY,kBAAQ,yBAAe,IAAAA,cACnD,MAAC,YAAW,aAAC,sBAAAA,UAAQ,sBAAAA,UAAT,WAAoB,kBAAQ,IAAAF,aACxC,MAAC,aAAY,aAAC,sBAAAE,UAAD,WAAY,kBAAQ,IAAAH,WAEjC,MAAC,gBAAe,aAAC,sBAAAG,UAAD,WAAY,YAAAgM,EAAA,iBAC5B,MAAC,iBAAgB,aAAC,sBAAAhM,UAAQ,sBAAAA,UAAT,WAAoB,YAAAgM,EAAA,iBACrC,MAAC,gBAAe,aAAC,sBAAAhM,UAAQ,sBAAAA,UAAT,WAAoB,YAAAgM,EAAA,iBACpC,MAAC,qBAAoB,aAAC,sBAAAhM,UAAD,WAAY,YAAAgM,EAAA,iBACjC,MAAC,iBAAgB,aAAC,sBAAAhM,UAAQ,sBAAAA,UAAT,WAAoB,YAAAgM,EAAA,iBAErC,MAAC,kBAAiB,WACd,oBAAM,wBAAM,kBAAQ,aAAC,yBAAe,IAAApN,cACpC,mBAAKqN,GACL,oBAAMC,GACN,mBAAKC,GACL,wBAAUC,GACV,oBAAMC,KAGH,MAAC,aAAY,WAChB,mBAAKC,GACL,qBAAO,wBAAMN,KACb,oBAAMO,GACN,mBAAK3B,GACL,wBAAU4B,GACV,oBAAMC,GACN,qBAAOC,KAGEC,EAAoB,yBAC7B,OAAO,IAAIC,IAAY,CACnBC,KAAMC,QAAQC,IAAIC,WAClBC,KAAMH,QAAQC,IAAIG,eAHO,wBAAE,M,iJClC5B,MAAC,mBAAD,sCAAsB,IAAAtO,SAAtB,mCAAuC,IAAAA,SAAvC,OAAgD,aACnD,kBAAOuO,GACP,oBAAS,YAAAC,EAAA,YACT,qBAAU,oBAAAC,EAAA,YAASC,IAHgC,WAIlD,cAAAzN,OAAO,kBAAQyN,QAEb,qBAAkB,WACrB,8CAAgC,IAAAvN,WAChC,4BAAc,IAAAC,UACd,+BAAiB,IAAAA,UACjB,kCAAoB,IAAAA,UACpB,+BAAiB,IAAAA,UACjB,4BAAc,IAAAA,UACd,4BAAc,IAAAA,UACd,6BAAe,IAAAA,UACf,wBAAW,YAAAuN,EAAA,oBAAX,GACA,6BAAgB,YAAAC,EAAA,kBAAhB,GAEA,gEAA4B,IAAA1N,YAE5B,iCAAK,kBAAQ,kBAAR,GAAe,mBAAS,IAAAlB,SAAT,GAApB,WAAqC,IAAAiB,UAErC,iCAAK,kBAAO,2BAAQ,IAAAG,WAApB,WAA6B,IAAAH,UAE7B,8CAAQ,4BAAiB,IAAAjB,SAAzB,WAAiC,IAAAiB,SAEjC,aAAQ,oBAAS,IAAAG,UAAQ,mBAAQ,IAAApB,SAAjC,WAAyC,IAAAiB,aAGtC,6BAA0B,WAC7B,iCAAmB,IAAAG,UACnB,qCAAuB,IAAAA,YAGpB,2BAAwB,WAC3B,sBAAQ,YAAAyN,EAAA,wBACR,sBAAS,IAAA7O,SAAT,GACA,mBAAK,YAAA8O,EAAA,uBAGF,iCAA8B,WACjC,8BAAgB,IAAA1N,UAChB,wBAAU,IAAAA,UACV,8BAAgB,IAAAA,UAChB,8BAAgB,IAAAA,UAChB,8BAAgB,IAAAA,YAGb,8BAA2B,WAC9B,+BAAiB,IAAAA,UACjB,wBAAU,IAAAA,UACV,oBAAM,IAAAA,UACN,qBAAO,IAAAA,UACP,sBAAQ,IAAAA,YAIL,MAAC,oBAAD,uCAAwB,IAAApB,SAAxB,OAAiC,aAAC,kBAAQ,2BAAQ,IAAAoB,SAAS,IAAAJ,SAAzB,GAA+B,mBAAS0N,GAAT,GAAhC,WAAqD,IAAAzN,WAEtF,MAAC,qCAAoC,WACxC,yBAAW,IAAAG,UACX,qBAAO,IAAAA,UACP,0BAAa,aAAC,YAAA2N,EAAA,yBAAd,GACA,2BAAc,IAAA7N,UAAd,GACA,4BAAe,IAAAE,UAAf,GACA,0BAAa,IAAAA,UAAb,GACA,4BAAe,IAAAA,UAAf,GACA,yBAAY,IAAAA,UAAZ,GACA,iCAAoB,IAAAA,UAApB,GACA,wBAAU,IAAAA,UACV,0BAAY,IAAAA,UACZ,wBAAU,YAAA4N,EAAA,4BACV,gCAAmB,IAAA5N,UAAnB,GACA,yBAAY,aAAC,IAAAA,WAAb,GACA,oBAAM,IAAAA,UACN,qBAAO,IAAAA,UACP,yBAAW,IAAAA,UACX,2BAAc,IAAAA,UAAd,GACA,gCAAkB,IAAAF,UAClB,0BAAY,IAAAE,UACZ,4BAAc,IAAAA,UACd,wBAAW,IAAAA,UAAX,KAGG,MAAC,+BAA8B,WAClC,yBAAW,aAAC,IAAAA,WACZ,yBAAW,aAAC,IAAAA,WACZ,sBAAQ,aAAC,IAAAA,WACT,wBAAU,aAAC,IAAAA,WACX,sBAAQ,aAAC,IAAAA,WACT,6CAA+B,aAAC,IAAAA,WAChC,yCAA2B,aAAC,IAAAA,WAC5B,iCAAkB,aAAC,IAAAA,WACnB,qCAAsB,aAAC,IAAAA,WACvB,8BAAgB,aAAC,IAAAA,WACjB,wBAAU,IAAAA,UACV,oBAAM,aAAC,IAAAA,WACP,yBAAW,aAAC,IAAAA,WACZ,uBAAS,aAAC,IAAAA,aAGP,MAAC,2BAA0B,WAC9B,kBAAC,IAAAA,SAAS,IAAApB,WAGP,MAAC,8BAA6B,QAAAiP,EAAQ,YAAAC,EAAA,wBAAsB,YAAAC,EAAA,2BAC5D,MAAC,+BAA8B,QAAAV,EAAS,YAAAU,EAAA,2BAExC,MAAC,oBAAmBC,GAKpB,GAJA,IAAC,qBAAoBC,GACrB,IAAC,uBAAsB,YAAAH,EAAA,yBACvB,IAAC,mBAAkB,YAAAC,EAAA,0BAEnB,IAAC,4BAA2B,WAC/B,oBAAM,aAAC,IAAA/N,WACP,uBAAS,WAAE,kBAAC,IAAAA,SAAS,IAAAA,YACrB,iCAAmB,WAAE,kBAAC,IAAAA,SAAS,cAAAA,aAC/B,0BAAY,IAAAA,UACZ,+BAAiB,IAAAD,WACjB,oBAAM,IAAAC,UACN,8BAAgB,aAAC,WAAE,kBAAC,IAAAA,SAAS,IAAAA,aAC7B,qCAAuB,aAAC,WAAE,kBAAC,IAAAA,SAAS,IAAAA,aACpC,+CAAiC,aAAC,WAAE,kBAAC,IAAAA,SAAS,cAAAA,cAC9C,8BAAgB,aAAC,WAAE,kBAAC,IAAAA,SAAS,IAAAA,aAC7B,8BAAgBkO,GAChB,wBAAU,IAAAlO,aAGP,mCAAgC,WACnC,0BAAY,IAAAF,UACZ,uBAAU,WACN,qBAAS,IAAAE,SAAS,cAAAD,UAAU,IAAAD,SAAS,IAAAE,aADzC,GAGA,iCAAoB,WAChB,qBAAS,IAAAA,SAAS,UAAM,cAAAD,UAAU,IAAAD,SAAS,IAAAE,cAD/C,GAGA,oBAAM,IAAAA,UACN,+BAAkB,IAAAD,WAAlB,KAGG,MAAC,+BAA8B,QAAA8N,EAAQ,YAAAM,EAAA,yBAAuB,YAAAC,EAAA,4BAG9D,GAFA,IAAC,gCAA+B,QAAAf,EAAS,YAAAe,EAAA,4BAEzC,iCAAgC,WACnC,IAAC,gBAAK,IAAApO,UACN,yBAAW,IAAAA,UACX,kCAAqB,IAAAA,UAArB,GACA,wBAAW,IAAAA,UAAX,GACA,oBAAO,IAAAA,UAAP,GACA,0BAAa,IAAAA,UAAb,GACA,uBAAU,WAAE,mBAAO,IAAAA,SAAS,IAAAA,YAA5B,GACA,iCAAoB,WAAE,mBAAO,IAAAA,SAAS,cAAAA,aAAtC,GACA,8BAAiB,qBAAE,mBAAO,IAAAA,SAAS,IAAAA,WAAW,IAAAJ,SAA9C,GACA,qCAAwB,qBAAE,mBAAO,IAAAI,SAAS,IAAAA,WAAW,IAAAJ,SAArD,GACA,+CAAkC,qBAAE,mBAAO,IAAAI,SAAS,cAAAA,YAAa,IAAAJ,SAAjE,GACA,8BAAiB,WAAE,mBAAO,IAAAI,SAAS,IAAAA,YAAnC,GACA,8BAAiBkO,GAAjB,GACA,0BAAa,IAAAlO,UAAb,GACA,qBAAQ,IAAAA,UAAR,MAGG,oCAAiC,WACpC,2BAAa,IAAAA,UACb,8BAAgB,YAAAqO,EAAA,mBAChB,uBAAUV,GAAV,GACA,kCAAqB,IAAA3N,UAArB,KAKG,GAFA,IAAC,oBAAmBoO,GAEpB,0BAAyB,WAC5B,uBAAS,IAAApO,UACT,kBAAK,IAAAA,UAAL,GACA,yBAAW,sBAAAsO,EAAA,kBAGR,4BAAyB,WAC5B,wBAAY,IAAAtO,SAAS,sBAAAuO,EAAA,aAAY,sBAAAA,EAAA,kBAG9B,uBAAoB,WACvB,kBAAM,IAAAvO,SAAS,cAAAA,SAAS,cAAAA,cAGrB,MAAC,iBACJ,6BAAAwO,EAAA,iBACE,YAAAC,EAAA,mBACC,sBAAAC,EAAA,qBAAoB,YAAAC,EAAA,yBAEpB,2BAAwB,WAC3B,sBAAQ,IAAA3O,UACR,mBAAM,IAAAA,UAAN,GACA,yBAAY4O,GAAZ,KAGG,MAAC,sBACJ,qBAAE,kBAAM,IAAA5O,SAAS,cAAAA,SAAS,cAAAA,aACxB,IAAAA,SACA,cAAAA,YAEC,qCAAkC,WACrC,yBAAY6O,GAAZ,GACA,4BAAeA,GAAf,KAGG,oCAAiC,WACpC,wBAAW,cAAA7O,SAAS,cAAAA,YAApB,GACA,2BAAc,cAAAA,SAAS,cAAAA,YAAvB,KAGG,MAAC,uBACJ,qBAAE,sBAAQ,cAAAA,SAAS,cAAAA,aACjB,WAAE,yBAAW,cAAAA,SAAS,cAAAA,eAErB,MAAC,yBAAwB,iBAAA8O,EAC3B,qBAAE,wBAAU,cAAA9O,SAAS,cAAAA,aAAkB,WAAE,2BAAa,cAAAA,SAAS,cAAAA,gBAE7D,MAAC,0BAAyB,iBAAA+O,EAC5B,qBAAE,yBAAWF,IAAwB,WAAE,4BAAcA,OAEnD,MAAC,wBAAuB,QAAAhB,EAAQ,YAAAmB,EAAA,kBAAgB,IAAAnP,SAEhD,4BAAyB,WAC5B,uBAAS,IAAAG,UACT,sBAAQ,IAAAA,UACR,sBAAQ,IAAApB,SAIR,sBAAQ,IAAAoB,UACR,IAAC,gBAAK,IAAAA,UACN,kBAAI,IAAAA,UACJ,yBAAW,cAAAA,WALX,kBAAC,0BAAgB,IAAAA,a,iBCrOrBve,EAAOD,QAAUytB,QAAQ,Y,gCCEzB,mEAGMC,GAHN,K,eAGcvC,eAEDlM,EAAwB0O,MAAOC,EAAOtoB,KAC/C,IACI,IAAMuoB,EAAeD,EAAME,eAAeD,aAE1C,GAAoB,MAAhBA,EACA,MAAMtiB,MAAM,iCAGVmiB,EAAMK,KAAK,iBAAkBF,GACrC,MAAO9kB,GAEL,OADAie,QAAQje,MAAMA,EAAMilB,OACb,CAAEC,WAAY,IAAK3X,KAAM,qBAEpC,MAAO,CAAE2X,WAAY,IAAK3X,KAAM","file":"OnDisconnectFunction/app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 36);\n","/**\n * This file exports a dictionary of global primitive types that are shared by all contexts.\n * It is populated in [registerPrimitiveTypes()](./registerPrimitiveTypes.js).\n */\n\nvar primitiveTypes = {};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nfunction makeJSONError(validation) {\n  if (!validation.hasErrors()) {\n    return;\n  }\n  var input = validation.input,\n      context = validation.context;\n\n  var errors = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = validation.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ref = _step.value;\n\n      var _ref2 = slicedToArray(_ref, 3);\n\n      var path = _ref2[0];\n      var message = _ref2[1];\n      var expectedType = _ref2[2];\n\n      var expected = expectedType ? expectedType.toString() : null;\n      var actual = context.typeOf(_resolvePath(input, path)).toString();\n      var field = stringifyPath(validation.path.concat(path));\n\n      var pointer = `/${path.join('/')}`;\n\n      errors.push({\n        pointer,\n        field,\n        message,\n        expected,\n        actual\n      });\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return errors;\n}\n\n// Tracks whether we're in validation of cyclic objects.\nvar cyclicValidation = new WeakMap();\n// Tracks whether we're toString() of cyclic objects.\n\n\nvar cyclicToString = new WeakSet();\n\nfunction inValidationCycle(type, input) {\n  try {\n    var tracked = cyclicValidation.get(type);\n    if (!tracked) {\n      return false;\n    } else {\n      return weakSetHas(tracked, input);\n    }\n  } catch (e) {\n    // some exotic values cannot be checked\n    return true;\n  }\n}\n\nfunction startValidationCycle(type, input) {\n  var tracked = cyclicValidation.get(type);\n  if (!tracked) {\n    tracked = new WeakSet();\n    cyclicValidation.set(type, tracked);\n  }\n  weakSetAdd(tracked, input);\n}\n\nfunction endValidationCycle(type, input) {\n  var tracked = cyclicValidation.get(type);\n  if (tracked) {\n    weakSetDelete(tracked, input);\n  }\n}\n\nfunction inToStringCycle(type) {\n  return cyclicToString.has(type);\n}\n\nfunction startToStringCycle(type) {\n  cyclicToString.add(type);\n}\n\nfunction endToStringCycle(type) {\n  cyclicToString.delete(type);\n}\n\nfunction weakSetHas(weakset, value) {\n  try {\n    return weakset.has(value);\n  } catch (e) {\n    return true;\n  }\n}\n\nfunction weakSetAdd(weakset, value) {\n  try {\n    weakset.add(value);\n  } catch (e) {}\n}\n\nfunction weakSetDelete(weakset, value) {\n  try {\n    weakset.delete(value);\n  } catch (e) {}\n}\n\nvar validIdentifierOrAccessor = /^[$A-Z_][0-9A-Z_$[\\].]*$/i;\n\nvar Validation = function () {\n  function Validation(context, input) {\n    classCallCheck(this, Validation);\n    this.path = [];\n    this.prefix = '';\n    this.errors = [];\n    this.cyclic = new WeakMap();\n\n    this.context = context;\n    this.input = input;\n  }\n\n  // Tracks whether we're in validation of cyclic objects.\n\n\n  createClass(Validation, [{\n    key: 'inCycle',\n    value: function inCycle(type, input) {\n      var tracked = this.cyclic.get(type);\n      if (!tracked) {\n        return false;\n      } else {\n        return weakSetHas(tracked, input);\n      }\n    }\n  }, {\n    key: 'startCycle',\n    value: function startCycle(type, input) {\n      var tracked = this.cyclic.get(type);\n      if (!tracked) {\n        tracked = new WeakSet();\n        this.cyclic.set(type, tracked);\n      }\n      weakSetAdd(tracked, input);\n    }\n  }, {\n    key: 'endCycle',\n    value: function endCycle(type, input) {\n      var tracked = this.cyclic.get(type);\n      if (tracked) {\n        weakSetDelete(tracked, input);\n      }\n    }\n  }, {\n    key: 'hasErrors',\n    value: function hasErrors(path) {\n      if (path) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _ref = _step.value;\n\n            var _ref2 = slicedToArray(_ref, 1);\n\n            var candidate = _ref2[0];\n\n            if (matchPath(path, candidate)) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        return false;\n      } else {\n        return this.errors.length > 0;\n      }\n    }\n  }, {\n    key: 'addError',\n    value: function addError(path, expectedType, message) {\n      this.errors.push([path, message, expectedType]);\n      return this;\n    }\n  }, {\n    key: 'clearError',\n    value: function clearError(path) {\n      var didClear = false;\n      if (path) {\n        var _errors = [];\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.errors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var error = _step2.value;\n\n            if (matchPath(path, error[0])) {\n              didClear = true;\n            } else {\n              _errors.push(error);\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n\n        this.errors = _errors;\n      } else {\n        didClear = this.errors.length > 0;\n        this.errors = [];\n      }\n      return didClear;\n    }\n  }, {\n    key: 'resolvePath',\n    value: function resolvePath(path) {\n      return _resolvePath(this.input, path);\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return makeJSONError(this);\n    }\n  }]);\n  return Validation;\n}();\n\nfunction stringifyPath(path) {\n  if (!path.length) {\n    return 'Value';\n  }\n  var length = path.length;\n\n  var parts = new Array(length);\n  for (var i = 0; i < length; i++) {\n    var part = path[i];\n    if (part === '[[Return Type]]') {\n      parts[i] = 'Return Type';\n    } else if (typeof part !== 'string' || !validIdentifierOrAccessor.test(part)) {\n      parts[i] = `[${String(part)}]`;\n    } else if (i > 0) {\n      parts[i] = `.${String(part)}`;\n    } else {\n      parts[i] = String(part);\n    }\n  }\n  return parts.join('');\n}\n\nfunction _resolvePath(input, path) {\n  var subject = input;\n  var length = path.length;\n\n  for (var i = 0; i < length; i++) {\n    if (subject == null) {\n      return undefined;\n    }\n    var part = path[i];\n    if (part === '[[Return Type]]') {\n      continue;\n    }\n    if (subject instanceof Map) {\n      subject = subject.get(part);\n    } else {\n      subject = subject[part];\n    }\n  }\n  return subject;\n}\n\nfunction matchPath(path, candidate) {\n  var length = path.length;\n\n  if (length > candidate.length) {\n    return false;\n  }\n  for (var i = 0; i < length; i++) {\n    if (candidate[i] !== path[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar RuntimeTypeError = function (_TypeError) {\n  inherits(RuntimeTypeError, _TypeError);\n\n  function RuntimeTypeError(message, options) {\n    classCallCheck(this, RuntimeTypeError);\n\n    var _this = possibleConstructorReturn(this, (RuntimeTypeError.__proto__ || Object.getPrototypeOf(RuntimeTypeError)).call(this, message));\n\n    _this.name = \"RuntimeTypeError\";\n\n    Object.assign(_this, options);\n    return _this;\n  }\n\n  return RuntimeTypeError;\n}(TypeError);\n\nvar delimiter = '\\n-------------------------------------------------\\n\\n';\n\nfunction makeTypeError(validation) {\n  if (!validation.hasErrors()) {\n    return;\n  }\n  var prefix = validation.prefix,\n      input = validation.input,\n      context = validation.context,\n      errors = validation.errors;\n\n  var collected = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ref = _step.value;\n\n      var _ref2 = slicedToArray(_ref, 3);\n\n      var path = _ref2[0];\n      var message = _ref2[1];\n      var expectedType = _ref2[2];\n\n      var expected = expectedType ? expectedType.toString() : \"*\";\n      var actual = _resolvePath(input, path);\n      var actualType = context.typeOf(actual).toString();\n\n      var field = stringifyPath(validation.path.concat(path));\n\n      var actualAsString = makeString(actual);\n\n      if (typeof actualAsString === 'string') {\n        collected.push(`${field} ${message}\\n\\nExpected: ${expected}\\n\\nActual Value: ${actualAsString}\\n\\nActual Type: ${actualType}\\n`);\n      } else {\n        collected.push(`${field} ${message}\\n\\nExpected: ${expected}\\n\\nActual: ${actualType}\\n`);\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  if (prefix) {\n    return new RuntimeTypeError(`${prefix.trim()} ${collected.join(delimiter)}`, { errors });\n  } else {\n    return new RuntimeTypeError(collected.join(delimiter), { errors });\n  }\n}\n\nfunction makeString(value) {\n  if (value === null) {\n    return 'null';\n  }\n  switch (typeof value) {\n    case 'string':\n      return `\"${value}\"`;\n    // Issue\n    case 'symbol':\n    case 'number':\n    case 'boolean':\n    case 'undefined':\n      return String(value);\n    case 'function':\n      return;\n    default:\n      if (Array.isArray(value) || value.constructor == null || value.constructor === Object) {\n        try {\n          return JSON.stringify(value, null, 2);\n        } catch (e) {\n          return;\n        }\n      }\n      return;\n  }\n}\n\nfunction makeError(expected, input) {\n  var context = expected.context;\n\n  var validation = context.validate(expected, input);\n  return makeTypeError(validation);\n}\n\n/**\n * Given two types, A and B, compare them and return either -1, 0, or 1:\n *\n *   -1 if A cannot accept type B.\n *\n *    0 if the types are effectively identical.\n *\n *    1 if A accepts every possible B.\n */\n\n\nfunction compareTypes(a, b) {\n  var result = void 0;\n\n  if (a === b) {\n    return 0;\n  }\n\n  if (b instanceof TypeAlias || b instanceof TypeParameter || b instanceof TypeParameterApplication || b instanceof TypeTDZ) {\n    b = b.unwrap();\n  }\n\n  if (a instanceof TypeAlias) {\n    result = a.compareWith(b);\n  } else if (a instanceof FlowIntoType || a instanceof TypeParameter || b instanceof FlowIntoType) {\n    result = a.compareWith(b);\n  } else if (a instanceof AnyType || a instanceof ExistentialType || a instanceof MixedType) {\n    return 1;\n  } else {\n    result = a.compareWith(b);\n  }\n\n  if (b instanceof AnyType) {\n    // Note: This check cannot be moved higher in the scope,\n    // as this would prevent types from being propagated upwards.\n    return 1;\n  } else {\n    return result;\n  }\n}\n\n/**\n * # Type\n *\n * This is the base class for all types.\n */\nvar Type = function () {\n  function Type(context) {\n    classCallCheck(this, Type);\n    this.typeName = 'Type';\n\n    this.context = context;\n  }\n\n  createClass(Type, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {}\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var validation = new Validation(this.context, input);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.errors(validation, [], input)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var error = _step.value;\n          // eslint-disable-line no-unused-vars\n          return false;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: 'acceptsType',\n    value: function acceptsType(input) {\n      if (compareTypes(this, input) === -1) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return -1;\n    }\n  }, {\n    key: 'assert',\n    value: function assert(input) {\n      var error = makeError(this, input);\n      if (error) {\n        if (typeof Error.captureStackTrace === 'function') {\n          Error.captureStackTrace(error, this.assert);\n        }\n        throw error;\n      }\n      return input;\n    }\n\n    /**\n     * Get the inner type.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '$Type';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName\n      };\n    }\n  }]);\n  return Type;\n}();\n\nvar AnyType = function (_Type) {\n  inherits(AnyType, _Type);\n\n  function AnyType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, AnyType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = AnyType.__proto__ || Object.getPrototypeOf(AnyType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'AnyType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(AnyType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {}\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return true;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return 1;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return 'any';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName\n      };\n    }\n  }]);\n  return AnyType;\n}(Type);\n\nvar errorMessages = {\n  ERR_CONSTRAINT_VIOLATION: 'violated a constraint',\n  ERR_EXPECT_ARRAY: 'must be an Array',\n  ERR_EXPECT_TRUE: 'must be true',\n  ERR_EXPECT_FALSE: 'must be false',\n  ERR_EXPECT_BOOLEAN: 'must be true or false',\n  ERR_EXPECT_EMPTY: 'must be empty',\n  ERR_EXPECT_EXACT_VALUE: 'must be exactly $0',\n  ERR_EXPECT_CALLABLE: 'must be callable',\n  ERR_EXPECT_CLASS: 'must be a Class of $0',\n  ERR_EXPECT_FUNCTION: 'must be a function',\n  ERR_EXPECT_GENERATOR: 'must be a generator function',\n  ERR_EXPECT_ITERABLE: 'must be iterable',\n  ERR_EXPECT_ARGUMENT: 'argument \"$0\" must be: $1',\n  ERR_EXPECT_RETURN: 'expected return type of: $0',\n  ERR_EXPECT_N_ARGUMENTS: 'requires $0 argument(s)',\n  ERR_EXPECT_INSTANCEOF: 'must be an instance of $0',\n  ERR_EXPECT_KEY_TYPE: 'keys must be: $0',\n  ERR_EXPECT_NULL: 'must be null',\n  ERR_EXPECT_NUMBER: 'must be a number',\n  ERR_EXPECT_OBJECT: 'must be an object',\n  ERR_EXPECT_PROMISE: 'must be a promise of $0',\n  ERR_EXPECT_STRING: 'must be a string',\n  ERR_EXPECT_SYMBOL: 'must be a symbol',\n  ERR_EXPECT_THIS: 'must be exactly this',\n  ERR_EXPECT_VOID: 'must be undefined',\n  ERR_INVALID_DATE: 'must be a valid date',\n  ERR_MISSING_PROPERTY: 'does not exist on object',\n  ERR_NO_INDEXER: 'is not one of the permitted indexer types',\n  ERR_NO_UNION: 'must be one of: $0',\n  ERR_UNKNOWN_KEY: 'should not contain the key: \"$0\"'\n};\n\nfunction getErrorMessage(key) {\n  for (var _len = arguments.length, params = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    params[_key - 1] = arguments[_key];\n  }\n\n  var message = errorMessages[key];\n  if (params.length > 0) {\n    return message.replace(/\\$(\\d+)/g, function (m, i) {\n      return String(params[i]);\n    });\n  } else {\n    return message;\n  }\n}\n\nvar TupleType = function (_Type) {\n  inherits(TupleType, _Type);\n\n  function TupleType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, TupleType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = TupleType.__proto__ || Object.getPrototypeOf(TupleType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'TupleType', _this.types = [], _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(TupleType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var types = this.types;\n      var length = types.length;\n      var context = this.context;\n\n      if (!context.checkPredicate('Array', input)) {\n        yield [path, getErrorMessage('ERR_EXPECT_ARRAY'), this];\n        return;\n      }\n      for (var i = 0; i < length; i++) {\n        yield* types[i].errors(validation, path.concat(i), input[i]);\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var types = this.types;\n      var length = types.length;\n      var context = this.context;\n\n\n      if (!context.checkPredicate('Array', input) || input.length < length) {\n        return false;\n      }\n      for (var i = 0; i < length; i++) {\n        var type = types[i];\n        if (!type.accepts(input[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (!(input instanceof TupleType)) {\n        return -1;\n      }\n      var types = this.types;\n      var inputTypes = input.types;\n      if (inputTypes.length < types.length) {\n        return -1;\n      }\n      var isGreater = false;\n      for (var i = 0; i < types.length; i++) {\n        var result = compareTypes(types[i], inputTypes[i]);\n        if (result === 1) {\n          isGreater = true;\n        } else if (result === -1) {\n          return -1;\n        }\n      }\n      if (types.length < inputTypes.length) {\n        return 0;\n      } else if (isGreater) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `[${this.types.join(', ')}]`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        types: this.types\n      };\n    }\n  }]);\n  return TupleType;\n}(Type);\n\nvar ArrayType = function (_Type) {\n  inherits(ArrayType, _Type);\n\n  function ArrayType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ArrayType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ArrayType.__proto__ || Object.getPrototypeOf(ArrayType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ArrayType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ArrayType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var context = this.context;\n\n      if (!context.checkPredicate('Array', input)) {\n        yield [path, getErrorMessage('ERR_EXPECT_ARRAY'), this];\n        return;\n      }\n      if (validation.inCycle(this, input)) {\n        return;\n      }\n      validation.startCycle(this, input);\n      var elementType = this.elementType;\n      var length = input.length;\n\n\n      for (var i = 0; i < length; i++) {\n        yield* elementType.errors(validation, path.concat(i), input[i]);\n      }\n      validation.endCycle(this, input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var context = this.context;\n\n      if (!context.checkPredicate('Array', input)) {\n        return false;\n      }\n      if (inValidationCycle(this, input)) {\n        return true;\n      }\n      startValidationCycle(this, input);\n      var elementType = this.elementType;\n      var length = input.length;\n\n      for (var i = 0; i < length; i++) {\n        if (!elementType.accepts(input[i])) {\n          endValidationCycle(this, input);\n          return false;\n        }\n      }\n      endValidationCycle(this, input);\n      return true;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      var elementType = this.elementType;\n\n      if (input instanceof TupleType) {\n        var types = input.types;\n\n        for (var i = 0; i < types.length; i++) {\n          var result = compareTypes(elementType, types[i]);\n          if (result === -1) {\n            return -1;\n          }\n        }\n        return 1;\n      } else if (input instanceof ArrayType) {\n        return compareTypes(elementType, input.elementType);\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var elementType = this.elementType;\n\n      if (inToStringCycle(this)) {\n        if (typeof elementType.name === 'string') {\n          return `Array<$Cycle<${elementType.name}>>`;\n        } else {\n          return `Array<$Cycle<Object>>`;\n        }\n      }\n      startToStringCycle(this);\n      var output = `Array<${elementType.toString()}>`;\n      endToStringCycle(this);\n      return output;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        elementType: this.elementType\n      };\n    }\n  }]);\n  return ArrayType;\n}(Type);\n\nvar BooleanLiteralType = function (_Type) {\n  inherits(BooleanLiteralType, _Type);\n\n  function BooleanLiteralType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, BooleanLiteralType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = BooleanLiteralType.__proto__ || Object.getPrototypeOf(BooleanLiteralType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'BooleanLiteralType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(BooleanLiteralType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      if (input !== this.value) {\n        yield [path, getErrorMessage(this.value ? 'ERR_EXPECT_TRUE' : 'ERR_EXPECT_FALSE'), this];\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return input === this.value;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof BooleanLiteralType && input.value === this.value) {\n        return 0;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.value ? 'true' : 'false';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        type: this.typeName,\n        value: this.value\n      };\n    }\n  }]);\n  return BooleanLiteralType;\n}(Type);\n\nvar BooleanType = function (_Type) {\n  inherits(BooleanType, _Type);\n\n  function BooleanType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, BooleanType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = BooleanType.__proto__ || Object.getPrototypeOf(BooleanType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'BooleanType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(BooleanType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      if (typeof input !== 'boolean') {\n        yield [path, getErrorMessage('ERR_EXPECT_BOOLEAN'), this];\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return typeof input === 'boolean';\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof BooleanLiteralType) {\n        return 1;\n      } else if (input instanceof BooleanType) {\n        return 0;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return 'boolean';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName\n      };\n    }\n  }]);\n  return BooleanType;\n}(Type);\n\nvar EmptyType = function (_Type) {\n  inherits(EmptyType, _Type);\n\n  function EmptyType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, EmptyType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = EmptyType.__proto__ || Object.getPrototypeOf(EmptyType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'EmptyType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(EmptyType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      yield [path, getErrorMessage('ERR_EXPECT_EMPTY'), this];\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return false; // empty types accepts nothing.\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof EmptyType) {\n        return 0;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return 'empty';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName\n      };\n    }\n  }]);\n  return EmptyType;\n}(Type);\n\nvar ExistentialType = function (_Type) {\n  inherits(ExistentialType, _Type);\n\n  function ExistentialType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ExistentialType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ExistentialType.__proto__ || Object.getPrototypeOf(ExistentialType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ExistentialType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ExistentialType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {}\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return true;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return 1;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '*';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName\n      };\n    }\n  }]);\n  return ExistentialType;\n}(Type);\n\n/**\n * # TypeParameterApplication\n *\n */\nvar TypeParameterApplication = function (_Type) {\n  inherits(TypeParameterApplication, _Type);\n\n  function TypeParameterApplication() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, TypeParameterApplication);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = TypeParameterApplication.__proto__ || Object.getPrototypeOf(TypeParameterApplication)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'TypeParameterApplication', _this.typeInstances = [], _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(TypeParameterApplication, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var parent = this.parent,\n          typeInstances = this.typeInstances;\n\n      yield* parent.errors.apply(parent, [validation, path, input].concat(toConsumableArray(typeInstances)));\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var parent = this.parent,\n          typeInstances = this.typeInstances;\n\n      return parent.accepts.apply(parent, [input].concat(toConsumableArray(typeInstances)));\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      var _parent;\n\n      return (_parent = this.parent).compareWith.apply(_parent, [input].concat(toConsumableArray(this.typeInstances)));\n    }\n  }, {\n    key: 'hasProperty',\n    value: function hasProperty(name) {\n      var inner = this.parent;\n      if (inner && typeof inner.hasProperty === 'function') {\n        var _ref2;\n\n        return (_ref2 = inner).hasProperty.apply(_ref2, [name].concat(toConsumableArray(this.typeInstances)));\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: 'getProperty',\n    value: function getProperty(name) {\n      var inner = this.parent;\n      if (inner && typeof inner.getProperty === 'function') {\n        var _ref3;\n\n        return (_ref3 = inner).getProperty.apply(_ref3, [name].concat(toConsumableArray(this.typeInstances)));\n      }\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      var _parent2;\n\n      return (_parent2 = this.parent).unwrap.apply(_parent2, toConsumableArray(this.typeInstances));\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var parent = this.parent,\n          typeInstances = this.typeInstances;\n      var name = parent.name;\n\n      if (typeInstances.length) {\n        var items = [];\n        for (var i = 0; i < typeInstances.length; i++) {\n          var typeInstance = typeInstances[i];\n          items.push(typeInstance.toString());\n        }\n        return `${name}<${items.join(', ')}>`;\n      } else {\n        return name;\n      }\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        typeInstances: this.typeInstances\n      };\n    }\n  }]);\n  return TypeParameterApplication;\n}(Type);\n\n/**\n * Add constraints to the given subject type.\n */\nfunction addConstraints(subject) {\n  var _subject$constraints;\n\n  for (var _len = arguments.length, constraints = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    constraints[_key - 1] = arguments[_key];\n  }\n\n  (_subject$constraints = subject.constraints).push.apply(_subject$constraints, toConsumableArray(constraints));\n}\n\n/**\n * Collect any errors from constraints on the given subject type.\n */\n\n\nfunction* collectConstraintErrors(subject, validation, path) {\n  var constraints = subject.constraints;\n  var length = constraints.length;\n\n  for (var _len2 = arguments.length, input = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n    input[_key2 - 3] = arguments[_key2];\n  }\n\n  for (var i = 0; i < length; i++) {\n    var constraint = constraints[i];\n    var violation = constraint.apply(undefined, toConsumableArray(input));\n    if (typeof violation === 'string') {\n      yield [path, violation, this];\n    }\n  }\n}\n\n/**\n * Determine whether the input passes the constraints on the subject type.\n */\nfunction constraintsAccept(subject) {\n  var constraints = subject.constraints;\n  var length = constraints.length;\n\n  for (var _len3 = arguments.length, input = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    input[_key3 - 1] = arguments[_key3];\n  }\n\n  for (var i = 0; i < length; i++) {\n    var constraint = constraints[i];\n    if (typeof constraint.apply(undefined, toConsumableArray(input)) === 'string') {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar TypeAlias = function (_Type) {\n  inherits(TypeAlias, _Type);\n\n  function TypeAlias() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, TypeAlias);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = TypeAlias.__proto__ || Object.getPrototypeOf(TypeAlias)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'TypeAlias', _this.constraints = [], _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(TypeAlias, [{\n    key: 'addConstraint',\n    value: function addConstraint() {\n      for (var _len2 = arguments.length, constraints = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        constraints[_key2] = arguments[_key2];\n      }\n\n      addConstraints.apply(undefined, [this].concat(toConsumableArray(constraints)));\n      return this;\n    }\n  }, {\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var type = this.type;\n\n      var hasErrors = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = type.errors(validation, path, input)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var error = _step.value;\n\n          hasErrors = true;\n          yield error;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (!hasErrors) {\n        yield* collectConstraintErrors(this, validation, path, input);\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var type = this.type;\n\n      if (!type.accepts(input)) {\n        return false;\n      } else if (!constraintsAccept(this, input)) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input === this) {\n        return 0; // should never need this because it's taken care of by compareTypes.\n      } else if (this.hasConstraints) {\n        // if we have constraints the types cannot be the same\n        return -1;\n      } else {\n        return compareTypes(this.type, input);\n      }\n    }\n  }, {\n    key: 'apply',\n    value: function apply() {\n      var target = new TypeParameterApplication(this.context);\n      target.parent = this;\n\n      for (var _len3 = arguments.length, typeInstances = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        typeInstances[_key3] = arguments[_key3];\n      }\n\n      target.typeInstances = typeInstances;\n      return target;\n    }\n\n    /**\n     * Get the inner type or value.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.type.unwrap();\n    }\n  }, {\n    key: 'hasProperty',\n    value: function hasProperty(name) {\n      var inner = this.unwrap();\n      if (inner && typeof inner.hasProperty === 'function') {\n        return inner.hasProperty(name);\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: 'getProperty',\n    value: function getProperty(name) {\n      var inner = this.unwrap();\n      if (inner && typeof inner.getProperty === 'function') {\n        return inner.getProperty(name);\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString(withDeclaration) {\n      var name = this.name,\n          type = this.type;\n\n      if (withDeclaration) {\n        return `type ${name} = ${type.toString()};`;\n      } else {\n        return name;\n      }\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        name: this.name,\n        type: this.type\n      };\n    }\n  }, {\n    key: 'properties',\n    get: function get$$1() {\n      return this.type.properties;\n    }\n  }, {\n    key: 'hasConstraints',\n    get: function get$$1() {\n      return this.constraints.length > 0;\n    }\n  }]);\n  return TypeAlias;\n}(Type);\n\nvar FlowIntoSymbol = Symbol('FlowInto');\n\n/**\n * # TypeParameter\n *\n * Type parameters allow polymorphic type safety.\n * The first time a type parameter is checked, it records the shape of its input,\n * this recorded shape is used to check all future inputs for this particular instance.\n */\n\nvar TypeParameter = function (_Type) {\n  inherits(TypeParameter, _Type);\n\n  function TypeParameter() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, TypeParameter);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = TypeParameter.__proto__ || Object.getPrototypeOf(TypeParameter)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'TypeParameter', _this[FlowIntoSymbol] = null, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  // Issue 252\n\n\n  createClass(TypeParameter, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var boundOrDefault = this.bound || this.default;\n      var recorded = this.recorded,\n          context = this.context;\n\n\n      if (boundOrDefault instanceof FlowIntoType || boundOrDefault instanceof TypeAlias) {\n        // We defer to the other type parameter so that values from this\n        // one can flow \"upwards\".\n        yield* boundOrDefault.errors(validation, path, input);\n        return;\n      } else if (recorded) {\n        // we've already recorded a value for this type parameter\n        yield* recorded.errors(validation, path, input);\n        return;\n      } else if (boundOrDefault) {\n        if (boundOrDefault.typeName === 'AnyType' || boundOrDefault.typeName === 'ExistentialType') {\n          return;\n        } else {\n          var hasErrors = false;\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = boundOrDefault.errors(validation, path, input)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var error = _step.value;\n\n              hasErrors = true;\n              yield error;\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          if (hasErrors) {\n            return;\n          }\n        }\n      }\n\n      this.recorded = context.typeOf(input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var boundOrDefault = this.bound || this.default;\n      var recorded = this.recorded,\n          context = this.context;\n\n      if (boundOrDefault instanceof FlowIntoType || boundOrDefault instanceof TypeAlias) {\n        // We defer to the other type parameter so that values from this\n        // one can flow \"upwards\".\n        return boundOrDefault.accepts(input);\n      } else if (recorded) {\n        return recorded.accepts(input);\n      } else if (boundOrDefault) {\n        if (boundOrDefault.typeName === \"AnyType\" || boundOrDefault.typeName === \"ExistentialType\") {\n          return true;\n        } else if (!boundOrDefault.accepts(input)) {\n          return false;\n        }\n      }\n\n      this.recorded = context.typeOf(input);\n      return true;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      var boundOrDefault = this.bound || this.default;\n      var recorded = this.recorded;\n\n      if (input instanceof TypeParameter) {\n        // We don't need to check for `recorded` or `bound` fields\n        // because the input has already been unwrapped, so\n        // if we got a type parameter it must be totally generic and\n        // we treat it like Any.\n        return 1;\n      } else if (recorded) {\n        return compareTypes(recorded, input);\n      } else if (boundOrDefault) {\n        return compareTypes(boundOrDefault, input);\n      } else {\n        // A generic type parameter accepts any input.\n        return 1;\n      }\n    }\n\n    /**\n     * Get the inner type or value.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      var boundOrDefault = this.bound || this.default;\n      var recorded = this.recorded;\n\n      if (recorded) {\n        return recorded.unwrap();\n      } else if (boundOrDefault) {\n        return boundOrDefault.unwrap();\n      } else {\n        return this;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString(withBinding) {\n      var id = this.id,\n          bound = this.bound,\n          defaultType = this.default;\n\n      if (withBinding) {\n        if (defaultType) {\n          return `${id} = ${defaultType.toString()}`;\n        } else if (bound) {\n          return `${id}: ${bound.toString()}`;\n        }\n      }\n      return id;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        id: this.id,\n        bound: this.bound,\n        recorded: this.recorded\n      };\n    }\n  }]);\n  return TypeParameter;\n}(Type);\n\nfunction flowIntoTypeParameter(typeParameter) {\n  var existing = typeParameter[FlowIntoSymbol];\n  if (existing) {\n    return existing;\n  }\n\n  var target = new FlowIntoType(typeParameter.context);\n  target.typeParameter = typeParameter;\n  typeParameter[FlowIntoSymbol] = target;\n  return target;\n}\n\n/**\n * # FlowIntoType\n *\n * A virtual type which allows types it receives to \"flow\" upwards into a type parameter.\n * The type parameter will become of a union of any types seen by this instance.\n */\n\nvar FlowIntoType = function (_Type) {\n  inherits(FlowIntoType, _Type);\n\n  function FlowIntoType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, FlowIntoType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = FlowIntoType.__proto__ || Object.getPrototypeOf(FlowIntoType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'FlowIntoType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(FlowIntoType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var typeParameter = this.typeParameter,\n          context = this.context;\n      var recorded = typeParameter.recorded,\n          bound = typeParameter.bound;\n\n\n      if (bound instanceof FlowIntoType) {\n        // We defer to the other type so that values from this\n        // one can flow \"upwards\".\n        yield* bound.errors(validation, path, input);\n        return;\n      }\n      if (recorded) {\n        // we've already recorded a value for this type parameter\n        if (bound) {\n          var hasError = false;\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = bound.errors(validation, path, input)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var error = _step.value;\n\n              yield error;\n              hasError = true;\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          if (hasError) {\n            return;\n          }\n        } else if (recorded.accepts(input)) {\n          // our existing type already permits this value, there's nothing to do.\n          return;\n        } else {\n          // we need to make a union\n          typeParameter.recorded = context.union(recorded, context.typeOf(input));\n          return;\n        }\n      } else if (bound) {\n        if (bound.typeName === 'AnyType' || bound.typeName === 'ExistentialType') {\n          return;\n        } else {\n          var _hasError = false;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = bound.errors(validation, path, input)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _error = _step2.value;\n\n              yield _error;\n              _hasError = true;\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          if (_hasError) {\n            return;\n          }\n        }\n      }\n\n      typeParameter.recorded = context.typeOf(input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var typeParameter = this.typeParameter,\n          context = this.context;\n      var recorded = typeParameter.recorded,\n          bound = typeParameter.bound;\n\n\n      if (bound instanceof FlowIntoType) {\n        // We defer to the other type so that values from this\n        // one can flow \"upwards\".\n        return bound.accepts(input);\n      }\n      if (recorded) {\n        // we've already recorded a value for this type parameter\n        if (bound && !bound.accepts(input)) {\n          return false;\n        } else if (recorded.accepts(input)) {\n          // our existing type already permits this value, there's nothing to do.\n          return true;\n        } else {\n          // we need to make a union\n          typeParameter.recorded = context.union(recorded, context.typeOf(input));\n          return true;\n        }\n      } else if (bound) {\n        if (bound.typeName === 'AnyType' || bound.typeName === 'ExistentialType') {\n          return true;\n        } else if (!bound.accepts(input)) {\n          return false;\n        }\n      }\n\n      typeParameter.recorded = context.typeOf(input);\n      return true;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      var typeParameter = this.typeParameter,\n          context = this.context;\n      var recorded = typeParameter.recorded,\n          bound = typeParameter.bound;\n\n      if (bound instanceof FlowIntoType) {\n        // We defer to the other type so that values from this\n        // one can flow \"upwards\".\n        return bound.compareWith(input);\n      }\n      if (recorded) {\n        if (bound && compareTypes(bound, input) === -1) {\n          return -1;\n        }\n        var result = compareTypes(recorded, input);\n        if (result === 0) {\n          // our existing type already permits this value, there's nothing to do.\n          return 0;\n        }\n        // we need to make a union\n        typeParameter.recorded = context.union(recorded, input);\n        return 1;\n      } else if (bound) {\n        if (bound.typeName === 'AnyType' || bound.typeName === 'ExistentialType') {\n          return 1;\n        }\n        var _result = compareTypes(bound, input);\n        if (_result === -1) {\n          return -1;\n        }\n      }\n\n      typeParameter.recorded = input;\n      return 0;\n    }\n\n    /**\n     * Get the inner type or value.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.typeParameter.unwrap();\n    }\n  }, {\n    key: 'toString',\n    value: function toString(withBinding) {\n      return this.typeParameter.toString(withBinding);\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return this.typeParameter.toJSON();\n    }\n  }]);\n  return FlowIntoType;\n}(Type);\n\nvar FunctionTypeRestParam = function (_Type) {\n  inherits(FunctionTypeRestParam, _Type);\n\n  function FunctionTypeRestParam() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, FunctionTypeRestParam);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = FunctionTypeRestParam.__proto__ || Object.getPrototypeOf(FunctionTypeRestParam)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'FunctionTypeRestParam', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(FunctionTypeRestParam, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var type = this.type;\n\n      yield* type.errors(validation, path, input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var type = this.type;\n\n      return type.accepts(input);\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof FunctionTypeParam || input instanceof FunctionTypeRestParam) {\n        return compareTypes(this.type, input.type);\n      } else {\n        var result = compareTypes(this.type, input);\n        if (result === -1) {\n          return -1;\n        } else {\n          return 1;\n        }\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var type = this.type;\n\n      return `...${this.name}: ${type.toString()}`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        name: this.name,\n        type: this.type\n      };\n    }\n  }]);\n  return FunctionTypeRestParam;\n}(Type);\n\nvar FunctionTypeParam = function (_Type) {\n  inherits(FunctionTypeParam, _Type);\n\n  function FunctionTypeParam() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, FunctionTypeParam);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = FunctionTypeParam.__proto__ || Object.getPrototypeOf(FunctionTypeParam)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'FunctionTypeParam', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(FunctionTypeParam, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var optional = this.optional,\n          type = this.type;\n\n      if (optional && input === undefined) {\n        return;\n      } else {\n        yield* type.errors(validation, path, input);\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var optional = this.optional,\n          type = this.type;\n\n      if (optional && input === undefined) {\n        return true;\n      } else {\n        return type.accepts(input);\n      }\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof FunctionTypeParam || input instanceof FunctionTypeRestParam) {\n        return compareTypes(this.type, input.type);\n      } else {\n        return compareTypes(this.type, input);\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var optional = this.optional,\n          type = this.type;\n\n      return `${this.name}${optional ? '?' : ''}: ${type.toString()}`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        name: this.name,\n        optional: this.optional,\n        type: this.type\n      };\n    }\n  }]);\n  return FunctionTypeParam;\n}(Type);\n\nvar FunctionTypeReturn = function (_Type) {\n  inherits(FunctionTypeReturn, _Type);\n\n  function FunctionTypeReturn() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, FunctionTypeReturn);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = FunctionTypeReturn.__proto__ || Object.getPrototypeOf(FunctionTypeReturn)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'FunctionTypeReturn', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(FunctionTypeReturn, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var type = this.type;\n\n      yield* type.errors(validation, path.concat('[[Return Type]]'), input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var type = this.type;\n\n      return type.accepts(input);\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof FunctionTypeReturn) {\n        return compareTypes(this.type, input.type);\n      } else {\n        var result = compareTypes(this.type, input);\n        if (result === -1) {\n          return -1;\n        } else {\n          return 1;\n        }\n      }\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.type;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var type = this.type;\n\n      return type.toString();\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        type: this.type\n      };\n    }\n  }]);\n  return FunctionTypeReturn;\n}(Type);\n\nvar ParentSymbol = Symbol('Parent');\nvar NameRegistrySymbol = Symbol('NameRegistry');\nvar ModuleRegistrySymbol = Symbol('ModuleRegistry');\nvar CurrentModuleSymbol = Symbol('CurrentModule');\nvar TypeConstructorRegistrySymbol = Symbol('TypeConstructorRegistry');\nvar InferrerSymbol = Symbol('Inferrer');\n\n\nvar TypeSymbol = Symbol('Type');\nvar TypeParametersSymbol = Symbol('TypeParameters');\nvar TypePredicateRegistrySymbol = Symbol('TypePredicateRegistry');\n\nvar FunctionType = function (_Type) {\n  inherits(FunctionType, _Type);\n\n  function FunctionType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, FunctionType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = FunctionType.__proto__ || Object.getPrototypeOf(FunctionType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'FunctionType', _this.params = [], _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(FunctionType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      if (typeof input !== 'function') {\n        yield [path, getErrorMessage('ERR_EXPECT_FUNCTION'), this];\n        return;\n      }\n      var annotation = input[TypeSymbol];\n      var returnType = this.returnType,\n          params = this.params;\n\n      if (annotation) {\n        if (!annotation.params) {\n          return;\n        }\n        for (var i = 0; i < params.length; i++) {\n          var param = params[i];\n          var annotationParam = annotation.params[i];\n          if (!annotationParam && !param.optional) {\n            yield [path, getErrorMessage('ERR_EXPECT_ARGUMENT', param.name, param.type.toString()), this];\n          } else if (!param.acceptsType(annotationParam)) {\n            yield [path, getErrorMessage('ERR_EXPECT_ARGUMENT', param.name, param.type.toString()), this];\n          }\n        }\n        if (!returnType.acceptsType(annotation.returnType)) {\n          yield [path, getErrorMessage('ERR_EXPECT_RETURN', returnType.toString()), this];\n        }\n      } else {\n        var context = this.context;\n        // We cannot safely check an unannotated function.\n        // But we need to propagate `any` type feedback upwards.\n\n        for (var _i = 0; _i < params.length; _i++) {\n          var _param = params[_i];\n          _param.acceptsType(context.any());\n        }\n        returnType.acceptsType(context.any());\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      if (typeof input !== 'function') {\n        return false;\n      }\n      var returnType = this.returnType,\n          params = this.params;\n\n      var annotation = input[TypeSymbol];\n      if (annotation) {\n        if (!annotation.params) {\n          return true;\n        }\n        for (var i = 0; i < params.length; i++) {\n          var param = params[i];\n          var annotationParam = annotation.params[i];\n          if (!annotationParam && !param.optional) {\n            return false;\n          } else if (!param.acceptsType(annotationParam)) {\n            return false;\n          }\n        }\n        if (!returnType.acceptsType(annotation.returnType)) {\n          return false;\n        }\n        return true;\n      } else {\n        var context = this.context;\n        // We cannot safely check an unannotated function.\n        // But we need to propagate `any` type feedback upwards.\n\n        for (var _i2 = 0; _i2 < params.length; _i2++) {\n          var _param2 = params[_i2];\n          _param2.acceptsType(context.any());\n        }\n        returnType.acceptsType(context.any());\n        return true;\n      }\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (!(input instanceof FunctionType)) {\n        return -1;\n      }\n      var returnType = this.returnType;\n      var inputReturnType = input.returnType;\n      var isGreater = false;\n      var returnTypeResult = compareTypes(returnType, inputReturnType);\n      if (returnTypeResult === -1) {\n        return -1;\n      } else if (returnTypeResult === 1) {\n        isGreater = true;\n      }\n\n      var params = this.params;\n      var inputParams = input.params;\n      for (var i = 0; i < params.length; i++) {\n        var param = params[i];\n        var inputParam = i >= inputParams.length ? input.rest : inputParams[i];\n        if (inputParam == null) {\n          return -1;\n        }\n        var result = compareTypes(param, inputParam);\n        if (result === -1) {\n          return -1;\n        } else if (result === 1) {\n          isGreater = true;\n        }\n      }\n      return isGreater ? 1 : 0;\n    }\n  }, {\n    key: 'acceptsParams',\n    value: function acceptsParams() {\n      var params = this.params,\n          rest = this.rest;\n\n      var paramsLength = params.length;\n\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var argsLength = args.length;\n      for (var i = 0; i < paramsLength; i++) {\n        var param = params[i];\n        if (i < argsLength) {\n          if (!param.accepts(args[i])) {\n            return false;\n          }\n        } else if (!param.accepts(undefined)) {\n          return false;\n        }\n      }\n\n      if (argsLength > paramsLength && rest) {\n        for (var _i3 = paramsLength; _i3 < argsLength; _i3++) {\n          if (!rest.accepts(args[_i3])) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: 'acceptsReturn',\n    value: function acceptsReturn(input) {\n      return this.returnType.accepts(input);\n    }\n  }, {\n    key: 'assertParams',\n    value: function assertParams() {\n      var params = this.params,\n          rest = this.rest;\n\n      var paramsLength = params.length;\n\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      var argsLength = args.length;\n      for (var i = 0; i < paramsLength; i++) {\n        var param = params[i];\n        if (i < argsLength) {\n          param.assert(args[i]);\n        } else {\n          param.assert(undefined);\n        }\n      }\n\n      if (argsLength > paramsLength && rest) {\n        for (var _i4 = paramsLength; _i4 < argsLength; _i4++) {\n          rest.assert(args[_i4]);\n        }\n      }\n\n      return args;\n    }\n  }, {\n    key: 'assertReturn',\n    value: function assertReturn(input) {\n      this.returnType.assert(input);\n      return input;\n    }\n  }, {\n    key: 'invoke',\n    value: function invoke() {\n      var params = this.params,\n          rest = this.rest,\n          context = this.context;\n\n      var paramsLength = params.length;\n\n      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      var argsLength = args.length;\n      for (var i = 0; i < paramsLength; i++) {\n        var param = params[i];\n        if (i < argsLength) {\n          if (!param.acceptsType(args[i])) {\n            return context.empty();\n          }\n        } else if (!param.accepts(undefined)) {\n          return context.empty();\n        }\n      }\n\n      if (argsLength > paramsLength && rest) {\n        for (var _i5 = paramsLength; _i5 < argsLength; _i5++) {\n          if (!rest.acceptsType(args[_i5])) {\n            return context.empty();\n          }\n        }\n      }\n\n      return this.returnType.type;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var params = this.params,\n          rest = this.rest,\n          returnType = this.returnType;\n\n      var args = [];\n      for (var i = 0; i < params.length; i++) {\n        args.push(params[i].toString());\n      }\n      if (rest) {\n        args.push(rest.toString());\n      }\n      return `(${args.join(', ')}) => ${returnType.toString()}`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        params: this.params,\n        rest: this.rest,\n        returnType: this.returnType\n      };\n    }\n  }]);\n  return FunctionType;\n}(Type);\n\nvar GeneratorType = function (_Type) {\n  inherits(GeneratorType, _Type);\n\n  function GeneratorType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, GeneratorType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = GeneratorType.__proto__ || Object.getPrototypeOf(GeneratorType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'GeneratorType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(GeneratorType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var isValid = input && typeof input.next === 'function' && typeof input.return === 'function' && typeof input.throw === 'function';\n      if (!isValid) {\n        yield [path, getErrorMessage('ERR_EXPECT_GENERATOR'), this];\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return input && typeof input.next === 'function' && typeof input.return === 'function' && typeof input.throw === 'function';\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (!(input instanceof GeneratorType)) {\n        var _result = compareTypes(this.yieldType, input);\n        if (_result === -1) {\n          return -1;\n        } else {\n          return 1;\n        }\n      }\n      var isGreater = false;\n      var result = compareTypes(this.yieldType, input.yieldType);\n      if (result === -1) {\n        return -1;\n      } else if (result === 1) {\n        isGreater = true;\n      }\n\n      result = compareTypes(this.returnType, input.returnType);\n      if (result === -1) {\n        return -1;\n      } else if (result === 1) {\n        isGreater = true;\n      }\n\n      result = compareTypes(this.nextType, input.nextType);\n      if (result === -1) {\n        return -1;\n      } else if (result === 1) {\n        isGreater = true;\n      }\n\n      return isGreater ? 1 : 0;\n    }\n  }, {\n    key: 'acceptsYield',\n    value: function acceptsYield(input) {\n      return this.yieldType.accepts(input);\n    }\n  }, {\n    key: 'acceptsReturn',\n    value: function acceptsReturn(input) {\n      return this.returnType.accepts(input);\n    }\n  }, {\n    key: 'acceptsNext',\n    value: function acceptsNext(input) {\n      return this.nextType.accepts(input);\n    }\n  }, {\n    key: 'assertYield',\n    value: function assertYield(input) {\n      return this.yieldType.assert(input);\n    }\n  }, {\n    key: 'assertReturn',\n    value: function assertReturn(input) {\n      return this.returnType.assert(input);\n    }\n  }, {\n    key: 'assertNext',\n    value: function assertNext(input) {\n      return this.nextType.assert(input);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var yieldType = this.yieldType,\n          returnType = this.returnType,\n          nextType = this.nextType;\n\n      return `Generator<${yieldType.toString()}, ${returnType.toString()}, ${nextType.toString()}`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        yieldType: this.yieldType,\n        returnType: this.returnType,\n        nextType: this.nextType\n      };\n    }\n  }]);\n  return GeneratorType;\n}(Type);\n\nvar warnedInstances = new WeakSet();\n\nvar TypeConstructor = function (_Type) {\n  inherits(TypeConstructor, _Type);\n\n  function TypeConstructor() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, TypeConstructor);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = TypeConstructor.__proto__ || Object.getPrototypeOf(TypeConstructor)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'TypeConstructor', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(TypeConstructor, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {}\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var context = this.context,\n          name = this.name;\n\n      if (!warnedInstances.has(this)) {\n        context.emitWarningMessage(`TypeConstructor ${name} does not implement accepts().`);\n        warnedInstances.add(this);\n      }\n      return false;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      var context = this.context,\n          name = this.name;\n\n      if (!warnedInstances.has(this)) {\n        context.emitWarningMessage(`TypeConstructor ${name} does not implement compareWith().`);\n        warnedInstances.add(this);\n      }\n      return -1;\n    }\n  }, {\n    key: 'inferTypeParameters',\n    value: function inferTypeParameters(input) {\n      return [];\n    }\n  }, {\n    key: 'apply',\n    value: function apply() {\n      var target = new TypeParameterApplication(this.context);\n      target.parent = this;\n\n      for (var _len2 = arguments.length, typeInstances = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        typeInstances[_key2] = arguments[_key2];\n      }\n\n      target.typeInstances = typeInstances;\n      return target;\n    }\n\n    /**\n     * Get the inner type or value.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.name;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        name: this.name\n      };\n    }\n  }]);\n  return TypeConstructor;\n}(Type);\n\nvar GenericType = function (_TypeConstructor) {\n  inherits(GenericType, _TypeConstructor);\n\n  function GenericType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, GenericType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = GenericType.__proto__ || Object.getPrototypeOf(GenericType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = \"GenericType\", _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(GenericType, [{\n    key: \"errors\",\n    value: function* errors(validation, path, input) {\n      var name = this.name,\n          impl = this.impl;\n\n      if (!(input instanceof impl)) {\n        yield [path, getErrorMessage(\"ERR_EXPECT_INSTANCEOF\", name), this];\n      }\n    }\n  }, {\n    key: \"accepts\",\n    value: function accepts(input) {\n      var impl = this.impl;\n\n      return input instanceof impl;\n    }\n  }, {\n    key: \"compareWith\",\n    value: function compareWith(input) {\n      var context = this.context,\n          impl = this.impl;\n\n      var annotation = context.getAnnotation(impl);\n      if (annotation) {\n        for (var _len2 = arguments.length, typeInstances = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          typeInstances[_key2 - 1] = arguments[_key2];\n        }\n\n        var expected = annotation.unwrap.apply(annotation, toConsumableArray(typeInstances));\n        return compareTypes(input, expected);\n      } else if (input instanceof GenericType && (input.impl === impl || impl && impl.isPrototypeOf(input.impl))) {\n        return 0;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: \"unwrap\",\n    value: function unwrap() {\n      var context = this.context,\n          impl = this.impl;\n\n      if (typeof impl !== \"function\") {\n        return this;\n      }\n      var annotation = context.getAnnotation(impl);\n      if (annotation != null) {\n        return annotation.unwrap.apply(annotation, arguments);\n      } else {\n        return this;\n      }\n    }\n  }, {\n    key: \"inferTypeParameters\",\n    value: function inferTypeParameters(input) {\n      return [];\n    }\n  }]);\n  return GenericType;\n}(TypeConstructor);\n\nfunction invariant(input, message) {\n  if (!input) {\n    var error = new Error(message);\n    error.name = 'InvariantViolation';\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(error, invariant);\n    }\n    throw error;\n  }\n}\n\nvar NullLiteralType = function (_Type) {\n  inherits(NullLiteralType, _Type);\n\n  function NullLiteralType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, NullLiteralType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = NullLiteralType.__proto__ || Object.getPrototypeOf(NullLiteralType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'NullLiteralType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(NullLiteralType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      if (input !== null) {\n        yield [path, getErrorMessage('ERR_EXPECT_NULL'), this];\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return input === null;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof NullLiteralType) {\n        return 0;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return 'null';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName\n      };\n    }\n  }]);\n  return NullLiteralType;\n}(Type);\n\nvar VoidType = function (_Type) {\n  inherits(VoidType, _Type);\n\n  function VoidType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, VoidType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = VoidType.__proto__ || Object.getPrototypeOf(VoidType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'VoidType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(VoidType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      if (input !== undefined) {\n        yield [path, getErrorMessage('ERR_EXPECT_VOID'), this];\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return input === undefined;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof VoidType) {\n        return 0;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return 'void';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName\n      };\n    }\n  }]);\n  return VoidType;\n}(Type);\n\nvar NullableType = function (_Type) {\n  inherits(NullableType, _Type);\n\n  function NullableType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, NullableType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = NullableType.__proto__ || Object.getPrototypeOf(NullableType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'NullableType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(NullableType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      if (input != null) {\n        yield* this.type.errors(validation, path, input);\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      if (input == null) {\n        return true;\n      } else {\n        return this.type.accepts(input);\n      }\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof NullLiteralType || input instanceof VoidType) {\n        return 1;\n      } else if (input instanceof NullableType) {\n        return compareTypes(this.type, input.type);\n      } else {\n        var result = compareTypes(this.type, input);\n        if (result === -1) {\n          return -1;\n        } else {\n          return 1;\n        }\n      }\n    }\n\n    /**\n     * Get the inner type or value.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `? ${this.type.toString()}`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        type: this.type\n      };\n    }\n  }]);\n  return NullableType;\n}(Type);\n\nvar ObjectTypeProperty = function (_Type) {\n  inherits(ObjectTypeProperty, _Type);\n\n  function ObjectTypeProperty() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ObjectTypeProperty);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ObjectTypeProperty.__proto__ || Object.getPrototypeOf(ObjectTypeProperty)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ObjectTypeProperty', _this['static'] = false, _this.constraints = [], _temp), possibleConstructorReturn(_this, _ret);\n  }\n  // Ignore\n\n\n  createClass(ObjectTypeProperty, [{\n    key: 'addConstraint',\n    value: function addConstraint() {\n      for (var _len2 = arguments.length, constraints = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        constraints[_key2] = arguments[_key2];\n      }\n\n      addConstraints.apply(undefined, [this].concat(toConsumableArray(constraints)));\n      return this;\n    }\n\n    /**\n     * Determine whether the property is nullable.\n     */\n\n  }, {\n    key: 'isNullable',\n    value: function isNullable() {\n      return this.value instanceof NullableType;\n    }\n\n    /**\n     * Determine whether the property exists on the given input or its prototype chain.\n     */\n\n  }, {\n    key: 'existsOn',\n    value: function existsOn(input) {\n      // Ignore\n      var key = this.key,\n          isStatic = this.static;\n\n      return key in (isStatic ? input.constructor : input) === true;\n    }\n  }, {\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      // Ignore\n      var optional = this.optional,\n          key = this.key,\n          value = this.value,\n          isStatic = this.static;\n\n      var target = void 0;\n      var targetPath = void 0;\n      if (isStatic) {\n        if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n          yield [path, getErrorMessage('ERR_EXPECT_OBJECT'), this];\n          return;\n        }\n        targetPath = path.concat('constructor');\n        if (typeof input.constructor !== 'function') {\n          if (!optional) {\n            yield [targetPath, getErrorMessage('ERR_EXPECT_FUNCTION'), this];\n          }\n          return;\n        }\n        targetPath.push(key);\n        target = input.constructor[key];\n      } else {\n        target = input[key];\n        targetPath = path.concat(key);\n      }\n      if (optional && target === undefined) {\n        return;\n      }\n      if (this.isNullable() && !this.existsOn(input)) {\n        yield [targetPath, getErrorMessage('ERR_MISSING_PROPERTY'), this];\n        return;\n      }\n      var hasErrors = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = value.errors(validation, targetPath, target)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var error = _step.value;\n\n          hasErrors = true;\n          yield error;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (!hasErrors) {\n        yield* collectConstraintErrors(this, validation, targetPath, target);\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      // Ignore\n      var optional = this.optional,\n          key = this.key,\n          value = this.value,\n          isStatic = this.static;\n\n      var target = void 0;\n      if (isStatic) {\n        if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n          return false;\n        }\n        if (typeof input.constructor !== 'function') {\n          return optional ? true : false;\n        }\n        target = input.constructor[key];\n      } else {\n        target = input[key];\n      }\n\n      if (optional && target === undefined) {\n        return true;\n      }\n\n      if (this.isNullable() && !this.existsOn(input)) {\n        return false;\n      }\n\n      if (!value.accepts(target)) {\n        return false;\n      } else {\n        return constraintsAccept(this, target);\n      }\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (!(input instanceof ObjectTypeProperty)) {\n        return -1;\n      } else if (input.key !== this.key) {\n        return -1;\n      } else {\n        return compareTypes(this.value, input.value);\n      }\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.value.unwrap();\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var key = this.key;\n      // Issue 252\n      if (typeof key === 'symbol') {\n        key = `[${key.toString()}]`;\n      }\n      if (this.static) {\n        return `static ${key}${this.optional ? '?' : ''}: ${this.value.toString()};`;\n      } else {\n        return `${key}${this.optional ? '?' : ''}: ${this.value.toString()};`;\n      }\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        key: this.key,\n        value: this.value,\n        optional: this.optional\n      };\n    }\n  }]);\n  return ObjectTypeProperty;\n}(Type);\n\nvar ObjectTypeIndexer = function (_Type) {\n  inherits(ObjectTypeIndexer, _Type);\n\n  function ObjectTypeIndexer() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ObjectTypeIndexer);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ObjectTypeIndexer.__proto__ || Object.getPrototypeOf(ObjectTypeIndexer)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ObjectTypeIndexer', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ObjectTypeIndexer, [{\n    key: 'errors',\n    value: function* errors(validation, path, key, value) {\n      // special case number types\n      if (this.key.typeName === 'NumberType' || this.key.typeName === 'NumericLiteralType') {\n        key = +key;\n      }\n\n      yield* this.key.errors(validation, path.concat('[[Key]]'), key);\n      yield* this.value.errors(validation, path.concat(key), value);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(value) {\n      return this.value.accepts(value);\n    }\n  }, {\n    key: 'acceptsKey',\n    value: function acceptsKey(key) {\n      // special case number types\n      if (this.key.typeName === 'NumberType' || this.key.typeName === 'NumericLiteralType') {\n        key = +key;\n      }\n      return this.key.accepts(key);\n    }\n  }, {\n    key: 'acceptsValue',\n    value: function acceptsValue(value) {\n      return this.value.accepts(value);\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof ObjectTypeProperty) {\n        if (!this.key.accepts(input.key)) {\n          return -1;\n        } else {\n          return compareTypes(this.value, input.value);\n        }\n      } else if (!(input instanceof ObjectTypeIndexer)) {\n        return -1;\n      }\n\n      var keyResult = compareTypes(this.key, input.key);\n      if (keyResult === -1) {\n        return -1;\n      }\n      var valueResult = compareTypes(this.value, input.value);\n      if (valueResult === -1) {\n        return -1;\n      }\n\n      if (keyResult === 0 && valueResult === 0) {\n        return 0;\n      } else {\n        return 1;\n      }\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.value.unwrap();\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `[${this.id}: ${this.key.toString()}]: ${this.value.toString()};`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        id: this.id,\n        key: this.key,\n        value: this.value\n      };\n    }\n  }]);\n  return ObjectTypeIndexer;\n}(Type);\n\nvar ObjectTypeCallProperty = function (_Type) {\n  inherits(ObjectTypeCallProperty, _Type);\n\n  function ObjectTypeCallProperty() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ObjectTypeCallProperty);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ObjectTypeCallProperty.__proto__ || Object.getPrototypeOf(ObjectTypeCallProperty)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ObjectTypeCallProperty', _this['static'] = false, _temp), possibleConstructorReturn(_this, _ret);\n  }\n  // Ignore\n\n\n  createClass(ObjectTypeCallProperty, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      // Ignore\n      var value = this.value,\n          isStatic = this.static;\n\n\n      var target = void 0;\n      var targetPath = void 0;\n      if (isStatic) {\n        if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n          yield [path, getErrorMessage('ERR_EXPECT_OBJECT'), this];\n          return;\n        }\n        targetPath = path.concat('constructor');\n        if (typeof input.constructor !== 'function') {\n          yield [targetPath, getErrorMessage('ERR_EXPECT_FUNCTION'), this];\n          return;\n        }\n        target = input.constructor;\n      } else {\n        target = input;\n        targetPath = path;\n      }\n      yield* value.errors(validation, targetPath, target);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      // Ignore\n      var value = this.value,\n          isStatic = this.static;\n\n      var target = void 0;\n      if (isStatic) {\n        if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n          return false;\n        }\n        if (typeof input.constructor !== 'function') {\n          return false;\n        }\n        target = input.constructor;\n      } else {\n        target = input;\n      }\n      return value.accepts(target);\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (!(input instanceof ObjectTypeCallProperty)) {\n        return -1;\n      }\n      return compareTypes(this.value, input.value);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.value.unwrap();\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      if (this.static) {\n        return `static ${this.value.toString()};`;\n      } else {\n        return this.value.toString();\n      }\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        value: this.value\n      };\n    }\n  }]);\n  return ObjectTypeCallProperty;\n}(Type);\n\nvar Declaration = function (_Type) {\n  inherits(Declaration, _Type);\n\n  function Declaration() {\n    classCallCheck(this, Declaration);\n    return possibleConstructorReturn(this, (Declaration.__proto__ || Object.getPrototypeOf(Declaration)).apply(this, arguments));\n  }\n\n  return Declaration;\n}(Type);\n\nvar VarDeclaration = function (_Declaration) {\n  inherits(VarDeclaration, _Declaration);\n\n  function VarDeclaration() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, VarDeclaration);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = VarDeclaration.__proto__ || Object.getPrototypeOf(VarDeclaration)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'VarDeclaration', _this.constraints = [], _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(VarDeclaration, [{\n    key: 'addConstraint',\n    value: function addConstraint() {\n      for (var _len2 = arguments.length, constraints = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        constraints[_key2] = arguments[_key2];\n      }\n\n      addConstraints.apply(undefined, [this].concat(toConsumableArray(constraints)));\n      return this;\n    }\n  }, {\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var type = this.type;\n\n      var hasErrors = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = type.errors(validation, path, input)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var error = _step.value;\n\n          hasErrors = true;\n          yield error;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (!hasErrors) {\n        yield* collectConstraintErrors(this, validation, path, input);\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var type = this.type;\n\n      if (!type.accepts(input)) {\n        return false;\n      } else if (!constraintsAccept(this, input)) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.type, input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.type.unwrap();\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `declare var ${this.name}: ${this.type.toString()};`;\n    }\n  }]);\n  return VarDeclaration;\n}(Declaration);\n\nvar TypeDeclaration = function (_Declaration) {\n  inherits(TypeDeclaration, _Declaration);\n\n  function TypeDeclaration() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, TypeDeclaration);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = TypeDeclaration.__proto__ || Object.getPrototypeOf(TypeDeclaration)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'TypeDeclaration', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(TypeDeclaration, [{\n    key: 'addConstraint',\n    value: function addConstraint() {\n      var _typeAlias;\n\n      (_typeAlias = this.typeAlias).addConstraint.apply(_typeAlias, arguments);\n      return this;\n    }\n  }, {\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      yield* this.typeAlias.errors(validation, path, input);\n    }\n  }, {\n    key: 'apply',\n    value: function apply() {\n      var _typeAlias2;\n\n      return (_typeAlias2 = this.typeAlias).apply.apply(_typeAlias2, arguments);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return this.typeAlias.accepts(input);\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.typeAlias, input);\n    }\n  }, {\n    key: 'hasProperty',\n    value: function hasProperty(name) {\n      var _typeAlias3;\n\n      for (var _len2 = arguments.length, typeInstances = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        typeInstances[_key2 - 1] = arguments[_key2];\n      }\n\n      return (_typeAlias3 = this.typeAlias).hasProperty.apply(_typeAlias3, [name].concat(toConsumableArray(typeInstances)));\n    }\n  }, {\n    key: 'getProperty',\n    value: function getProperty(name) {\n      var _typeAlias4;\n\n      for (var _len3 = arguments.length, typeInstances = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        typeInstances[_key3 - 1] = arguments[_key3];\n      }\n\n      return (_typeAlias4 = this.typeAlias).getProperty.apply(_typeAlias4, [name].concat(toConsumableArray(typeInstances)));\n    }\n\n    /**\n     * Get the inner type or value.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      var _typeAlias5;\n\n      return (_typeAlias5 = this.typeAlias).unwrap.apply(_typeAlias5, arguments);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `declare ${this.typeAlias.toString(true)};`;\n    }\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return this.typeAlias.type;\n    }\n  }]);\n  return TypeDeclaration;\n}(Declaration);\n\nvar ModuleDeclaration = function (_Declaration) {\n  inherits(ModuleDeclaration, _Declaration);\n\n  function ModuleDeclaration() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ModuleDeclaration);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ModuleDeclaration.__proto__ || Object.getPrototypeOf(ModuleDeclaration)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ModuleDeclaration', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ModuleDeclaration, [{\n    key: 'get',\n    value: function get$$1(name) {\n      var moduleExports = this.moduleExports;\n\n      if (moduleExports) {\n        var exporting = moduleExports.unwrap();\n        if (typeof exporting.getProperty === 'function') {\n          var prop = exporting.getProperty(name);\n          if (prop) {\n            return prop.unwrap();\n          }\n        }\n      } else {\n        var declaration = this.declarations[name];\n        if (declaration) {\n          return declaration.unwrap();\n        }\n      }\n    }\n  }, {\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      // Can't validate a module directly.\n      // @todo should this throw?\n    }\n  }, {\n    key: 'import',\n    value: function _import(moduleName) {\n      if (/^\\.\\//.test(moduleName)) {\n        moduleName = `${this.name}${moduleName.slice(1)}`;\n      }\n      return this.innerContext.import(moduleName);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var name = this.name,\n          declarations = this.declarations,\n          modules = this.modules,\n          moduleExports = this.moduleExports;\n\n      var body = [];\n      for (var _name in declarations) {\n        // eslint-disable-line guard-for-in\n        var declaration = declarations[_name];\n        body.push(declaration.toString(true));\n      }\n      if (modules) {\n        for (var _name2 in modules) {\n          // eslint-disable-line guard-for-in\n          var module = modules[_name2];\n          body.push(module.toString());\n        }\n      }\n      if (moduleExports) {\n        body.push(moduleExports.toString());\n      }\n      return `declare module \"${name}\" {\\n${indent$1(body.join('\\n\\n'))}}`;\n    }\n  }, {\n    key: 'moduleType',\n    get: function get$$1() {\n      if (this.moduleExports) {\n        return 'commonjs';\n      } else {\n        return 'es6';\n      }\n    }\n  }, {\n    key: 'isCommonJS',\n    get: function get$$1() {\n      return this.moduleExports ? true : false;\n    }\n  }, {\n    key: 'isES6',\n    get: function get$$1() {\n      return this.moduleExports ? false : true;\n    }\n  }, {\n    key: 'declarations',\n    get: function get$$1() {\n      var innerContext = this.innerContext;\n\n      return innerContext[NameRegistrySymbol];\n    }\n  }, {\n    key: 'modules',\n    get: function get$$1() {\n      var innerContext = this.innerContext;\n\n      return innerContext[ModuleRegistrySymbol];\n    }\n  }]);\n  return ModuleDeclaration;\n}(Declaration);\n\nfunction indent$1(input) {\n  var lines = input.split('\\n');\n  var length = lines.length;\n\n  for (var i = 0; i < length; i++) {\n    lines[i] = `  ${lines[i]}`;\n  }\n  return lines.join('\\n');\n}\n\nvar ModuleExports = function (_Declaration) {\n  inherits(ModuleExports, _Declaration);\n\n  function ModuleExports() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ModuleExports);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ModuleExports.__proto__ || Object.getPrototypeOf(ModuleExports)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ModuleExports', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ModuleExports, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      yield* this.type.errors(validation, path, input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.type.unwrap();\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `declare module.exports: ${this.type.toString()};`;\n    }\n  }]);\n  return ModuleExports;\n}(Declaration);\n\nvar ClassDeclaration = function (_Declaration) {\n  inherits(ClassDeclaration, _Declaration);\n\n  function ClassDeclaration() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ClassDeclaration);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ClassDeclaration.__proto__ || Object.getPrototypeOf(ClassDeclaration)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ClassDeclaration', _this.shapeID = Symbol(), _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ClassDeclaration, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var body = this.body;\n\n      var superClass = this.superClass && this.superClass.unwrap();\n      if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n        yield [path, getErrorMessage('ERR_EXPECT_INSTANCEOF', this.name), this];\n        return;\n      }\n      if (superClass) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = superClass.errors(validation, path, input)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _ref2 = _step.value;\n\n            var _ref3 = slicedToArray(_ref2, 3);\n\n            var errorPath = _ref3[0];\n            var errorMessage = _ref3[1];\n            var expectedType = _ref3[2];\n\n            var propertyName = errorPath[path.length];\n            if (body.getProperty(propertyName)) {\n              continue;\n            } else {\n              yield [errorPath, errorMessage, expectedType];\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n      yield* body.errors(validation, path, input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var body = this.body;\n\n      var superClass = this.superClass && this.superClass.unwrap();\n      if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n        return false;\n      } else if (superClass && !superClass.accepts(input)) {\n        return false;\n      } else if (!body.accepts(input)) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof ClassDeclaration) {\n        if (input === this) {\n          return 0;\n        } else if (this.isSuperClassOf(input)) {\n          return 1;\n        } else {\n          return -1;\n        }\n      }\n      return compareTypes(this.body, input);\n    }\n\n    /**\n     * Get a property with the given name, or undefined if it does not exist.\n     */\n\n  }, {\n    key: 'getProperty',\n    value: function getProperty(key) {\n      var body = this.body,\n          superClass = this.superClass;\n\n      var prop = body.getProperty(key);\n      if (prop) {\n        return prop;\n      } else if (superClass && typeof superClass.getProperty === 'function') {\n        return superClass.getProperty(key);\n      }\n    }\n\n    /**\n     * Determine whether a property with the given name exists.\n     */\n\n  }, {\n    key: 'hasProperty',\n    value: function hasProperty(key) {\n      var body = this.body,\n          superClass = this.superClass;\n\n      if (body.hasProperty(key)) {\n        return true;\n      } else if (superClass && typeof superClass.hasProperty === 'function') {\n        return superClass.hasProperty(key);\n      } else {\n        return false;\n      }\n    }\n\n    /**\n     * Determine whether this class declaration represents a super class of\n     * the given type.\n     */\n\n  }, {\n    key: 'isSuperClassOf',\n    value: function isSuperClassOf(candidate) {\n      var body = this.body,\n          shapeID = this.shapeID;\n\n      var current = candidate;\n\n      while (current != null) {\n        if (current === this || current === body || current.shapeID === shapeID) {\n          return true;\n        }\n        if (current instanceof ClassDeclaration) {\n          current = current.superClass;\n        } else {\n          current = current.unwrap();\n        }\n      }\n      return false;\n    }\n  }, {\n    key: 'apply',\n    value: function apply() {\n      var target = new TypeParameterApplication(this.context);\n      target.parent = this;\n\n      for (var _len2 = arguments.length, typeInstances = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        typeInstances[_key2] = arguments[_key2];\n      }\n\n      target.typeInstances = typeInstances;\n      return target;\n    }\n  }, {\n    key: 'toString',\n    value: function toString(withDeclaration) {\n      var name = this.name,\n          superClass = this.superClass,\n          body = this.body;\n\n      if (withDeclaration) {\n        var superClassName = superClass && (typeof superClass.name === 'string' && superClass.name || superClass.toString());\n        return `declare class ${name}${superClassName ? ` extends ${superClassName}` : ''} ${body.toString()}`;\n      } else {\n        return name;\n      }\n    }\n  }, {\n    key: 'properties',\n    get: function get$$1() {\n      var body = this.body,\n          superClass = this.superClass;\n\n      if (superClass == null) {\n        return body.properties;\n      }\n      var bodyProps = body.properties;\n      var superProps = superClass.unwrap().properties;\n      if (superProps == null) {\n        return bodyProps;\n      }\n      var seen = {};\n      var seenStatic = {};\n      var props = [];\n      for (var i = 0; i < superProps.length; i++) {\n        var prop = superProps[i];\n        props.push(prop);\n        if (prop.static) {\n          seenStatic[prop.key] = i;\n        } else {\n          seen[prop.key] = i;\n        }\n      }\n      for (var _i = 0; _i < bodyProps.length; _i++) {\n        var _prop = bodyProps[_i];\n        if (seen[_prop.key]) {\n          props[_i] = _prop;\n        } else {\n          props.push(_prop);\n        }\n      }\n      return props;\n    }\n  }]);\n  return ClassDeclaration;\n}(Declaration);\n\nvar PartialType = function (_Type) {\n  inherits(PartialType, _Type);\n\n  function PartialType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, PartialType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = PartialType.__proto__ || Object.getPrototypeOf(PartialType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'PartialType', _this.typeParameters = [], _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(PartialType, [{\n    key: 'typeParameter',\n    value: function typeParameter(id, bound, defaultType) {\n      var target = new TypeParameter(this.context);\n      target.id = id;\n      target.bound = bound;\n      target.default = defaultType;\n      this.typeParameters.push(target);\n      return target;\n    }\n  }, {\n    key: 'apply',\n    value: function apply() {\n      var target = new TypeParameterApplication(this.context);\n      target.parent = this;\n\n      for (var _len2 = arguments.length, typeInstances = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        typeInstances[_key2] = arguments[_key2];\n      }\n\n      target.typeInstances = typeInstances;\n      return target;\n    }\n  }, {\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var constraints = this.constraints,\n          type = this.type;\n\n      var hasErrors = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = type.errors(validation, path, input)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var error = _step.value;\n\n          hasErrors = true;\n          yield error;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (!hasErrors && constraints) {\n        yield* collectConstraintErrors(this, validation, path, input);\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var constraints = this.constraints,\n          type = this.type;\n\n      if (!type.accepts(input)) {\n        return false;\n      } else if (constraints && !constraintsAccept(this, input)) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input === this) {\n        return 0;\n      } else {\n        return compareTypes(this.type, input);\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString(expand) {\n      var type = this.type;\n\n      return type.toString(expand);\n    }\n\n    /**\n     * Get the inner type or value.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.type.unwrap();\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        typeParameters: this.typeParameters,\n        type: this.type\n      };\n    }\n  }]);\n  return PartialType;\n}(Type);\n\nvar ParameterizedClassDeclaration = function (_Declaration) {\n  inherits(ParameterizedClassDeclaration, _Declaration);\n\n  function ParameterizedClassDeclaration() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ParameterizedClassDeclaration);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ParameterizedClassDeclaration.__proto__ || Object.getPrototypeOf(ParameterizedClassDeclaration)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ParameterizedClassDeclaration', _this.shapeID = Symbol(), _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ParameterizedClassDeclaration, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      for (var _len2 = arguments.length, typeInstances = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n        typeInstances[_key2 - 3] = arguments[_key2];\n      }\n\n      yield* getPartial.apply(undefined, [this].concat(toConsumableArray(typeInstances))).errors(validation, path, input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      for (var _len3 = arguments.length, typeInstances = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        typeInstances[_key3 - 1] = arguments[_key3];\n      }\n\n      return getPartial.apply(undefined, [this].concat(toConsumableArray(typeInstances))).accepts(input);\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return getPartial(this).compareWith(input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      for (var _len4 = arguments.length, typeInstances = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        typeInstances[_key4] = arguments[_key4];\n      }\n\n      return getPartial.apply(undefined, [this].concat(toConsumableArray(typeInstances))).type;\n    }\n  }, {\n    key: 'isSuperClassOf',\n    value: function isSuperClassOf(candidate) {\n      return getPartial(this).type.isSuperClassOf(candidate);\n    }\n  }, {\n    key: 'apply',\n    value: function apply() {\n      var target = new TypeParameterApplication(this.context);\n      target.parent = this;\n\n      for (var _len5 = arguments.length, typeInstances = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        typeInstances[_key5] = arguments[_key5];\n      }\n\n      target.typeInstances = typeInstances;\n      return target;\n    }\n  }, {\n    key: 'toString',\n    value: function toString(withDeclaration) {\n      if (!withDeclaration) {\n        return this.name;\n      }\n      var partial = getPartial(this);\n      var type = partial.type,\n          typeParameters = partial.typeParameters;\n\n      if (typeParameters.length === 0) {\n        return partial.toString(true);\n      }\n      var items = [];\n      for (var i = 0; i < typeParameters.length; i++) {\n        var typeParameter = typeParameters[i];\n        items.push(typeParameter.toString(true));\n      }\n      var superClass = type.superClass,\n          body = type.body;\n\n      var superClassName = superClass && (typeof superClass.name === 'string' && superClass.name || superClass.toString());\n      return `declare class ${this.name}<${items.join(', ')}>${superClassName ? ` extends ${superClassName}` : ''} ${body.toString()}`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return getPartial(this).toJSON();\n    }\n  }, {\n    key: 'superClass',\n    get: function get$$1() {\n      return getPartial(this).type.superClass;\n    }\n  }, {\n    key: 'body',\n    get: function get$$1() {\n      return getPartial(this).type.body;\n    }\n  }, {\n    key: 'properties',\n    get: function get$$1() {\n      return getPartial(this).type.properties;\n    }\n  }, {\n    key: 'typeParameters',\n    get: function get$$1() {\n      return getPartial(this).typeParameters;\n    }\n  }]);\n  return ParameterizedClassDeclaration;\n}(Declaration);\n\nfunction getPartial(parent) {\n  var context = parent.context,\n      bodyCreator = parent.bodyCreator;\n\n  var partial = new PartialType(context);\n  var body = bodyCreator(partial);\n  if (Array.isArray(body)) {\n    partial.type = context.class.apply(context, [parent.name].concat(toConsumableArray(body)));\n  } else {\n    partial.type = context.class(parent.name, body);\n  }\n\n  partial.type.shapeID = parent.shapeID;\n\n  var typeParameters = partial.typeParameters;\n\n  for (var _len6 = arguments.length, typeInstances = Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n    typeInstances[_key6 - 1] = arguments[_key6];\n  }\n\n  var limit = Math.min(typeInstances.length, typeParameters.length);\n  for (var i = 0; i < limit; i++) {\n    var typeParameter = typeParameters[i];\n    var typeInstance = typeInstances[i];\n    if (typeParameter.bound && typeParameter.bound !== typeInstance) {\n      // if the type parameter is already bound we need to\n      // create an intersection type with this one.\n      typeParameter.bound = context.intersect(typeParameter.bound, typeInstance);\n    } else {\n      typeParameter.bound = typeInstance;\n    }\n  }\n\n  return partial;\n}\n\nvar ExtendsDeclaration = function (_Declaration) {\n  inherits(ExtendsDeclaration, _Declaration);\n\n  function ExtendsDeclaration() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ExtendsDeclaration);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ExtendsDeclaration.__proto__ || Object.getPrototypeOf(ExtendsDeclaration)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ExtendsDeclaration', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ExtendsDeclaration, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      yield* this.type.errors(validation, path, input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.type.unwrap();\n    }\n  }, {\n    key: 'toString',\n    value: function toString(withDeclaration) {\n      var type = this.type;\n\n      if (withDeclaration) {\n        return `extends ${type.toString()}`;\n      } else {\n        return type.toString();\n      }\n    }\n  }]);\n  return ExtendsDeclaration;\n}(Declaration);\n\nvar ObjectType = function (_Type) {\n  inherits(ObjectType, _Type);\n\n  function ObjectType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ObjectType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ObjectType.__proto__ || Object.getPrototypeOf(ObjectType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ObjectType', _this.properties = [], _this.indexers = [], _this.callProperties = [], _this.exact = false, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ObjectType, [{\n    key: 'getProperty',\n\n\n    /**\n     * Get a property with the given name, or undefined if it does not exist.\n     */\n    value: function getProperty(key) {\n      var properties = this.properties;\n      var length = properties.length;\n\n      for (var i = 0; i < length; i++) {\n        var property = properties[i];\n        if (property.key === key) {\n          return property;\n        }\n      }\n      return this.getIndexer(key);\n    }\n  }, {\n    key: 'setProperty',\n    value: function setProperty(key, value) {\n      var optional = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var context = this.context,\n          properties = this.properties;\n      var length = properties.length;\n\n      var newProp = new ObjectTypeProperty(context);\n      newProp.key = key;\n      newProp.value = value;\n      newProp.optional = optional;\n\n      for (var i = 0; i < length; i++) {\n        var property = properties[i];\n        if (property.key === key) {\n          properties[i] = newProp;\n          return;\n        }\n      }\n      properties.push(newProp);\n    }\n\n    /**\n     * Determine whether a property with the given name exists.\n     */\n\n  }, {\n    key: 'hasProperty',\n    value: function hasProperty(key) {\n      var properties = this.properties;\n      var length = properties.length;\n\n      for (var i = 0; i < length; i++) {\n        var property = properties[i];\n        if (property.key === key) {\n          return true;\n        }\n      }\n      return this.hasIndexer(key);\n    }\n\n    /**\n     * Get an indexer with which matches the given key type.\n     */\n\n  }, {\n    key: 'getIndexer',\n    value: function getIndexer(key) {\n      var indexers = this.indexers;\n      var length = indexers.length;\n\n      for (var i = 0; i < length; i++) {\n        var indexer = indexers[i];\n        if (indexer.acceptsKey(key)) {\n          return indexer;\n        }\n      }\n    }\n\n    /**\n     * Determine whether an indexer exists which matches the given key type.\n     */\n\n  }, {\n    key: 'hasIndexer',\n    value: function hasIndexer(key) {\n      var indexers = this.indexers;\n      var length = indexers.length;\n\n      for (var i = 0; i < length; i++) {\n        var indexer = indexers[i];\n        if (indexer.acceptsKey(key)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      if (input === null) {\n        yield [path, getErrorMessage('ERR_EXPECT_OBJECT'), this];\n        return;\n      }\n\n      var hasCallProperties = this.callProperties.length > 0;\n\n      if (hasCallProperties) {\n        if (!acceptsCallProperties(this, input)) {\n          yield [path, getErrorMessage('ERR_EXPECT_CALLABLE'), this];\n        }\n      } else if (typeof input !== 'object') {\n        yield [path, getErrorMessage('ERR_EXPECT_OBJECT'), this];\n        return;\n      }\n\n      if (validation.inCycle(this, input)) {\n        return;\n      }\n      validation.startCycle(this, input);\n\n      if (this.indexers.length > 0) {\n        if (input instanceof Object && Array.isArray(input)) {\n          yield [path, getErrorMessage('ERR_EXPECT_OBJECT'), this];\n          return;\n        }\n        yield* collectErrorsWithIndexers(this, validation, path, input);\n      } else {\n        yield* collectErrorsWithoutIndexers(this, validation, path, input);\n      }\n      if (this.exact) {\n        yield* collectErrorsExact(this, validation, path, input);\n      }\n      validation.endCycle(this, input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      if (input === null) {\n        return false;\n      }\n      var hasCallProperties = this.callProperties.length > 0;\n\n      if (hasCallProperties) {\n        if (!acceptsCallProperties(this, input)) {\n          return false;\n        }\n      } else if (typeof input !== 'object') {\n        return false;\n      }\n      if (inValidationCycle(this, input)) {\n        return true;\n      }\n      startValidationCycle(this, input);\n\n      var result = void 0;\n      if (this.indexers.length > 0) {\n        result = acceptsWithIndexers(this, input);\n      } else {\n        result = acceptsWithoutIndexers(this, input);\n      }\n      if (result && this.exact) {\n        result = acceptsExact(this, input);\n      }\n      endValidationCycle(this, input);\n      return result;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (!(input instanceof ObjectType || input instanceof ClassDeclaration || input instanceof ParameterizedClassDeclaration)) {\n        return -1;\n      }\n      var hasCallProperties = this.callProperties.length > 0;\n\n      var isGreater = false;\n      if (hasCallProperties) {\n        var _result = compareTypeCallProperties(this, input);\n        if (_result === -1) {\n          return -1;\n        } else if (_result === 1) {\n          isGreater = true;\n        }\n      }\n\n      var result = void 0;\n      if (this.indexers.length > 0) {\n        result = compareTypeWithIndexers(this, input);\n      } else {\n        result = compareTypeWithoutIndexers(this, input);\n      }\n\n      if (result === -1) {\n        return -1;\n      } else if (isGreater) {\n        return 1;\n      } else {\n        return result;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var callProperties = this.callProperties,\n          properties = this.properties,\n          indexers = this.indexers;\n\n      if (inToStringCycle(this)) {\n        return '$Cycle<Object>';\n      }\n      startToStringCycle(this);\n      var body = [];\n      for (var i = 0; i < callProperties.length; i++) {\n        body.push(callProperties[i].toString());\n      }\n      for (var _i = 0; _i < properties.length; _i++) {\n        body.push(properties[_i].toString());\n      }\n      for (var _i2 = 0; _i2 < indexers.length; _i2++) {\n        body.push(indexers[_i2].toString());\n      }\n      endToStringCycle(this);\n      if (this.exact) {\n        return `{|\\n${indent(body.join('\\n'))}\\n|}`;\n      } else {\n        return `{\\n${indent(body.join('\\n'))}\\n}`;\n      }\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        callProperties: this.callProperties,\n        properties: this.properties,\n        indexers: this.indexers,\n        exact: this.exact\n      };\n    }\n  }]);\n  return ObjectType;\n}(Type);\n\nfunction acceptsCallProperties(type, input) {\n  var callProperties = type.callProperties;\n\n  for (var i = 0; i < callProperties.length; i++) {\n    var callProperty = callProperties[i];\n    if (callProperty.accepts(input)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction compareTypeCallProperties(type, input) {\n  var callProperties = type.callProperties;\n\n  var inputCallProperties = input.callProperties;\n  var identicalCount = 0;\n  loop: for (var i = 0; i < callProperties.length; i++) {\n    var callProperty = callProperties[i];\n\n    for (var j = 0; j < inputCallProperties.length; j++) {\n      var inputCallProperty = inputCallProperties[j];\n      var result = compareTypes(callProperty, inputCallProperty);\n      if (result === 0) {\n        identicalCount++;\n        continue loop;\n      } else if (result === 1) {\n        continue loop;\n      }\n    }\n    // If we got this far, nothing accepted.\n    return -1;\n  }\n  if (identicalCount === callProperties.length) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\n\nfunction acceptsWithIndexers(type, input) {\n  var properties = type.properties,\n      indexers = type.indexers;\n\n  var seen = [];\n  for (var i = 0; i < properties.length; i++) {\n    var property = properties[i];\n    if (!property.accepts(input)) {\n      return false;\n    }\n    seen.push(property.key);\n  }\n  loop: for (var key in input) {\n    if (seen.indexOf(key) !== -1) {\n      continue;\n    }\n    var value = input[key];\n    for (var _i3 = 0; _i3 < indexers.length; _i3++) {\n      var indexer = indexers[_i3];\n      if (indexer.acceptsKey(key) && indexer.acceptsValue(value)) {\n        continue loop;\n      }\n    }\n\n    // if we got this far the key / value did not accepts any indexers.\n    return false;\n  }\n  return true;\n}\n\nfunction compareTypeWithIndexers(type, input) {\n  var indexers = type.indexers,\n      properties = type.properties;\n\n  var inputIndexers = input.indexers;\n  var inputProperties = input.properties;\n  var isGreater = false;\n  loop: for (var i = 0; i < properties.length; i++) {\n    var property = properties[i];\n    for (var j = 0; j < inputProperties.length; j++) {\n      var inputProperty = inputProperties[j];\n      if (inputProperty.key === property.key) {\n        var result = compareTypes(property, inputProperty);\n        if (result === -1) {\n          return -1;\n        } else if (result === 1) {\n          isGreater = true;\n        }\n        continue loop;\n      }\n    }\n  }\n  loop: for (var _i4 = 0; _i4 < indexers.length; _i4++) {\n    var indexer = indexers[_i4];\n    for (var _j = 0; _j < inputIndexers.length; _j++) {\n      var inputIndexer = inputIndexers[_j];\n      var _result2 = compareTypes(indexer, inputIndexer);\n      if (_result2 === 1) {\n        isGreater = true;\n        continue loop;\n      } else if (_result2 === 0) {\n        continue loop;\n      }\n    }\n    // if we got this far, nothing accepted\n    return -1;\n  }\n  return isGreater ? 1 : 0;\n}\n\nfunction acceptsWithoutIndexers(type, input) {\n  var properties = type.properties;\n\n  for (var i = 0; i < properties.length; i++) {\n    var property = properties[i];\n    if (!property.accepts(input)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction acceptsExact(type, input) {\n  var properties = type.properties;\n\n  var _loop = function _loop(key) {\n    // eslint-disable-line guard-for-in\n    if (!properties.some(function (property) {\n      return property.key === key;\n    })) {\n      return {\n        v: false\n      };\n    }\n  };\n\n  for (var key in input) {\n    var _ret2 = _loop(key);\n\n    if (typeof _ret2 === \"object\") return _ret2.v;\n  }\n  return true;\n}\n\nfunction compareTypeWithoutIndexers(type, input) {\n  var properties = type.properties;\n\n  var inputProperties = input.properties;\n  var isGreater = false;\n  loop: for (var i = 0; i < properties.length; i++) {\n    var property = properties[i];\n    for (var j = 0; j < inputProperties.length; j++) {\n      var inputProperty = inputProperties[j];\n      if (inputProperty.key === property.key) {\n        var result = compareTypes(property.value, inputProperty.value);\n        if (result === -1) {\n          return -1;\n        } else if (result === 1) {\n          isGreater = true;\n        }\n        continue loop;\n      }\n    }\n    return -1;\n  }\n  return isGreater ? 1 : 0;\n}\n\nfunction* collectErrorsWithIndexers(type, validation, path, input) {\n  var properties = type.properties,\n      indexers = type.indexers;\n\n  var seen = [];\n  for (var i = 0; i < properties.length; i++) {\n    var property = properties[i];\n    yield* property.errors(validation, path, input);\n    seen.push(property.key);\n  }\n  loop: for (var key in input) {\n    if (seen.indexOf(key) !== -1) {\n      continue;\n    }\n    var value = input[key];\n    for (var _i5 = 0; _i5 < indexers.length; _i5++) {\n      var indexer = indexers[_i5];\n      if (indexer.acceptsKey(key) && indexer.acceptsValue(value)) {\n        continue loop;\n      }\n    }\n\n    // if we got this far the key / value was not accepted by any indexers.\n    yield [path.concat(key), getErrorMessage('ERR_NO_INDEXER'), type];\n  }\n}\n\nfunction* collectErrorsWithoutIndexers(type, validation, path, input) {\n  var properties = type.properties;\n\n  for (var i = 0; i < properties.length; i++) {\n    var property = properties[i];\n    yield* property.errors(validation, path, input);\n  }\n}\n\nfunction* collectErrorsExact(type, validation, path, input) {\n  var properties = type.properties;\n\n  var _loop2 = function* _loop2(key) {\n    // eslint-disable-line guard-for-in\n    if (!properties.some(function (property) {\n      return property.key === key;\n    })) {\n      yield [path, getErrorMessage('ERR_UNKNOWN_KEY', key), type];\n    }\n  };\n\n  for (var key in input) {\n    yield* _loop2(key);\n  }\n}\n\nfunction indent(input) {\n  var lines = input.split('\\n');\n  var length = lines.length;\n\n  for (var i = 0; i < length; i++) {\n    lines[i] = `  ${lines[i]}`;\n  }\n  return lines.join('\\n');\n}\n\nvar IntersectionType = function (_Type) {\n  inherits(IntersectionType, _Type);\n\n  function IntersectionType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, IntersectionType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = IntersectionType.__proto__ || Object.getPrototypeOf(IntersectionType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'IntersectionType', _this.types = [], _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(IntersectionType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var types = this.types;\n      var length = types.length;\n\n      for (var i = 0; i < length; i++) {\n        yield* types[i].errors(validation, path, input);\n      }\n    }\n\n    /**\n     * Get a property with the given name, or undefined if it does not exist.\n     */\n\n  }, {\n    key: 'getProperty',\n    value: function getProperty(key) {\n      var types = this.types;\n      var length = types.length;\n\n      for (var i = length - 1; i >= 0; i--) {\n        var type = types[i];\n        if (typeof type.getProperty === 'function') {\n          var prop = type.getProperty(key);\n          if (prop) {\n            return prop;\n          }\n        }\n      }\n    }\n\n    /**\n     * Determine whether a property with the given name exists.\n     */\n\n  }, {\n    key: 'hasProperty',\n    value: function hasProperty(key) {\n      var types = this.types;\n      var length = types.length;\n\n      for (var i = 0; i < length; i++) {\n        var type = types[i];\n        if (typeof type.hasProperty === 'function' && type.hasProperty(key)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var types = this.types;\n      var length = types.length;\n\n      for (var i = 0; i < length; i++) {\n        var type = types[i];\n        if (!type.accepts(input)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      var types = this.types;\n      var identicalCount = 0;\n      if (input instanceof IntersectionType) {\n        var inputTypes = input.types;\n        loop: for (var i = 0; i < types.length; i++) {\n          var type = types[i];\n          for (var j = 0; j < inputTypes.length; j++) {\n            var result = compareTypes(type, inputTypes[i]);\n            if (result === 0) {\n              identicalCount++;\n              continue loop;\n            } else if (result === 1) {\n              continue loop;\n            }\n          }\n          // if we got this far then nothing accepted this type.\n          return -1;\n        }\n        return identicalCount === types.length ? 0 : 1;\n      } else {\n        for (var _i = 0; _i < types.length; _i++) {\n          var _type = types[_i];\n          var _result = compareTypes(_type, input);\n          if (_result === -1) {\n            return -1;\n          } else if (_result === 0) {\n            identicalCount++;\n          }\n        }\n        return identicalCount === types.length ? 0 : 1;\n      }\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      var _ref2;\n\n      var callProperties = [];\n      var properties = [];\n      var indexers = [];\n      var types = this.types,\n          context = this.context;\n\n      for (var i = 0; i < types.length; i++) {\n        var type = types[i].unwrap();\n        invariant(type instanceof ObjectType, 'Can only intersect object types');\n        callProperties.push.apply(callProperties, toConsumableArray(type.callProperties));\n        indexers.push.apply(indexers, toConsumableArray(type.indexers));\n        mergeProperties(properties, type.properties);\n      }\n      return (_ref2 = context).object.apply(_ref2, callProperties.concat(properties, indexers));\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.types.join(' & ');\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        types: this.types\n      };\n    }\n  }]);\n  return IntersectionType;\n}(Type);\n\nfunction getPropertyIndex(name, properties) {\n  for (var i = 0; i < properties.length; i++) {\n    if (properties[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction mergeProperties(target, source) {\n  for (var i = 0; i < source.length; i++) {\n    var typeProp = source[i];\n    var index = getPropertyIndex(typeProp.key, target);\n    if (index === -1) {\n      target.push(typeProp);\n    } else {\n      target[index] = typeProp;\n    }\n  }\n  return target;\n}\n\nvar MixedType = function (_Type) {\n  inherits(MixedType, _Type);\n\n  function MixedType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, MixedType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = MixedType.__proto__ || Object.getPrototypeOf(MixedType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'MixedType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(MixedType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {}\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return true;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return 'mixed';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName\n      };\n    }\n  }]);\n  return MixedType;\n}(Type);\n\nvar NumericLiteralType = function (_Type) {\n  inherits(NumericLiteralType, _Type);\n\n  function NumericLiteralType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, NumericLiteralType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = NumericLiteralType.__proto__ || Object.getPrototypeOf(NumericLiteralType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'NumericLiteralType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(NumericLiteralType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var value = this.value;\n\n      if (input !== value) {\n        yield [path, getErrorMessage('ERR_EXPECT_EXACT_VALUE', value), this];\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return input === this.value;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof NumericLiteralType && input.value === this.value) {\n        return 0;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `${this.value}`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        value: this.value\n      };\n    }\n  }]);\n  return NumericLiteralType;\n}(Type);\n\nvar NumberType = function (_Type) {\n  inherits(NumberType, _Type);\n\n  function NumberType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, NumberType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = NumberType.__proto__ || Object.getPrototypeOf(NumberType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'NumberType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(NumberType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      if (typeof input !== 'number') {\n        yield [path, getErrorMessage('ERR_EXPECT_NUMBER'), this];\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return typeof input === 'number';\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof NumberType) {\n        return 0;\n      } else if (input instanceof NumericLiteralType) {\n        return 1;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return 'number';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName\n      };\n    }\n  }]);\n  return NumberType;\n}(Type);\n\nvar ParameterizedTypeAlias = function (_TypeAlias) {\n  inherits(ParameterizedTypeAlias, _TypeAlias);\n\n  function ParameterizedTypeAlias() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ParameterizedTypeAlias);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ParameterizedTypeAlias.__proto__ || Object.getPrototypeOf(ParameterizedTypeAlias)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ParameterizedTypeAlias', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ParameterizedTypeAlias, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      for (var _len2 = arguments.length, typeInstances = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n        typeInstances[_key2 - 3] = arguments[_key2];\n      }\n\n      yield* getPartial$1.apply(undefined, [this].concat(toConsumableArray(typeInstances))).errors(validation, path, input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      for (var _len3 = arguments.length, typeInstances = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        typeInstances[_key3 - 1] = arguments[_key3];\n      }\n\n      var partial = getPartial$1.apply(undefined, [this].concat(toConsumableArray(typeInstances)));\n      if (!partial.accepts(input)) {\n        return false;\n      } else if (!constraintsAccept(this, input)) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input === this) {\n        return 0; // should never need this because it's taken care of by compareTypes.\n      } else if (this.hasConstraints) {\n        // if we have constraints the types cannot be the same\n        return -1;\n      } else {\n        return compareTypes(getPartial$1(this), input);\n      }\n    }\n  }, {\n    key: 'hasProperty',\n    value: function hasProperty(name) {\n      for (var _len4 = arguments.length, typeInstances = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        typeInstances[_key4 - 1] = arguments[_key4];\n      }\n\n      var inner = this.unwrap.apply(this, toConsumableArray(typeInstances));\n      if (inner && typeof inner.hasProperty === 'function') {\n        return inner.hasProperty.apply(inner, [name].concat(toConsumableArray(typeInstances)));\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: 'getProperty',\n    value: function getProperty(name) {\n      for (var _len5 = arguments.length, typeInstances = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n        typeInstances[_key5 - 1] = arguments[_key5];\n      }\n\n      var inner = this.unwrap.apply(this, toConsumableArray(typeInstances));\n      if (inner && typeof inner.getProperty === 'function') {\n        return inner.getProperty.apply(inner, [name].concat(toConsumableArray(typeInstances)));\n      }\n    }\n\n    /**\n     * Get the inner type or value.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      for (var _len6 = arguments.length, typeInstances = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        typeInstances[_key6] = arguments[_key6];\n      }\n\n      return getPartial$1.apply(undefined, [this].concat(toConsumableArray(typeInstances))).unwrap();\n    }\n  }, {\n    key: 'toString',\n    value: function toString(withDeclaration) {\n      var partial = getPartial$1(this);\n      var typeParameters = partial.typeParameters;\n\n      var items = [];\n      for (var i = 0; i < typeParameters.length; i++) {\n        var typeParameter = typeParameters[i];\n        items.push(typeParameter.toString(true));\n      }\n\n      var name = this.name;\n\n      var identifier = typeParameters.length > 0 ? `${name}<${items.join(', ')}>` : name;\n\n      if (withDeclaration) {\n        return `type ${identifier} = ${partial.toString()};`;\n      } else {\n        return identifier;\n      }\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var partial = getPartial$1(this);\n      return partial.toJSON();\n    }\n  }, {\n    key: 'properties',\n    get: function get$$1() {\n      return getPartial$1(this).type.properties;\n    }\n  }]);\n  return ParameterizedTypeAlias;\n}(TypeAlias);\n\nfunction getPartial$1(parent) {\n  var typeCreator = parent.typeCreator,\n      context = parent.context,\n      name = parent.name;\n\n  var partial = new PartialType(context);\n  partial.name = name;\n  partial.type = typeCreator(partial);\n  partial.constraints = parent.constraints;\n\n  var typeParameters = partial.typeParameters;\n\n  for (var _len7 = arguments.length, typeInstances = Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n    typeInstances[_key7 - 1] = arguments[_key7];\n  }\n\n  var limit = Math.min(typeInstances.length, typeParameters.length);\n  for (var i = 0; i < limit; i++) {\n    var typeParameter = typeParameters[i];\n    var typeInstance = typeInstances[i];\n    if (typeParameter.bound && typeParameter.bound !== typeInstance) {\n      // if the type parameter is already bound we need to\n      // create an intersection type with this one.\n      typeParameter.bound = context.intersect(typeParameter.bound, typeInstance);\n    } else {\n      typeParameter.bound = typeInstance;\n    }\n  }\n\n  return partial;\n}\n\nvar ParameterizedFunctionType = function (_Type) {\n  inherits(ParameterizedFunctionType, _Type);\n\n  function ParameterizedFunctionType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ParameterizedFunctionType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ParameterizedFunctionType.__proto__ || Object.getPrototypeOf(ParameterizedFunctionType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ParameterizedFunctionType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ParameterizedFunctionType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      for (var _len2 = arguments.length, typeInstances = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n        typeInstances[_key2 - 3] = arguments[_key2];\n      }\n\n      yield* getPartial$2.apply(undefined, [this].concat(toConsumableArray(typeInstances))).errors(validation, path, input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      for (var _len3 = arguments.length, typeInstances = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n        typeInstances[_key3 - 1] = arguments[_key3];\n      }\n\n      return getPartial$2.apply(undefined, [this].concat(toConsumableArray(typeInstances))).accepts(input);\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(getPartial$2(this), input);\n    }\n  }, {\n    key: 'acceptsParams',\n    value: function acceptsParams() {\n      var _getPartial$type;\n\n      return (_getPartial$type = getPartial$2(this).type).acceptsParams.apply(_getPartial$type, arguments);\n    }\n  }, {\n    key: 'acceptsReturn',\n    value: function acceptsReturn(input) {\n      return getPartial$2(this).type.acceptsReturn(input);\n    }\n  }, {\n    key: 'assertParams',\n    value: function assertParams() {\n      var _getPartial$type2;\n\n      return (_getPartial$type2 = getPartial$2(this).type).assertParams.apply(_getPartial$type2, arguments);\n    }\n  }, {\n    key: 'assertReturn',\n    value: function assertReturn(input) {\n      return getPartial$2(this).type.assertReturn(input);\n    }\n\n    /**\n     * Get the inner type or value.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      for (var _len4 = arguments.length, typeInstances = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        typeInstances[_key4] = arguments[_key4];\n      }\n\n      return getPartial$2.apply(undefined, [this].concat(toConsumableArray(typeInstances))).unwrap();\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var partial = getPartial$2(this);\n      var type = partial.type,\n          typeParameters = partial.typeParameters;\n\n      if (typeParameters.length === 0) {\n        return type.toString();\n      }\n      var items = [];\n      for (var i = 0; i < typeParameters.length; i++) {\n        var typeParameter = typeParameters[i];\n        items.push(typeParameter.toString(true));\n      }\n      return `<${items.join(', ')}> ${type.toString()}`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var partial = getPartial$2(this);\n      return partial.toJSON();\n    }\n  }, {\n    key: 'typeParameters',\n    get: function get$$1() {\n      return getPartial$2(this).typeParameters;\n    }\n  }, {\n    key: 'params',\n    get: function get$$1() {\n      return getPartial$2(this).type.params;\n    }\n  }, {\n    key: 'rest',\n    get: function get$$1() {\n      return getPartial$2(this).type.rest;\n    }\n  }, {\n    key: 'returnType',\n    get: function get$$1() {\n      return getPartial$2(this).type.returnType;\n    }\n  }]);\n  return ParameterizedFunctionType;\n}(Type);\n\nfunction getPartial$2(parent) {\n  var context = parent.context,\n      bodyCreator = parent.bodyCreator;\n\n  var partial = new PartialType(context);\n  var body = bodyCreator(partial);\n  partial.type = context.function.apply(context, toConsumableArray(body));\n\n  var typeParameters = partial.typeParameters;\n\n  for (var _len5 = arguments.length, typeInstances = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    typeInstances[_key5 - 1] = arguments[_key5];\n  }\n\n  var limit = Math.min(typeInstances.length, typeParameters.length);\n  for (var i = 0; i < limit; i++) {\n    var typeParameter = typeParameters[i];\n    var typeInstance = typeInstances[i];\n    if (typeParameter.bound && typeParameter.bound !== typeInstance) {\n      // if the type parameter is already bound we need to\n      // create an intersection type with this one.\n      typeParameter.bound = context.intersect(typeParameter.bound, typeInstance);\n    } else {\n      typeParameter.bound = typeInstance;\n    }\n  }\n\n  return partial;\n}\n\nvar RefinementType = function (_Type) {\n  inherits(RefinementType, _Type);\n\n  function RefinementType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, RefinementType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = RefinementType.__proto__ || Object.getPrototypeOf(RefinementType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'RefinementType', _this.constraints = [], _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(RefinementType, [{\n    key: 'addConstraint',\n    value: function addConstraint() {\n      for (var _len2 = arguments.length, constraints = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        constraints[_key2] = arguments[_key2];\n      }\n\n      addConstraints.apply(undefined, [this].concat(toConsumableArray(constraints)));\n      return this;\n    }\n  }, {\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var type = this.type;\n\n      var hasErrors = false;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = type.errors(validation, path, input)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var error = _step.value;\n\n          hasErrors = true;\n          yield error;\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (!hasErrors) {\n        yield* collectConstraintErrors(this, validation, path, input);\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var type = this.type;\n\n      if (!type.accepts(input)) {\n        return false;\n      } else if (!constraintsAccept(this, input)) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input === this) {\n        return 0;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'apply',\n    value: function apply() {\n      var target = new TypeParameterApplication(this.context);\n      target.parent = this;\n\n      for (var _len3 = arguments.length, typeInstances = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        typeInstances[_key3] = arguments[_key3];\n      }\n\n      target.typeInstances = typeInstances;\n      return target;\n    }\n\n    /**\n     * Get the inner type or value.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.type.unwrap();\n    }\n  }, {\n    key: 'hasProperty',\n    value: function hasProperty(name) {\n      var inner = this.unwrap();\n      if (inner && typeof inner.hasProperty === 'function') {\n        return inner.hasProperty(name);\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: 'getProperty',\n    value: function getProperty(name) {\n      var inner = this.unwrap();\n      if (inner && typeof inner.getProperty === 'function') {\n        return inner.getProperty(name);\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var type = this.type;\n\n      return `$Refinment<${type.toString()}>`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        type: this.type\n      };\n    }\n  }]);\n  return RefinementType;\n}(Type);\n\nvar StringLiteralType = function (_Type) {\n  inherits(StringLiteralType, _Type);\n\n  function StringLiteralType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, StringLiteralType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = StringLiteralType.__proto__ || Object.getPrototypeOf(StringLiteralType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'StringLiteralType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(StringLiteralType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var value = this.value;\n\n      if (input !== value) {\n        yield [path, getErrorMessage('ERR_EXPECT_EXACT_VALUE', this.toString()), this];\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return input === this.value;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof StringLiteralType && input.value === this.value) {\n        return 0;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return JSON.stringify(this.value);\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        value: this.value\n      };\n    }\n  }]);\n  return StringLiteralType;\n}(Type);\n\nvar StringType = function (_Type) {\n  inherits(StringType, _Type);\n\n  function StringType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, StringType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = StringType.__proto__ || Object.getPrototypeOf(StringType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'StringType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(StringType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      if (typeof input !== 'string') {\n        yield [path, getErrorMessage('ERR_EXPECT_STRING'), this];\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return typeof input === 'string';\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof StringLiteralType) {\n        return 1;\n      } else if (input instanceof StringType) {\n        return 0;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return 'string';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName\n      };\n    }\n  }]);\n  return StringType;\n}(Type);\n\nvar SymbolLiteralType = function (_Type) {\n  inherits(SymbolLiteralType, _Type);\n\n  function SymbolLiteralType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, SymbolLiteralType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = SymbolLiteralType.__proto__ || Object.getPrototypeOf(SymbolLiteralType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'SymbolLiteralType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(SymbolLiteralType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var value = this.value;\n\n      if (input !== value) {\n        yield [path, getErrorMessage('ERR_EXPECT_EXACT_VALUE', this.toString()), this];\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return input === this.value;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof SymbolLiteralType && input.value === this.value) {\n        return 0;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `typeof ${String(this.value)}`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        value: this.value\n      };\n    }\n  }]);\n  return SymbolLiteralType;\n}(Type);\n\nvar SymbolType = function (_Type) {\n  inherits(SymbolType, _Type);\n\n  function SymbolType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, SymbolType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = SymbolType.__proto__ || Object.getPrototypeOf(SymbolType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'SymbolType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(SymbolType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      // Issue 252\n      if (typeof input !== 'symbol') {\n        yield [path, getErrorMessage('ERR_EXPECT_SYMBOL'), this];\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return typeof input === 'symbol';\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (input instanceof SymbolLiteralType) {\n        return 1;\n      } else if (input instanceof SymbolType) {\n        return 0;\n      } else {\n        return -1;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return 'Symbol';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName\n      };\n    }\n  }]);\n  return SymbolType;\n}(Type);\n\n/**\n * # ThisType\n * Captures a reference to a particular instance of a class or a value,\n * and uses that value to perform an identity check.\n * In the case that `this` is undefined, any value will be permitted.\n */\n\nvar ThisType = function (_Type) {\n  inherits(ThisType, _Type);\n\n  function ThisType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ThisType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ThisType.__proto__ || Object.getPrototypeOf(ThisType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ThisType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ThisType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var recorded = this.recorded;\n\n      if (input === recorded) {\n        return;\n      } else if (typeof recorded === 'function' && input instanceof recorded) {\n        return;\n      } else if (recorded != null) {\n        yield [path, getErrorMessage('ERR_EXPECT_THIS'), this];\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var recorded = this.recorded;\n\n      if (input === recorded) {\n        return true;\n      } else if (typeof recorded === 'function' && input instanceof recorded) {\n        return true;\n      } else if (recorded != null) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      if (!(input instanceof ThisType)) {\n        return -1;\n      } else if (input.recorded && this.recorded) {\n        return input.recorded === this.recorded ? 0 : -1;\n      } else if (this.recorded) {\n        return 0;\n      } else {\n        return 1;\n      }\n    }\n\n    /**\n     * Get the inner type.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this;\n    }\n  }, {\n    key: 'toString',\n    value: function toString(withBinding) {\n      return 'this';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName\n      };\n    }\n  }]);\n  return ThisType;\n}(Type);\n\nvar warnedInstances$1 = new WeakSet();\n\nvar TypeBox = function (_Type) {\n  inherits(TypeBox, _Type);\n\n  function TypeBox() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, TypeBox);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = TypeBox.__proto__ || Object.getPrototypeOf(TypeBox)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'TypeBox', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(TypeBox, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      yield* this.type.errors(validation, path, input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return this.type.accepts(input);\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.type, input);\n    }\n  }, {\n    key: 'apply',\n    value: function apply() {\n      var target = new TypeParameterApplication(this.context);\n      target.parent = this.type;\n\n      for (var _len2 = arguments.length, typeInstances = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        typeInstances[_key2] = arguments[_key2];\n      }\n\n      target.typeInstances = typeInstances;\n      return target;\n    }\n\n    /**\n     * Get the inner type or value.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.type.unwrap();\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.type.toString();\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return this.type.toJSON();\n    }\n  }, {\n    key: 'name',\n    get: function get$$1() {\n      return this.type.name;\n    }\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      var reveal = this.reveal;\n\n      var type = reveal();\n      if (!type) {\n        if (!warnedInstances$1.has(this)) {\n          this.context.emitWarningMessage('Failed to reveal boxed type.');\n          warnedInstances$1.add(this);\n        }\n        return this.context.mixed();\n      } else if (!(type instanceof Type)) {\n        // we got a boxed reference to something like a class\n        return this.context.ref(type);\n      }\n      return type;\n    }\n  }]);\n  return TypeBox;\n}(Type);\n\nvar warnedMissing = {};\n\nvar TypeReference = function (_Type) {\n  inherits(TypeReference, _Type);\n\n  function TypeReference() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, TypeReference);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = TypeReference.__proto__ || Object.getPrototypeOf(TypeReference)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'TypeReference', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(TypeReference, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      yield* this.type.errors(validation, path, input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return this.type.accepts(input);\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.type, input);\n    }\n  }, {\n    key: 'apply',\n    value: function apply() {\n      var target = new TypeParameterApplication(this.context);\n      target.parent = this;\n\n      for (var _len2 = arguments.length, typeInstances = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        typeInstances[_key2] = arguments[_key2];\n      }\n\n      target.typeInstances = typeInstances;\n      return target;\n    }\n\n    /**\n     * Get the inner type or value.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.type.unwrap();\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return this.name;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        name: this.name\n      };\n    }\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      var context = this.context,\n          name = this.name;\n\n      var type = context.get(name);\n      if (!type) {\n        if (!warnedMissing[name]) {\n          context.emitWarningMessage(`Cannot resolve type: ${name}`);\n          warnedMissing[name] = true;\n        }\n        return context.any();\n      }\n      return type;\n    }\n  }]);\n  return TypeReference;\n}(Type);\n\nvar warnedInstances$2 = new WeakSet();\n\nvar RevealedName = Symbol('RevealedName');\nvar RevealedValue = Symbol('RevealedValue');\n\nvar TypeTDZ = function (_Type) {\n  inherits(TypeTDZ, _Type);\n\n  function TypeTDZ() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, TypeTDZ);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = TypeTDZ.__proto__ || Object.getPrototypeOf(TypeTDZ)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'TypeTDZ', _this[RevealedName] = undefined, _this[RevealedValue] = undefined, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  // Issue 252\n\n\n  // Issue 252\n\n\n  createClass(TypeTDZ, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      yield* getRevealed(this).errors(validation, path, input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return getRevealed(this).accepts(input);\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(getRevealed(this), input);\n    }\n  }, {\n    key: 'apply',\n    value: function apply() {\n      var target = new TypeParameterApplication(this.context);\n      target.parent = getRevealed(this);\n\n      for (var _len2 = arguments.length, typeInstances = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        typeInstances[_key2] = arguments[_key2];\n      }\n\n      target.typeInstances = typeInstances;\n      return target;\n    }\n\n    /**\n     * Get the inner type or value.\n     */\n\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return getRevealed(this).unwrap();\n    }\n  }, {\n    key: 'hasProperty',\n    value: function hasProperty(name) {\n      var inner = this.unwrap();\n      if (inner && typeof inner.hasProperty === 'function') {\n        return inner.hasProperty(name);\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: 'getProperty',\n    value: function getProperty(name) {\n      var inner = this.unwrap();\n      if (inner && typeof inner.getProperty === 'function') {\n        return inner.getProperty(name);\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return getRevealed(this).toString();\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return getRevealed(this).toJSON();\n    }\n  }, {\n    key: 'name',\n    get: function get$$1() {\n      var name = this[RevealedName];\n      if (!name) {\n        name = getRevealed(this).name;\n      }\n      return name;\n    },\n    set: function set$$1(value) {\n      this[RevealedName] = value;\n    }\n  }]);\n  return TypeTDZ;\n}(Type);\n\nfunction getRevealed(container) {\n  var existing = container[RevealedValue];\n  if (existing) {\n    return existing;\n  } else {\n    var reveal = container.reveal;\n\n    var type = reveal();\n    if (!type) {\n      if (!warnedInstances$2.has(container)) {\n        var name = container[RevealedName];\n        if (name) {\n          container.context.emitWarningMessage(`Failed to reveal type called \"${name}\" in Temporal Dead Zone.`);\n        } else {\n          container.context.emitWarningMessage('Failed to reveal unknown type in Temporal Dead Zone.');\n        }\n        warnedInstances$2.add(container);\n      }\n      return container.context.mixed();\n    } else if (!(type instanceof Type)) {\n      // we got a boxed reference to something like a class\n      return container.context.ref(type);\n    }\n    return type;\n  }\n}\n\nvar UnionType = function (_Type) {\n  inherits(UnionType, _Type);\n\n  function UnionType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, UnionType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = UnionType.__proto__ || Object.getPrototypeOf(UnionType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'UnionType', _this.types = [], _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(UnionType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var types = this.types;\n      var length = types.length;\n\n      for (var i = 0; i < length; i++) {\n        var type = types[i];\n        if (type.accepts(input)) {\n          return;\n        }\n      }\n      yield [path, getErrorMessage('ERR_NO_UNION', this.toString()), this];\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var types = this.types;\n      var length = types.length;\n\n      for (var i = 0; i < length; i++) {\n        var type = types[i];\n        if (type.accepts(input)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      var types = this.types;\n      if (input instanceof UnionType) {\n        var inputTypes = input.types;\n        var identicalCount = 0;\n        loop: for (var i = 0; i < types.length; i++) {\n          var type = types[i];\n          for (var j = 0; j < inputTypes.length; j++) {\n            var result = compareTypes(type, inputTypes[i]);\n            if (result === 0) {\n              identicalCount++;\n              continue loop;\n            } else if (result === 1) {\n              continue loop;\n            }\n          }\n          // if we got this far then nothing accepted this type.\n          return -1;\n        }\n\n        if (identicalCount === types.length) {\n          return 0;\n        } else {\n          return 1;\n        }\n      } else {\n        for (var _i = 0; _i < types.length; _i++) {\n          var _type = types[_i];\n          if (compareTypes(_type, input) >= 0) {\n            return 1;\n          }\n        }\n        return -1;\n      }\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      var types = this.types;\n\n      var normalized = new Array(types.length);\n      for (var i = 0; i < types.length; i++) {\n        var type = types[i];\n        if (type.typeName === 'FunctionType' || type.typeName === 'ParameterizedFunctionType') {\n          normalized[i] = `(${type.toString()})`;\n        } else {\n          normalized[i] = type.toString();\n        }\n      }\n      return normalized.join(' | ');\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        types: this.types\n      };\n    }\n  }]);\n  return UnionType;\n}(Type);\n\nfunction registerPrimitiveTypes(t) {\n  primitiveTypes.null = Object.freeze(new NullLiteralType(t));\n  primitiveTypes.empty = Object.freeze(new EmptyType(t));\n  primitiveTypes.number = Object.freeze(new NumberType(t));\n  primitiveTypes.boolean = Object.freeze(new BooleanType(t));\n  primitiveTypes.string = Object.freeze(new StringType(t));\n  primitiveTypes.symbol = Object.freeze(new SymbolType(t));\n  primitiveTypes.any = Object.freeze(new AnyType(t));\n  primitiveTypes.mixed = Object.freeze(new MixedType(t));\n  primitiveTypes.void = Object.freeze(new VoidType(t));\n  primitiveTypes.existential = Object.freeze(new ExistentialType(t));\n  return t;\n}\n\nfunction registerBuiltinTypeConstructors(t) {\n\n  t.declareTypeConstructor({\n    name: 'Date',\n    impl: Date,\n    typeName: 'DateType',\n    *errors(validation, path, input) {\n      if (!(input instanceof Date)) {\n        yield [path, getErrorMessage('ERR_EXPECT_INSTANCEOF', 'Date'), this];\n      } else if (isNaN(input.getTime())) {\n        yield [path, getErrorMessage('ERR_INVALID_DATE'), this];\n      }\n    },\n    accepts(input) {\n      return input instanceof Date && !isNaN(input.getTime());\n    },\n    compareWith(input) {\n      if (input.typeName === 'DateType') {\n        return 0;\n      }\n      return -1;\n    },\n    inferTypeParameters(input) {\n      return [];\n    }\n  });\n\n  t.declareTypeConstructor({\n    name: 'Promise',\n    impl: Promise,\n    typeName: 'PromiseType',\n    *errors(validation, path, input, futureType) {\n      invariant(futureType, 'Must specify type parameter for Promise.');\n      var context = this.context;\n\n      if (!context.checkPredicate('Promise', input)) {\n        yield [path, getErrorMessage('ERR_EXPECT_PROMISE', futureType), this];\n      }\n    },\n    accepts(input) {\n      var context = this.context;\n\n      return context.checkPredicate('Promise', input);\n    },\n    compareWith(input) {\n      if (input.typeName === 'PromiseType') {\n        return 0;\n      }\n      return -1;\n    },\n    inferTypeParameters(input) {\n      return [];\n    }\n  });\n\n  t.declareTypeConstructor({\n    name: 'Map',\n    impl: Map,\n    typeName: 'MapType',\n    *errors(validation, path, input, keyType, valueType) {\n      invariant(keyType, 'Must specify two type parameters for Map.');\n      invariant(valueType, 'Must specify two type parameters for Map.');\n      var context = this.context;\n\n      if (!context.checkPredicate('Map', input)) {\n        yield [path, getErrorMessage('ERR_EXPECT_INSTANCEOF', 'Map'), this];\n        return;\n      }\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _ref = _step.value;\n\n          var _ref2 = slicedToArray(_ref, 2);\n\n          var key = _ref2[0];\n          var value = _ref2[1];\n\n          if (!keyType.accepts(key)) {\n            yield [path, getErrorMessage('ERR_EXPECT_KEY_TYPE', keyType), this];\n          }\n\n          yield* valueType.errors(validation, path.concat(key), value);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    },\n    accepts(input, keyType, valueType) {\n      var context = this.context;\n\n      if (!context.checkPredicate('Map', input)) {\n        return false;\n      }\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = input[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var _ref3 = _step2.value;\n\n          var _ref4 = slicedToArray(_ref3, 2);\n\n          var key = _ref4[0];\n          var value = _ref4[1];\n\n          if (!keyType.accepts(key) || !valueType.accepts(value)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return true;\n    },\n    compareWith(input) {\n      if (input.typeName === 'MapType') {\n        return 0;\n      }\n      return -1;\n    },\n    inferTypeParameters(input) {\n      var keyTypes = [];\n      var valueTypes = [];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        loop: for (var _iterator3 = input[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _ref5 = _step3.value;\n\n          var _ref6 = slicedToArray(_ref5, 2);\n\n          var key = _ref6[0];\n          var value = _ref6[1];\n\n          findKey: {\n            for (var i = 0; i < keyTypes.length; i++) {\n              var type = keyTypes[i];\n              if (type.accepts(key)) {\n                break findKey;\n              }\n            }\n            keyTypes.push(t.typeOf(key));\n          }\n\n          for (var _i = 0; _i < valueTypes.length; _i++) {\n            var _type = valueTypes[_i];\n            if (_type.accepts(value)) {\n              continue loop;\n            }\n          }\n          valueTypes.push(t.typeOf(value));\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var typeInstances = [];\n\n      if (keyTypes.length === 0) {\n        typeInstances.push(t.existential());\n      } else if (keyTypes.length === 1) {\n        typeInstances.push(keyTypes[0]);\n      } else {\n        typeInstances.push(t.union.apply(t, keyTypes));\n      }\n\n      if (valueTypes.length === 0) {\n        typeInstances.push(t.existential());\n      } else if (valueTypes.length === 1) {\n        typeInstances.push(valueTypes[0]);\n      } else {\n        typeInstances.push(t.union.apply(t, valueTypes));\n      }\n\n      return typeInstances;\n    }\n  });\n\n  t.declareTypeConstructor({\n    name: 'Set',\n    impl: Set,\n    typeName: 'SetType',\n    *errors(validation, path, input, valueType) {\n      invariant(valueType, 'Must specify type parameter for Set.');\n      var context = this.context;\n\n      if (!context.checkPredicate('Set', input)) {\n        yield [path, getErrorMessage('ERR_EXPECT_INSTANCEOF', 'Set'), this];\n        return;\n      }\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = input[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var value = _step4.value;\n\n          yield* valueType.errors(validation, path, value);\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n    },\n    accepts(input, valueType) {\n      var context = this.context;\n\n      if (!context.checkPredicate('Set', input)) {\n        return false;\n      }\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = input[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var value = _step5.value;\n\n          if (!valueType.accepts(value)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      return true;\n    },\n    compareWith(input) {\n      if (input.typeName === 'SetType') {\n        return 0;\n      }\n      return -1;\n    },\n    inferTypeParameters(input) {\n      var valueTypes = [];\n      var _iteratorNormalCompletion6 = true;\n      var _didIteratorError6 = false;\n      var _iteratorError6 = undefined;\n\n      try {\n        loop: for (var _iterator6 = input[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n          var value = _step6.value;\n\n          for (var i = 0; i < valueTypes.length; i++) {\n            var type = valueTypes[i];\n            if (type.accepts(value)) {\n              continue loop;\n            }\n          }\n          valueTypes.push(t.typeOf(value));\n        }\n      } catch (err) {\n        _didIteratorError6 = true;\n        _iteratorError6 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion6 && _iterator6.return) {\n            _iterator6.return();\n          }\n        } finally {\n          if (_didIteratorError6) {\n            throw _iteratorError6;\n          }\n        }\n      }\n\n      if (valueTypes.length === 0) {\n        return [t.existential()];\n      } else if (valueTypes.length === 1) {\n        return [valueTypes[0]];\n      } else {\n        return [t.union.apply(t, valueTypes)];\n      }\n    }\n  });\n\n  return t;\n}\n\nfunction registerTypePredicates(context) {\n  context.setPredicate('Array', function (input) {\n    return Array.isArray(input);\n  });\n  context.setPredicate('Map', function (input) {\n    return input instanceof Map;\n  });\n  context.setPredicate('Set', function (input) {\n    return input instanceof Set;\n  });\n  context.setPredicate('Promise', function (input) {\n    if (input instanceof Promise) {\n      return true;\n    } else {\n      return input !== null && (typeof input === 'object' || typeof input === 'function') && typeof input.then === 'function';\n    }\n  });\n}\n\nvar TypeInferer = function () {\n  function TypeInferer(context) {\n    classCallCheck(this, TypeInferer);\n\n    this.context = context;\n  }\n\n  createClass(TypeInferer, [{\n    key: 'infer',\n    value: function infer(input) {\n      var primitive = this.inferPrimitive(input);\n      if (primitive) {\n        return primitive;\n      }\n      var inferred = new Map();\n      return this.inferComplex(input, inferred);\n    }\n  }, {\n    key: 'inferInternal',\n    value: function inferInternal(input, inferred) {\n      var primitive = this.inferPrimitive(input);\n      if (primitive) {\n        return primitive;\n      }\n      return this.inferComplex(input, inferred);\n    }\n  }, {\n    key: 'inferPrimitive',\n    value: function inferPrimitive(input) {\n      var context = this.context;\n\n      if (input === null) {\n        return context.null();\n      } else if (input === undefined) {\n        return context.void();\n      } else if (typeof input === 'number') {\n        return context.number();\n      } else if (typeof input === 'boolean') {\n        return context.boolean();\n      } else if (typeof input === 'string') {\n        return context.string();\n      }\n      // Issue 252\n      else if (typeof input === 'symbol') {\n          return context.symbol(input);\n        } else {\n          return undefined;\n        }\n    }\n  }, {\n    key: 'inferComplex',\n    value: function inferComplex(input, inferred) {\n      var context = this.context;\n\n\n      if (typeof input === 'function') {\n        return this.inferFunction(input, inferred);\n      } else if (input !== null && typeof input === 'object') {\n        return this.inferObject(input, inferred);\n      } else {\n        return context.any();\n      }\n    }\n  }, {\n    key: 'inferFunction',\n    value: function inferFunction(input, inferred) {\n      var context = this.context;\n      var length = input.length;\n\n      var body = new Array(length + 1);\n      for (var i = 0; i < length; i++) {\n        body[i] = context.param(String.fromCharCode(97 + i), context.existential());\n      }\n      body[length] = context.return(context.existential());\n      return context.fn.apply(context, body);\n    }\n  }, {\n    key: 'inferObject',\n    value: function inferObject(input, inferred) {\n      var existing = inferred.get(input);\n      if (existing) {\n        return existing;\n      }\n      var context = this.context;\n\n      var type = void 0;\n\n      // Temporarily create a box for this type to catch cyclical references.\n      // Nested references to this object will receive the boxed type.\n      var box = context.box(function () {\n        return type;\n      });\n      inferred.set(input, box);\n\n      if (context.checkPredicate('Array', input)) {\n        type = this.inferArray(input, inferred);\n      } else if (!(input instanceof Object)) {\n        type = this.inferDict(input, inferred);\n      } else if (input.constructor !== Object) {\n        var handler = context.getTypeConstructor(input.constructor);\n        if (handler) {\n          var typeParameters = handler.inferTypeParameters(input);\n          type = handler.apply.apply(handler, toConsumableArray(typeParameters));\n        } else {\n          type = context.ref(input.constructor);\n        }\n      } else {\n        var body = [];\n        for (var key in input) {\n          // eslint-disable-line\n          var value = input[key];\n          body.push(context.property(key, this.inferInternal(value, inferred)));\n        }\n        type = context.object.apply(context, body);\n      }\n\n      // Overwrite the box with the real value.\n      inferred.set(input, type);\n      return type;\n    }\n  }, {\n    key: 'inferDict',\n    value: function inferDict(input, inferred) {\n      var numericIndexers = [];\n      var stringIndexers = [];\n      loop: for (var key in input) {\n        // eslint-disable-line\n        var value = input[key];\n        var types = isNaN(+key) ? stringIndexers : numericIndexers;\n        for (var i = 0; i < types.length; i++) {\n          var type = types[i];\n          if (type.accepts(value)) {\n            continue loop;\n          }\n        }\n        types.push(this.inferInternal(value, inferred));\n      }\n\n      var context = this.context;\n\n      var body = [];\n      if (numericIndexers.length === 1) {\n        body.push(context.indexer('index', context.number(), numericIndexers[0]));\n      } else if (numericIndexers.length > 1) {\n        body.push(context.indexer('index', context.number(), context.union.apply(context, numericIndexers)));\n      }\n\n      if (stringIndexers.length === 1) {\n        body.push(context.indexer('key', context.string(), stringIndexers[0]));\n      } else if (stringIndexers.length > 1) {\n        body.push(context.indexer('key', context.string(), context.union.apply(context, stringIndexers)));\n      }\n\n      return context.object.apply(context, body);\n    }\n  }, {\n    key: 'inferArray',\n    value: function inferArray(input, inferred) {\n      var context = this.context;\n\n      var types = [];\n      var values = [];\n      var length = input.length;\n\n      loop: for (var i = 0; i < length; i++) {\n        var item = input[i];\n        var inferredType = this.inferInternal(item, inferred);\n        for (var j = 0; j < types.length; j++) {\n          var type = types[j];\n          if (type.accepts(item) && inferredType.accepts(values[j])) {\n            continue loop;\n          }\n        }\n        types.push(inferredType);\n        values.push(item);\n      }\n      if (types.length === 0) {\n        return context.array(context.any());\n      } else if (types.length === 1) {\n        return context.array(types[0]);\n      } else {\n        return context.array(context.union.apply(context, types));\n      }\n    }\n  }]);\n  return TypeInferer;\n}();\n\nfunction makeReactPropTypes(objectType) {\n  var output = {};\n  if (!objectType.properties) {\n    return output;\n  }\n\n  var _loop = function _loop(property) {\n    output[property.key] = function (props, propName, componentName) {\n      return makeError(property, props);\n    };\n  };\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = objectType.properties[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var property = _step.value;\n\n      _loop(property);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return output;\n}\n\nvar delimiter$1 = '\\n-------------------------------------------------\\n\\n';\n\nfunction makeWarningMessage(validation) {\n  if (!validation.hasErrors()) {\n    return;\n  }\n  var input = validation.input,\n      context = validation.context;\n\n  var collected = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = validation.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ref = _step.value;\n\n      var _ref2 = slicedToArray(_ref, 3);\n\n      var path = _ref2[0];\n      var message = _ref2[1];\n      var expectedType = _ref2[2];\n\n      var expected = expectedType ? expectedType.toString() : \"*\";\n      var actual = context.typeOf(_resolvePath(input, path)).toString();\n\n      var field = stringifyPath(validation.path.concat(path));\n\n      collected.push(`${field} ${message}\\n\\nExpected: ${expected}\\n\\nActual: ${actual}\\n`);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return `Warning: ${collected.join(delimiter$1)}`;\n}\n\nfunction makeUnion(context, types) {\n  var length = types.length;\n  var merged = [];\n  for (var i = 0; i < length; i++) {\n    var type = types[i];\n    if (type instanceof AnyType || type instanceof MixedType || type instanceof ExistentialType) {\n      return type;\n    }\n    if (type instanceof UnionType) {\n      mergeUnionTypes(merged, type.types);\n    } else {\n      merged.push(type);\n    }\n  }\n  var union = new UnionType(context);\n  union.types = merged;\n  return union;\n}\n\nfunction mergeUnionTypes(aTypes, bTypes) {\n  loop: for (var i = 0; i < bTypes.length; i++) {\n    var bType = bTypes[i];\n    for (var j = 0; j < aTypes.length; j++) {\n      var aType = aTypes[j];\n      if (compareTypes(aType, bType) !== -1) {\n        continue loop;\n      }\n    }\n    aTypes.push(bType);\n  }\n}\n\nfunction makePropertyDescriptor(typeSource, input, propertyName, descriptor, shouldAssert) {\n  if (typeof descriptor.get === 'function' && typeof descriptor.set === 'function') {\n    return augmentExistingAccessors(typeSource, input, propertyName, descriptor, shouldAssert);\n  } else {\n    return propertyToAccessor(typeSource, input, propertyName, descriptor, shouldAssert);\n  }\n}\n\nfunction makePropertyName(name) {\n  return `_flowRuntime$${name}`;\n}\n\nfunction getClassName(input) {\n  if (typeof input === 'function') {\n    return input.name || '[Class anonymous]';\n  } else if (typeof input.constructor === 'function') {\n    return getClassName(input.constructor);\n  } else {\n    return '[Class anonymous]';\n  }\n}\n\nfunction resolveType(receiver, typeSource) {\n  if (typeof typeSource === 'function') {\n    return typeSource.call(receiver);\n  } else {\n    return typeSource;\n  }\n}\n\nfunction propertyToAccessor(typeSource, input, propertyName, descriptor, shouldAssert) {\n  var safeName = makePropertyName(propertyName);\n  var className = getClassName(input);\n  var initializer = descriptor.initializer,\n      writable = descriptor.writable,\n      config = objectWithoutProperties(descriptor, ['initializer', 'writable']); // eslint-disable-line no-unused-vars\n\n  var propertyPath = [className, propertyName];\n\n  return _extends({}, config, {\n    type: 'accessor',\n    get() {\n      if (safeName in this) {\n        return this[safeName];\n      } else if (initializer) {\n        var type = resolveType(this, typeSource);\n        var _value = initializer.call(this);\n        var context = type.context;\n        context.check(type, _value, 'Default value for property', propertyPath);\n        Object.defineProperty(this, safeName, {\n          writable: true,\n          value: _value\n        });\n        return _value;\n      } else {\n        Object.defineProperty(this, safeName, {\n          writable: true,\n          value: undefined\n        });\n      }\n    },\n    set(value) {\n      var type = resolveType(this, typeSource);\n      var context = type.context;\n      if (shouldAssert) {\n        context.assert(type, value, 'Property', propertyPath);\n      } else {\n        context.warn(type, value, 'Property', propertyPath);\n      }\n      if (safeName in this) {\n        this[safeName] = value;\n      } else {\n        Object.defineProperty(this, safeName, {\n          writable: true,\n          value: value\n        });\n      }\n    }\n  });\n}\n\nfunction augmentExistingAccessors(typeSource, input, propertyName, descriptor, shouldAssert) {\n\n  var className = getClassName(input);\n  var propertyPath = [className, propertyName];\n\n  var originalSetter = descriptor.set;\n\n  descriptor.set = function set$$1(value) {\n    var type = resolveType(this, typeSource);\n    var context = type.context;\n    if (shouldAssert) {\n      context.assert(type, value, 'Property', propertyPath);\n    } else {\n      context.warn(type, value, 'Property', propertyPath);\n    }\n    originalSetter.call(this, value);\n  };\n}\n\n// eslint-disable-line no-redeclare\n\nfunction annotateValue(input, type) {\n  // eslint-disable-line no-redeclare\n  if (type instanceof Type) {\n    input[TypeSymbol] = type;\n    return input;\n  } else {\n    var _type = input;\n    return function (input) {\n      input[TypeSymbol] = _type;\n      return input;\n    };\n  }\n}\n\n// If A and B are object types, $Diff<A,B> is the type of objects that have\n// properties defined in A, but not in B.\n// Properties that are defined in both A and B are allowed too.\n\nvar $DiffType = function (_Type) {\n  inherits($DiffType, _Type);\n\n  function $DiffType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, $DiffType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = $DiffType.__proto__ || Object.getPrototypeOf($DiffType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = '$DiffType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass($DiffType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var aType = this.aType,\n          bType = this.bType;\n\n      if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n        yield [path, getErrorMessage('ERR_EXPECT_OBJECT'), this];\n        return;\n      }\n      aType = aType.unwrap();\n      bType = bType.unwrap();\n      invariant(aType instanceof ObjectType && bType instanceof ObjectType, 'Can only $Diff object types.');\n      var properties = aType.properties;\n      for (var i = 0; i < properties.length; i++) {\n        var property = properties[i];\n        if (bType.hasProperty(property.key)) {\n          continue;\n        }\n        yield* property.errors(validation, path.concat(property.key), input);\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var aType = this.aType,\n          bType = this.bType;\n\n      if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n        return false;\n      }\n      aType = aType.unwrap();\n      bType = bType.unwrap();\n      invariant(aType instanceof ObjectType && bType instanceof ObjectType, 'Can only $Diff object types.');\n      var properties = aType.properties;\n      for (var i = 0; i < properties.length; i++) {\n        var property = properties[i];\n        if (bType.hasProperty(property.key)) {\n          continue;\n        }\n        if (!property.accepts(input)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.unwrap(), input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      var _context;\n\n      var aType = this.aType,\n          bType = this.bType;\n\n      aType = aType.unwrap();\n      bType = bType.unwrap();\n      invariant(aType instanceof ObjectType && bType instanceof ObjectType, 'Can only $Diff object types.');\n      var properties = aType.properties;\n      var args = [];\n      for (var i = 0; i < properties.length; i++) {\n        var property = properties[i];\n        if (bType.hasProperty(property.key)) {\n          continue;\n        }\n        args.push(property);\n      }\n      return (_context = this.context).object.apply(_context, args);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `$Diff<${this.aType.toString()}, ${this.bType.toString()}>`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        aType: this.aType,\n        bType: this.bType\n      };\n    }\n  }]);\n  return $DiffType;\n}(Type);\n\n// Any subtype of T\n\nvar $FlowFixMeType = function (_Type) {\n  inherits($FlowFixMeType, _Type);\n\n  function $FlowFixMeType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, $FlowFixMeType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = $FlowFixMeType.__proto__ || Object.getPrototypeOf($FlowFixMeType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = '$FlowFixMeType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass($FlowFixMeType, [{\n    key: 'errors',\n    value: function* errors(validation, input) {\n      var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return true;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return 1;\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return '$FlowFixMe';\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName\n      };\n    }\n  }]);\n  return $FlowFixMeType;\n}(Type);\n\n// The set of keys of T.\n\nvar $KeysType = function (_Type) {\n  inherits($KeysType, _Type);\n\n  function $KeysType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, $KeysType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = $KeysType.__proto__ || Object.getPrototypeOf($KeysType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = '$KeysType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass($KeysType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var type = this.type.unwrap();\n      invariant(type instanceof ObjectType, 'Can only $Keys<T> object types.');\n\n      var properties = type.properties;\n      var length = properties.length;\n      for (var i = 0; i < length; i++) {\n        var property = properties[i];\n        if (input === property.key) {\n          return;\n        }\n      }\n      var keys = new Array(length);\n      for (var _i = 0; _i < length; _i++) {\n        keys[_i] = properties[_i].key;\n      }\n      yield [path, getErrorMessage('ERR_NO_UNION', keys.join(' | ')), this];\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var type = this.type.unwrap();\n      invariant(type instanceof ObjectType, 'Can only $Keys<T> object types.');\n\n      var properties = type.properties;\n      var length = properties.length;\n      for (var i = 0; i < length; i++) {\n        var property = properties[i];\n        if (input === property.key) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.unwrap(), input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      var _context;\n\n      var context = this.context;\n      var type = this.type.unwrap();\n      invariant(type instanceof ObjectType, 'Can only $Keys<T> object types.');\n\n      var properties = type.properties;\n      var length = properties.length;\n      var keys = new Array(length);\n      for (var i = 0; i < length; i++) {\n        var property = properties[i];\n        keys[i] = context.literal(property.key);\n      }\n      return (_context = this.context).union.apply(_context, keys);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `$Keys<${this.type.toString()}>`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        type: this.type\n      };\n    }\n  }]);\n  return $KeysType;\n}(Type);\n\n// Map over the keys and values in an object.\n\nvar $ObjMapiType = function (_Type) {\n  inherits($ObjMapiType, _Type);\n\n  function $ObjMapiType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, $ObjMapiType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = $ObjMapiType.__proto__ || Object.getPrototypeOf($ObjMapiType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = '$ObjMapiType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass($ObjMapiType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var object = this.object,\n          mapper = this.mapper,\n          context = this.context;\n\n      var target = object.unwrap();\n      invariant(target instanceof ObjectType, 'Target must be an object type.');\n\n      if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n        yield [path, getErrorMessage('ERR_EXPECT_OBJECT'), this];\n        return;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = target.properties[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var prop = _step.value;\n\n          var applied = mapper.unwrap();\n          invariant(applied instanceof FunctionType, 'Mapper must be a function type.');\n\n          var returnType = applied.invoke(context.literal(prop.key), prop.value);\n\n          var value = input[prop.key];\n          yield* returnType.errors(validation, path.concat(prop.key), value);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var object = this.object,\n          mapper = this.mapper,\n          context = this.context;\n\n      var target = object.unwrap();\n      invariant(target instanceof ObjectType, 'Target must be an object type.');\n\n      if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n        return false;\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = target.properties[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var prop = _step2.value;\n\n          var applied = mapper.unwrap();\n          invariant(applied instanceof FunctionType, 'Mapper must be a function type.');\n\n          var returnType = applied.invoke(context.literal(prop.key), prop.value);\n\n          var value = input[prop.key];\n          if (!returnType.accepts(value)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.unwrap(), input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      var object = this.object,\n          mapper = this.mapper,\n          context = this.context;\n\n      var target = object.unwrap();\n      invariant(target instanceof ObjectType, 'Target must be an object type.');\n\n      var args = [];\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = target.properties[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var prop = _step3.value;\n\n          var applied = mapper.unwrap();\n          invariant(applied instanceof FunctionType, 'Mapper must be a function type.');\n\n          args.push(context.property(prop.key, applied.invoke(context.literal(prop.key), prop.value)));\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return context.object.apply(context, args);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `$ObjMapi<${this.object.toString()}, ${this.mapper.toString()}>`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        object: this.object,\n        mapper: this.mapper\n      };\n    }\n  }]);\n  return $ObjMapiType;\n}(Type);\n\n// Map over the keys in an object.\n\nvar $ObjMapType = function (_Type) {\n  inherits($ObjMapType, _Type);\n\n  function $ObjMapType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, $ObjMapType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = $ObjMapType.__proto__ || Object.getPrototypeOf($ObjMapType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = '$ObjMapType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass($ObjMapType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var object = this.object,\n          mapper = this.mapper,\n          context = this.context;\n\n      var target = object.unwrap();\n      invariant(target instanceof ObjectType, 'Target must be an object type.');\n\n      if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n        yield [path, getErrorMessage('ERR_EXPECT_OBJECT'), this];\n        return;\n      }\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = target.properties[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var prop = _step.value;\n\n          var applied = mapper.unwrap();\n          invariant(applied instanceof FunctionType, 'Mapper must be a function type.');\n\n          var returnType = applied.invoke(context.literal(prop.key));\n\n          var value = input[prop.key];\n          yield* returnType.errors(validation, path.concat(prop.key), value);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var object = this.object,\n          mapper = this.mapper,\n          context = this.context;\n\n      var target = object.unwrap();\n      invariant(target instanceof ObjectType, 'Target must be an object type.');\n\n      if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n        return false;\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = target.properties[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var prop = _step2.value;\n\n          var applied = mapper.unwrap();\n          invariant(applied instanceof FunctionType, 'Mapper must be a function type.');\n\n          var returnType = applied.invoke(context.literal(prop.key));\n\n          var value = input[prop.key];\n          if (!returnType.accepts(value)) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.unwrap(), input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      var object = this.object,\n          mapper = this.mapper,\n          context = this.context;\n\n      var target = object.unwrap();\n      invariant(target instanceof ObjectType, 'Target must be an object type.');\n\n      var args = [];\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = target.properties[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var prop = _step3.value;\n\n          var applied = mapper.unwrap();\n          invariant(applied instanceof FunctionType, 'Mapper must be a function type.');\n\n          args.push(context.property(prop.key, applied.invoke(context.literal(prop.key))));\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return context.object.apply(context, args);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `$ObjMap<${this.object.toString()}, ${this.mapper.toString()}>`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        object: this.object,\n        mapper: this.mapper\n      };\n    }\n  }]);\n  return $ObjMapType;\n}(Type);\n\n// The type of the named object property\n\nvar $PropertyType = function (_Type) {\n  inherits($PropertyType, _Type);\n\n  function $PropertyType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, $PropertyType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = $PropertyType.__proto__ || Object.getPrototypeOf($PropertyType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = '$PropertyType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass($PropertyType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      yield* this.unwrap().errors(validation, path, input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return this.unwrap().accepts(input);\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.unwrap(), input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      var object = this.object,\n          property = this.property;\n\n      var unwrapped = object.unwrap();\n      invariant(typeof unwrapped.getProperty === 'function', 'Can only use $PropertyType on Objects.');\n      return unwrapped.getProperty(property).unwrap();\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `$PropertyType<${this.object.toString()}, ${String(this.property)}>`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        object: this.object,\n        property: this.property\n      };\n    }\n  }]);\n  return $PropertyType;\n}(Type);\n\n// An object of type $Shape<T> does not have to have all of the properties\n// that type T defines. But the types of the properties that it does have\n// must accepts the types of the same properties in T.\n\nvar $ShapeType = function (_Type) {\n  inherits($ShapeType, _Type);\n\n  function $ShapeType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, $ShapeType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = $ShapeType.__proto__ || Object.getPrototypeOf($ShapeType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = '$ShapeType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass($ShapeType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var type = this.type;\n\n\n      if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n        yield [path, getErrorMessage('ERR_EXPECT_OBJECT'), this];\n        return;\n      }\n\n      type = type.unwrap();\n      invariant(typeof type.getProperty === 'function', 'Can only $Shape<T> object types.');\n\n      for (var key in input) {\n        // eslint-disable-line guard-for-in\n        var property = type.getProperty(key);\n        if (!property) {\n          continue;\n        }\n        yield* property.errors(validation, path, input);\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var type = this.type;\n\n      if (input === null || typeof input !== 'object' && typeof input !== 'function') {\n        return false;\n      }\n      type = type.unwrap();\n      invariant(typeof type.getProperty === 'function', 'Can only $Shape<T> object types.');\n      for (var key in input) {\n        // eslint-disable-line guard-for-in\n        var property = type.getProperty(key);\n        if (!property || !property.accepts(input)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.unwrap(), input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      var _context;\n\n      var type = this.type;\n\n      type = type.unwrap();\n      var context = this.context;\n      invariant(type instanceof ObjectType, 'Can only $Shape<T> object types.');\n      var properties = type.properties;\n      var args = new Array(properties.length);\n      for (var i = 0; i < properties.length; i++) {\n        var property = properties[i];\n        args[i] = context.property(property.key, property.value, true);\n      }\n      return (_context = this.context).object.apply(_context, args);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `$Shape<${this.type.toString()}>`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        type: this.type\n      };\n    }\n  }]);\n  return $ShapeType;\n}(Type);\n\n// Any subtype of T\n\nvar $SubType = function (_Type) {\n  inherits($SubType, _Type);\n\n  function $SubType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, $SubType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = $SubType.__proto__ || Object.getPrototypeOf($SubType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = '$SubType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass($SubType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      yield* this.type.errors(input, path);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return this.type.accepts(input);\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.unwrap(), input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.type;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `$Subtype<${this.type.toString()}>`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        type: this.type\n      };\n    }\n  }]);\n  return $SubType;\n}(Type);\n\n// Any, but at least T.\n\nvar $SuperType = function (_Type) {\n  inherits($SuperType, _Type);\n\n  function $SuperType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, $SuperType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = $SuperType.__proto__ || Object.getPrototypeOf($SuperType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = '$SuperType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass($SuperType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      yield* this.type.errors(validation, path, input);\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      return this.type.accepts(input);\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.unwrap(), input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      return this.type;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `$Supertype<${this.type.toString()}>`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        type: this.type\n      };\n    }\n  }]);\n  return $SuperType;\n}(Type);\n\n// Map over the values in a tuple.\n\nvar $TupleMapType = function (_Type) {\n  inherits($TupleMapType, _Type);\n\n  function $TupleMapType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, $TupleMapType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = $TupleMapType.__proto__ || Object.getPrototypeOf($TupleMapType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = '$TupleMapType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass($TupleMapType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var tuple = this.tuple,\n          mapper = this.mapper,\n          context = this.context;\n\n      var target = tuple.unwrap();\n      invariant(target instanceof TupleType, 'Target must be a tuple type.');\n\n      if (!context.checkPredicate('Array', input)) {\n        yield [path, getErrorMessage('ERR_EXPECT_ARRAY'), this];\n        return;\n      }\n\n      for (var i = 0; i < target.types.length; i++) {\n        var type = target.types[i];\n        var applied = mapper.unwrap();\n        invariant(applied instanceof FunctionType, 'Mapper must be a function type.');\n\n        var expected = applied.invoke(type);\n        var value = input[i];\n        yield* expected.errors(validation, path.concat(i), value);\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var tuple = this.tuple,\n          mapper = this.mapper,\n          context = this.context;\n\n      var target = tuple.unwrap();\n      invariant(target instanceof TupleType, 'Target must be a tuple type.');\n\n      if (!context.checkPredicate('Array', input)) {\n        return false;\n      }\n\n      for (var i = 0; i < target.types.length; i++) {\n        var type = target.types[i];\n        var applied = mapper.unwrap();\n        invariant(applied instanceof FunctionType, 'Mapper must be a function type.');\n\n        if (!applied.invoke(type).accepts(input[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.unwrap(), input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      var tuple = this.tuple,\n          mapper = this.mapper,\n          context = this.context;\n\n      var target = tuple.unwrap();\n      invariant(target instanceof TupleType, 'Target must be an tuple type.');\n\n      var args = [];\n      for (var i = 0; i < target.types.length; i++) {\n        var type = target.types[i];\n        var applied = mapper.unwrap();\n        invariant(applied instanceof FunctionType, 'Mapper must be a function type.');\n\n        args.push(applied.invoke(type).unwrap().unwrap());\n      }\n\n      return context.tuple.apply(context, args);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `$TupleMap<${this.tuple.toString()}, ${this.mapper.toString()}>`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        tuple: this.tuple,\n        mapper: this.mapper\n      };\n    }\n  }]);\n  return $TupleMapType;\n}(Type);\n\n// The set of keys of T.\n\nvar $ValuesType = function (_Type) {\n  inherits($ValuesType, _Type);\n\n  function $ValuesType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, $ValuesType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = $ValuesType.__proto__ || Object.getPrototypeOf($ValuesType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = '$ValuesType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass($ValuesType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var type = this.type.unwrap();\n      invariant(type instanceof ObjectType, 'Can only $Values<T> object types.');\n\n      var properties = type.properties;\n      var length = properties.length;\n      for (var i = 0; i < length; i++) {\n        var property = properties[i];\n        if (property.value.accepts(input)) {\n          return;\n        }\n      }\n      var values = new Array(length);\n      for (var _i = 0; _i < length; _i++) {\n        values[_i] = properties[_i].value.toString();\n      }\n      yield [path, getErrorMessage('ERR_NO_UNION', values.join(' | ')), this];\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var type = this.type.unwrap();\n      invariant(type instanceof ObjectType, 'Can only $Values<T> object types.');\n\n      var properties = type.properties;\n      var length = properties.length;\n      for (var i = 0; i < length; i++) {\n        var property = properties[i];\n        if (property.value.accepts(input)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      return compareTypes(this.unwrap(), input);\n    }\n  }, {\n    key: 'unwrap',\n    value: function unwrap() {\n      var context = this.context;\n      var type = this.type.unwrap();\n      invariant(type instanceof ObjectType, 'Can only $Values<T> object types.');\n\n      var properties = type.properties;\n      var length = properties.length;\n      var values = new Array(length);\n      for (var i = 0; i < length; i++) {\n        var property = properties[i];\n        values[i] = property.value;\n      }\n      return context.union.apply(context, values);\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `$Values<${this.type.toString()}>`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        type: this.type\n      };\n    }\n  }]);\n  return $ValuesType;\n}(Type);\n\nfunction checkGenericType(context, expected, input) {\n  var impl = expected.impl;\n\n  if (typeof impl !== 'function') {\n    // There is little else we can do here, so accept anything.\n    return true;\n  } else if (impl === input || impl.isPrototypeOf(input)) {\n    return true;\n  }\n\n  var annotation = context.getAnnotation(impl);\n  if (annotation == null) {\n    return false;\n  } else {\n    return checkType(context, annotation, input);\n  }\n}\n\nfunction checkType(context, expected, input) {\n  var annotation = context.getAnnotation(input);\n  if (annotation != null) {\n    var result = compareTypes(expected, annotation);\n    return result !== -1;\n  }\n  return true;\n}\n\nvar ClassType = function (_Type) {\n  inherits(ClassType, _Type);\n\n  function ClassType() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ClassType);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ClassType.__proto__ || Object.getPrototypeOf(ClassType)).call.apply(_ref, [this].concat(args))), _this), _this.typeName = 'ClassType', _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ClassType, [{\n    key: 'errors',\n    value: function* errors(validation, path, input) {\n      var instanceType = this.instanceType,\n          context = this.context;\n\n      if (typeof input !== 'function') {\n        yield [path, getErrorMessage('ERR_EXPECT_CLASS', instanceType.toString()), this];\n        return;\n      }\n      var expectedType = instanceType.typeName === 'ClassDeclaration' ? instanceType : instanceType.unwrap();\n      var isValid = expectedType instanceof GenericType ? checkGenericType(context, expectedType, input) : checkType(context, expectedType, input);\n      if (!isValid) {\n        yield [path, getErrorMessage('ERR_EXPECT_CLASS', instanceType.toString()), this];\n      }\n    }\n  }, {\n    key: 'accepts',\n    value: function accepts(input) {\n      var instanceType = this.instanceType,\n          context = this.context;\n\n      if (typeof input !== 'function') {\n        return false;\n      }\n      var expectedType = instanceType.typeName === 'ClassDeclaration' ? instanceType : instanceType.unwrap();\n      if (expectedType instanceof GenericType) {\n        return checkGenericType(context, expectedType, input);\n      } else {\n        return checkType(context, expectedType, input);\n      }\n    }\n  }, {\n    key: 'compareWith',\n    value: function compareWith(input) {\n      var instanceType = this.instanceType;\n\n      if (input instanceof ClassType) {\n        return compareTypes(instanceType, input.instanceType);\n      }\n      return -1;\n    }\n  }, {\n    key: 'toString',\n    value: function toString() {\n      return `Class<${this.instanceType.toString()}>`;\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        typeName: this.typeName,\n        instanceType: this.instanceType\n      };\n    }\n  }]);\n  return ClassType;\n}(Type);\n\n/**\n * Keeps track of invalid references in order to prevent\n * multiple warnings.\n */\nvar warnedInvalidReferences = new WeakSet();\n\nvar TypeContext = function () {\n  function TypeContext() {\n    classCallCheck(this, TypeContext);\n    this.mode = 'assert';\n    this[NameRegistrySymbol] = {};\n    this[TypePredicateRegistrySymbol] = {};\n    this[TypeConstructorRegistrySymbol] = new Map();\n    this[InferrerSymbol] = new TypeInferer(this);\n    this[ModuleRegistrySymbol] = {};\n  }\n\n  /**\n   * Calls to `t.check(...)` will call either\n   * `t.assert(...)` or `t.warn(...)` depending on this setting.\n   */\n\n\n  // Issue 252\n\n\n  // Issue 252\n\n\n  // Issue 252\n\n\n  // Issue 252\n\n\n  // Issue 252\n\n\n  // Issue 252\n\n\n  createClass(TypeContext, [{\n    key: 'makeJSONError',\n    value: function makeJSONError$$1(validation) {\n      return makeJSONError(validation);\n    }\n  }, {\n    key: 'makeTypeError',\n    value: function makeTypeError$$1(validation) {\n      return makeTypeError(validation);\n    }\n  }, {\n    key: 'createContext',\n    value: function createContext() {\n      var context = new TypeContext();\n      // Issue 252\n      context[ParentSymbol] = this;\n      return context;\n    }\n  }, {\n    key: 'typeOf',\n    value: function typeOf(input) {\n\n      var annotation = this.getAnnotation(input);\n      if (annotation) {\n        if (typeof input === 'function' && (annotation instanceof ClassDeclaration || annotation instanceof ParameterizedClassDeclaration)) {\n          return this.Class(annotation);\n        }\n        return annotation;\n      }\n      // Issue 252\n      var inferrer = this[InferrerSymbol];\n      inferrer;\n\n      return inferrer.infer(input);\n    }\n  }, {\n    key: 'compareTypes',\n    value: function compareTypes$$1(a, b) {\n      return compareTypes(a, b);\n    }\n  }, {\n    key: 'get',\n    value: function get$$1(name) {\n      // Issue 252\n      var item = this[NameRegistrySymbol][name];\n\n      for (var _len = arguments.length, propertyNames = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        propertyNames[_key - 1] = arguments[_key];\n      }\n\n      if (item != null) {\n        var current = typeof item === 'function' ? new item(this) : item;\n        for (var i = 0; i < propertyNames.length; i++) {\n          var propertyName = propertyNames[i];\n          if (typeof current.getProperty !== 'function') {\n            return;\n          }\n          current = current.getProperty(propertyName);\n          if (!current) {\n            return;\n          }\n          current = current.unwrap();\n        }\n        return current;\n      }\n      // Issue 252\n      var parent = this[ParentSymbol];\n      if (parent) {\n        var fromParent = parent.get.apply(parent, [name].concat(toConsumableArray(propertyNames)));\n        if (fromParent) {\n          return fromParent;\n        }\n      }\n\n      // if we got this far, see if we have a global type with this name.\n      if (typeof global[name] === 'function') {\n        var target = new GenericType(this);\n        target.name = name;\n        target.impl = global[name];\n        // Issue 252\n        this[NameRegistrySymbol][name] = target;\n        return target;\n      }\n    }\n\n    /**\n     * Get the predicate for a given type name.\n     * e.g. `t.getPredicate('Array')`.\n     */\n\n  }, {\n    key: 'getPredicate',\n    value: function getPredicate(name) {\n      var item = this[TypePredicateRegistrySymbol][name];\n      if (item) {\n        return item;\n      }\n      var parent = this[ParentSymbol];\n      if (parent) {\n        return parent.getPredicate(name);\n      }\n    }\n\n    /**\n     * Set the predicate for a given type name.\n     * This can be used to customise the behaviour of things like Array\n     * detection or allowing Thenables in place of the global Promise.\n     */\n\n  }, {\n    key: 'setPredicate',\n    value: function setPredicate(name, predicate) {\n      this[TypePredicateRegistrySymbol][name] = predicate;\n    }\n\n    /**\n     * Check the given value against the named predicate.\n     * Returns false if no such predicate exists.\n     * e.g. `t.checkPredicate('Array', [1, 2, 3])`\n     */\n\n  }, {\n    key: 'checkPredicate',\n    value: function checkPredicate(name, input) {\n      var predicate = this.getPredicate(name);\n      if (predicate) {\n        return predicate(input);\n      } else {\n        return false;\n      }\n    }\n\n    /**\n     * Returns a decorator for a function or object with the given type.\n     */\n\n  }, {\n    key: 'decorate',\n    value: function decorate(type, shouldAssert) {\n      var _this2 = this;\n\n      if (shouldAssert == null) {\n        shouldAssert = this.mode === 'assert';\n      }\n      return function (input, propertyName, descriptor) {\n        if (descriptor && typeof propertyName === 'string') {\n          return makePropertyDescriptor(type, input, propertyName, descriptor, Boolean(shouldAssert));\n        } else {\n          invariant(typeof type !== 'function', 'Cannot decorate an object or function as a method.');\n          return _this2.annotate(input, type);\n        }\n      };\n    }\n\n    /**\n     * Annotates an object or function with the given type.\n     * If a type is specified as the sole argument, returns a\n     * function which can decorate classes or functions with the given type.\n     */\n\n  }, {\n    key: 'annotate',\n    value: function annotate(input, type) {\n      if (type === undefined) {\n        return annotateValue(input);\n      } else {\n        return annotateValue(input, type);\n      }\n    }\n  }, {\n    key: 'getAnnotation',\n    value: function getAnnotation(input) {\n      if (input !== null && typeof input === 'object' || typeof input === 'function') {\n        // Issue 252\n        return input[TypeSymbol];\n      }\n    }\n  }, {\n    key: 'hasAnnotation',\n    value: function hasAnnotation(input) {\n      if (input == null) {\n        return false;\n      } else {\n        return input[TypeSymbol] ? true : false;\n      }\n    }\n  }, {\n    key: 'setAnnotation',\n    value: function setAnnotation(input, type) {\n      input[TypeSymbol] = type;\n      return input;\n    }\n  }, {\n    key: 'type',\n    value: function type(name, _type) {\n      if (typeof _type === 'function') {\n        var target = new ParameterizedTypeAlias(this);\n        target.name = name;\n        target.typeCreator = _type;\n        return target;\n      } else {\n        var _target = new TypeAlias(this);\n        _target.name = name;\n        _target.type = _type;\n        return _target;\n      }\n    }\n  }, {\n    key: 'declare',\n    value: function declare(name, type) {\n\n      if (name instanceof Declaration) {\n        type = name;\n        name = type.name;\n      } else if (name instanceof TypeAlias) {\n        type = name;\n        name = type.name;\n      }\n      if (typeof type === 'function') {\n        type = this.type(name, type);\n      }\n      if (type instanceof ModuleDeclaration) {\n        var moduleRegistry = this[ModuleRegistrySymbol];\n        moduleRegistry[name] = type;\n        return type;\n      } else {\n        invariant(typeof name === 'string', 'Name must be a string');\n        invariant(type instanceof Type, 'Type must be supplied to declaration');\n        var nameRegistry = this[NameRegistrySymbol];\n\n        if (type instanceof Declaration) {\n          nameRegistry[name] = type;\n          return type;\n        } else if (type instanceof TypeAlias || type instanceof ParameterizedTypeAlias) {\n          var target = new TypeDeclaration(this);\n          target.name = name;\n          target.typeAlias = type;\n          nameRegistry[name] = target;\n          return target;\n        } else {\n          var _target2 = this.var(name, type);\n          nameRegistry[name] = _target2;\n          return _target2;\n        }\n      }\n    }\n  }, {\n    key: 'declarations',\n    value: function* declarations() {\n      var nameRegistry = this[NameRegistrySymbol];\n      for (var key in nameRegistry) {\n        // eslint-disable-line guard-for-in\n        yield [key, nameRegistry[key]];\n      }\n    }\n  }, {\n    key: 'modules',\n    value: function* modules() {\n      var moduleRegistry = this[ModuleRegistrySymbol];\n      for (var key in moduleRegistry) {\n        // eslint-disable-line guard-for-in\n        yield moduleRegistry[key];\n      }\n    }\n  }, {\n    key: 'import',\n    value: function _import(moduleName) {\n      var moduleRegistry = this[ModuleRegistrySymbol];\n      if (moduleRegistry[moduleName]) {\n        return moduleRegistry[moduleName];\n      }\n\n      var _moduleName$split = moduleName.split('/'),\n          _moduleName$split2 = slicedToArray(_moduleName$split, 1),\n          head = _moduleName$split2[0];\n\n      var module = moduleRegistry[head];\n      if (module) {\n        return module.import(moduleName);\n      }\n      var parent = this[ParentSymbol];\n      if (parent) {\n        return parent.import(moduleName);\n      }\n    }\n  }, {\n    key: 'declareTypeConstructor',\n    value: function declareTypeConstructor(_ref) {\n      var name = _ref.name,\n          impl = _ref.impl,\n          typeName = _ref.typeName,\n          errors = _ref.errors,\n          accepts = _ref.accepts,\n          inferTypeParameters = _ref.inferTypeParameters,\n          compareWith = _ref.compareWith;\n\n      var nameRegistry = this[NameRegistrySymbol];\n\n      if (nameRegistry[name]) {\n        this.emitWarningMessage(`Redeclaring type: ${name}, this may be unintended.`);\n      }\n\n      var target = new TypeConstructor(this);\n      target.name = name;\n      target.typeName = typeName;\n      target.impl = impl;\n      target.errors = errors;\n      target.accepts = accepts;\n      target.inferTypeParameters = inferTypeParameters;\n      if (typeof compareWith === 'function') {\n        target.compareWith = compareWith;\n      }\n\n      nameRegistry[name] = target;\n\n      if (typeof impl === 'function') {\n        // Issue 252\n        var handlerRegistry = this[TypeConstructorRegistrySymbol];\n        handlerRegistry;\n\n        if (handlerRegistry.has(impl)) {\n          this.emitWarningMessage(`A type handler already exists for the given implementation of ${name}.`);\n        }\n        handlerRegistry.set(impl, target);\n      }\n      return target;\n    }\n  }, {\n    key: 'getTypeConstructor',\n    value: function getTypeConstructor(impl) {\n      // Issue 252\n      var handlerRegistry = this[TypeConstructorRegistrySymbol];\n      handlerRegistry;\n\n      return handlerRegistry.get(impl);\n    }\n  }, {\n    key: 'literal',\n    value: function literal(input) {\n      if (input === undefined) {\n        return this.void();\n      } else if (input === null) {\n        return this.null();\n      } else if (typeof input === 'boolean') {\n        return this.boolean(input);\n      } else if (typeof input === 'number') {\n        return this.number(input);\n      } else if (typeof input === 'string') {\n        return this.string(input);\n      }\n      // Issue 252\n      else if (typeof input === 'symbol') {\n          return this.symbol(input);\n        } else {\n          return this.typeOf(input);\n        }\n    }\n  }, {\n    key: 'null',\n    value: function _null() {\n      return primitiveTypes.null;\n    }\n  }, {\n    key: 'nullable',\n    value: function nullable(type) {\n      var target = new NullableType(this);\n      target.type = type;\n      return target;\n    }\n  }, {\n    key: 'existential',\n    value: function existential() {\n      return primitiveTypes.existential;\n    }\n  }, {\n    key: 'empty',\n    value: function empty() {\n      return primitiveTypes.empty;\n    }\n  }, {\n    key: 'any',\n    value: function any() {\n      return primitiveTypes.any;\n    }\n  }, {\n    key: 'mixed',\n    value: function mixed() {\n      return primitiveTypes.mixed;\n    }\n  }, {\n    key: 'void',\n    value: function _void() {\n      return primitiveTypes.void;\n    }\n  }, {\n    key: 'this',\n    value: function _this(input) {\n      var target = new ThisType(this);\n      if (input !== undefined) {\n        target.recorded = input;\n      }\n      return target;\n    }\n  }, {\n    key: 'number',\n    value: function number(input) {\n      if (input !== undefined) {\n        var target = new NumericLiteralType(this);\n        target.value = input;\n        return target;\n      } else {\n        return primitiveTypes.number;\n      }\n    }\n  }, {\n    key: 'boolean',\n    value: function boolean(input) {\n      if (input !== undefined) {\n        var target = new BooleanLiteralType(this);\n        target.value = input;\n        return target;\n      } else {\n        return primitiveTypes.boolean;\n      }\n    }\n  }, {\n    key: 'string',\n    value: function string(input) {\n      if (input !== undefined) {\n        var target = new StringLiteralType(this);\n        target.value = input;\n        return target;\n      } else {\n        return primitiveTypes.string;\n      }\n    }\n  }, {\n    key: 'symbol',\n    value: function symbol(input) {\n      if (input !== undefined) {\n        var target = new SymbolLiteralType(this);\n        target.value = input;\n        return target;\n      } else {\n        return primitiveTypes.symbol;\n      }\n    }\n  }, {\n    key: 'typeParameter',\n    value: function typeParameter(id, bound, defaultType) {\n      var target = new TypeParameter(this);\n      target.id = id;\n      target.bound = bound;\n      target.default = defaultType;\n      return target;\n    }\n  }, {\n    key: 'flowInto',\n    value: function flowInto(typeParameter) {\n      return flowIntoTypeParameter(typeParameter);\n    }\n\n    /**\n     * Bind the type parameters for the parent class of the given instance.\n     */\n\n  }, {\n    key: 'bindTypeParameters',\n    value: function bindTypeParameters(subject) {\n      var instancePrototype = Object.getPrototypeOf(subject);\n      // Issue\n      var parentPrototype = instancePrototype && Object.getPrototypeOf(instancePrototype);\n      // Issue\n      var parentClass = parentPrototype && parentPrototype.constructor;\n\n      if (!parentClass) {\n        this.emitWarningMessage('Could not bind type parameters for non-existent parent class.');\n        return subject;\n      }\n      // Issue 252\n      var typeParametersPointer = parentClass[TypeParametersSymbol];\n\n      if (typeParametersPointer) {\n        var typeParameters = subject[typeParametersPointer];\n        var keys = Object.keys(typeParameters);\n\n        for (var _len2 = arguments.length, typeInstances = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          typeInstances[_key2 - 1] = arguments[_key2];\n        }\n\n        var length = Math.min(keys.length, typeInstances.length);\n        for (var i = 0; i < length; i++) {\n          var typeParam = typeParameters[keys[i]];\n          typeParam.bound = typeInstances[i];\n        }\n      }\n      return subject;\n    }\n  }, {\n    key: 'module',\n    value: function module(name, body) {\n      var target = new ModuleDeclaration(this);\n      target.name = name;\n      var innerContext = this.createContext();\n      // Issue 252\n      innerContext[ParentSymbol] = this;\n      // Issue 252\n      innerContext[CurrentModuleSymbol] = target;\n\n      target.innerContext = innerContext;\n      body(innerContext);\n      return target;\n    }\n  }, {\n    key: 'moduleExports',\n    value: function moduleExports(type) {\n      var currentModule = this[CurrentModuleSymbol];\n      if (!currentModule) {\n        throw new Error('Cannot declare module.exports outside of a module.');\n      }\n      var target = new ModuleExports(this);\n      target.type = type;\n      currentModule.moduleExports = target;\n      return target;\n    }\n  }, {\n    key: 'var',\n    value: function _var(name, type) {\n      var target = new VarDeclaration(this);\n      target.name = name;\n      target.type = type;\n      return target;\n    }\n  }, {\n    key: 'class',\n    value: function _class(name, head) {\n      if (typeof head === 'function') {\n        var _target3 = new ParameterizedClassDeclaration(this);\n        _target3.name = name;\n        _target3.bodyCreator = head;\n        return _target3;\n      }\n      var target = new ClassDeclaration(this);\n      target.name = name;\n\n      for (var _len3 = arguments.length, tail = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n        tail[_key3 - 2] = arguments[_key3];\n      }\n\n      if (head != null) {\n        tail.unshift(head);\n      }\n      var length = tail.length;\n\n      var properties = [];\n      var body = void 0;\n\n      for (var i = 0; i < length; i++) {\n        var item = tail[i];\n        if (item instanceof ObjectTypeProperty || item instanceof ObjectTypeIndexer) {\n          properties.push(item);\n        } else if (item instanceof ObjectType) {\n          invariant(!body, 'Class body must only be declared once.');\n          body = item;\n        } else if (item instanceof ExtendsDeclaration) {\n          invariant(!target.superClass, 'Classes can only have one super class.');\n          target.superClass = item;\n        } else if (item != null && typeof item === 'object' && !(item instanceof Type)) {\n          for (var propertyName in item) {\n            // eslint-disable-line\n            properties.push(this.property(propertyName, item[propertyName]));\n          }\n        } else {\n          throw new Error('ClassDeclaration cannot contain the given type directly.');\n        }\n      }\n      if (!body) {\n        body = new ObjectType(this);\n      }\n      if (properties.length) {\n        var _body$properties;\n\n        (_body$properties = body.properties).push.apply(_body$properties, properties);\n      }\n      target.body = body;\n      return target;\n    }\n  }, {\n    key: 'extends',\n    value: function _extends(subject) {\n      var target = new ExtendsDeclaration(this);\n\n      for (var _len4 = arguments.length, typeInstances = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        typeInstances[_key4 - 1] = arguments[_key4];\n      }\n\n      target.type = this.ref.apply(this, [subject].concat(toConsumableArray(typeInstances)));\n      return target;\n    }\n  }, {\n    key: 'fn',\n    value: function fn(head) {\n      for (var _len5 = arguments.length, tail = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n        tail[_key5 - 1] = arguments[_key5];\n      }\n\n      return this.function.apply(this, [head].concat(tail));\n    }\n  }, {\n    key: 'function',\n    value: function _function(head) {\n      if (typeof head === 'function') {\n        var _target4 = new ParameterizedFunctionType(this);\n        _target4.bodyCreator = head;\n        return _target4;\n      }\n      var target = new FunctionType(this);\n      if (head != null) {\n        for (var _len6 = arguments.length, tail = Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n          tail[_key6 - 1] = arguments[_key6];\n        }\n\n        tail.unshift(head);\n        var length = tail.length;\n\n        for (var i = 0; i < length; i++) {\n          var item = tail[i];\n          if (item instanceof FunctionTypeParam) {\n            target.params.push(item);\n          } else if (item instanceof FunctionTypeRestParam) {\n            target.rest = item;\n          } else if (item instanceof FunctionTypeReturn) {\n            target.returnType = item;\n          } else {\n            throw new Error('FunctionType cannot contain the given type directly.');\n          }\n        }\n      }\n      if (!target.returnType) {\n        target.returnType = this.any();\n      }\n      return target;\n    }\n  }, {\n    key: 'param',\n    value: function param(name, type) {\n      var optional = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var target = new FunctionTypeParam(this);\n      target.name = name;\n      target.type = type;\n      target.optional = optional;\n      return target;\n    }\n  }, {\n    key: 'rest',\n    value: function rest(name, type) {\n      var target = new FunctionTypeRestParam(this);\n      target.name = name;\n      target.type = type;\n      return target;\n    }\n  }, {\n    key: 'return',\n    value: function _return(type) {\n      var target = new FunctionTypeReturn(this);\n      target.type = type;\n      return target;\n    }\n  }, {\n    key: 'generator',\n    value: function generator(yieldType, returnType, nextType) {\n      var target = new GeneratorType(this);\n      target.yieldType = yieldType;\n      target.returnType = returnType || this.any();\n      target.nextType = nextType || this.any();\n      return target;\n    }\n  }, {\n    key: 'object',\n    value: function object(head) {\n      var target = new ObjectType(this);\n      if (head != null && typeof head === 'object' && !(head instanceof Type)) {\n        for (var propertyName in head) {\n          // eslint-disable-line\n          target.properties.push(this.property(propertyName, head[propertyName]));\n        }\n      } else {\n        var body = void 0;\n\n        for (var _len7 = arguments.length, tail = Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {\n          tail[_key7 - 1] = arguments[_key7];\n        }\n\n        if (head) {\n          body = [head].concat(toConsumableArray(tail));\n        } else {\n          body = tail;\n        }\n        var _body = body,\n            length = _body.length;\n\n        for (var i = 0; i < length; i++) {\n          var item = body[i];\n          if (item instanceof ObjectTypeProperty) {\n            target.properties.push(item);\n          } else if (item instanceof ObjectTypeIndexer) {\n            target.indexers.push(item);\n          } else if (item instanceof ObjectTypeCallProperty) {\n            target.callProperties.push(item);\n          } else {\n            throw new Error('ObjectType cannot contain the given type directly.');\n          }\n        }\n      }\n      return target;\n    }\n  }, {\n    key: 'exactObject',\n    value: function exactObject(head) {\n      for (var _len8 = arguments.length, tail = Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n        tail[_key8 - 1] = arguments[_key8];\n      }\n\n      var object = this.object.apply(this, [head].concat(toConsumableArray(tail)));\n      object.exact = true;\n      return object;\n    }\n  }, {\n    key: 'callProperty',\n    value: function callProperty(value) {\n      var target = new ObjectTypeCallProperty(this);\n      target.value = value;\n      return target;\n    }\n  }, {\n    key: 'property',\n    value: function property(key, value) {\n      var optional = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var target = new ObjectTypeProperty(this);\n      target.key = key;\n      if (value instanceof Type) {\n        target.value = value;\n      } else {\n        target.value = this.object(value);\n      }\n      target.optional = optional;\n      return target;\n    }\n  }, {\n    key: 'indexer',\n    value: function indexer(id, key, value) {\n      var target = new ObjectTypeIndexer(this);\n      target.id = id;\n      target.key = key;\n      target.value = value;\n      return target;\n    }\n  }, {\n    key: 'method',\n    value: function method(name, head) {\n      var target = new ObjectTypeProperty(this);\n      target.key = name;\n\n      for (var _len9 = arguments.length, tail = Array(_len9 > 2 ? _len9 - 2 : 0), _key9 = 2; _key9 < _len9; _key9++) {\n        tail[_key9 - 2] = arguments[_key9];\n      }\n\n      target.value = this.function.apply(this, [head].concat(tail));\n      return target;\n    }\n  }, {\n    key: 'staticCallProperty',\n    value: function staticCallProperty(value) {\n      var prop = this.callProperty(value);\n      prop.static = true;\n      return prop;\n    }\n  }, {\n    key: 'staticProperty',\n    value: function staticProperty(key, value) {\n      var optional = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var prop = this.property(key, value, optional);\n      prop.static = true;\n      return prop;\n    }\n  }, {\n    key: 'staticMethod',\n    value: function staticMethod(name, head) {\n      for (var _len10 = arguments.length, tail = Array(_len10 > 2 ? _len10 - 2 : 0), _key10 = 2; _key10 < _len10; _key10++) {\n        tail[_key10 - 2] = arguments[_key10];\n      }\n\n      var prop = this.method.apply(this, [name, head].concat(tail));\n      prop.static = true;\n      return prop;\n    }\n  }, {\n    key: 'spread',\n    value: function spread() {\n      var target = new ObjectType(this);\n\n      for (var _len11 = arguments.length, types = Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n        types[_key11] = arguments[_key11];\n      }\n\n      for (var i = 0; i < types.length; i++) {\n        var type = types[i].unwrap();\n        if (Array.isArray(type.callProperties)) {\n          var _target$callPropertie;\n\n          (_target$callPropertie = target.callProperties).push.apply(_target$callPropertie, toConsumableArray(type.callProperties));\n        }\n        if (Array.isArray(type.indexers)) {\n          var _target$indexers;\n\n          (_target$indexers = target.indexers).push.apply(_target$indexers, toConsumableArray(type.indexers));\n        }\n        if (Array.isArray(type.properties)) {\n          for (var j = 0; j < type.properties.length; j++) {\n            var prop = type.properties[j];\n            invariant(prop instanceof ObjectTypeProperty);\n            target.setProperty(prop.key, prop.value, prop.optional);\n          }\n        }\n      }\n      return target;\n    }\n  }, {\n    key: 'tuple',\n    value: function tuple() {\n      var target = new TupleType(this);\n\n      for (var _len12 = arguments.length, types = Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n        types[_key12] = arguments[_key12];\n      }\n\n      target.types = types;\n      return target;\n    }\n  }, {\n    key: 'array',\n    value: function array(elementType) {\n      var target = new ArrayType(this);\n      target.elementType = elementType || this.any();\n      return target;\n    }\n  }, {\n    key: 'union',\n    value: function union() {\n      for (var _len13 = arguments.length, types = Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {\n        types[_key13] = arguments[_key13];\n      }\n\n      return makeUnion(this, types);\n    }\n  }, {\n    key: 'intersect',\n    value: function intersect() {\n      var target = new IntersectionType(this);\n\n      for (var _len14 = arguments.length, types = Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {\n        types[_key14] = arguments[_key14];\n      }\n\n      target.types = types;\n      return target;\n    }\n  }, {\n    key: 'intersection',\n    value: function intersection() {\n      return this.intersect.apply(this, arguments);\n    }\n  }, {\n    key: 'box',\n    value: function box(reveal) {\n      var box = new TypeBox(this);\n      box.reveal = reveal;\n      return box;\n    }\n  }, {\n    key: 'tdz',\n    value: function tdz(reveal, name) {\n      var tdz = new TypeTDZ(this);\n      tdz.reveal = reveal;\n      tdz.name = name;\n      return tdz;\n    }\n  }, {\n    key: 'ref',\n    value: function ref(subject) {\n      var target = void 0;\n      if (typeof subject === 'string') {\n        // try and eagerly resolve the reference\n        target = this.get(subject);\n        if (!target) {\n          // defer dereferencing for now\n          target = new TypeReference(this);\n          target.name = subject;\n        }\n      } else if (typeof subject === 'function') {\n        // Issue 252\n        var handlerRegistry = this[TypeConstructorRegistrySymbol];\n        handlerRegistry;\n\n        // see if we have a dedicated TypeConstructor for this.\n        target = handlerRegistry.get(subject);\n\n        if (!target) {\n          // just use a generic type handler.\n          target = new GenericType(this);\n          target.impl = subject;\n          target.name = subject.name;\n        }\n      } else if (subject instanceof Type) {\n        target = subject;\n      } else {\n        if (subject == null || typeof subject !== 'object') {\n          this.emitWarningMessage(`Could not reference the given type, try t.typeOf(value) instead. (got ${String(subject)})`);\n        } else if (!warnedInvalidReferences.has(subject)) {\n          this.emitWarningMessage('Could not reference the given type, try t.typeOf(value) instead.');\n          warnedInvalidReferences.add(subject);\n        }\n        return this.any();\n      }\n\n      for (var _len15 = arguments.length, typeInstances = Array(_len15 > 1 ? _len15 - 1 : 0), _key15 = 1; _key15 < _len15; _key15++) {\n        typeInstances[_key15 - 1] = arguments[_key15];\n      }\n\n      if (typeInstances.length) {\n        var _target5;\n\n        invariant(typeof target.apply === 'function', `Cannot apply non-applicable type: ${target.typeName}.`);\n        return (_target5 = target).apply.apply(_target5, toConsumableArray(typeInstances));\n      } else {\n        return target;\n      }\n    }\n  }, {\n    key: 'validate',\n    value: function validate(type, input) {\n      var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      var path = arguments[3];\n\n      var validation = new Validation(this, input);\n      if (path) {\n        var _validation$path;\n\n        (_validation$path = validation.path).push.apply(_validation$path, toConsumableArray(path));\n      } else if (typeof type.name === 'string') {\n        validation.path.push(type.name);\n      }\n      validation.prefix = prefix;\n      validation.errors = Array.from(type.errors(validation, [], input));\n      return validation;\n    }\n  }, {\n    key: 'check',\n    value: function check(type, input) {\n      var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      var path = arguments[3];\n\n      if (this.mode === 'assert') {\n        return this.assert(type, input, prefix, path);\n      } else {\n        return this.warn(type, input, prefix, path);\n      }\n    }\n  }, {\n    key: 'assert',\n    value: function assert(type, input) {\n      var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      var path = arguments[3];\n\n      var validation = this.validate(type, input, prefix, path);\n      var error = this.makeTypeError(validation);\n      if (error) {\n        throw error;\n      }\n      return input;\n    }\n  }, {\n    key: 'warn',\n    value: function warn(type, input) {\n      var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      var path = arguments[3];\n\n      var validation = this.validate(type, input, prefix, path);\n      var message = makeWarningMessage(validation);\n      if (typeof message === 'string') {\n        this.emitWarningMessage(message);\n      }\n      return input;\n    }\n\n    /**\n     * Emits a warning message, using `console.warn()` by default.\n     */\n\n  }, {\n    key: 'emitWarningMessage',\n    value: function emitWarningMessage(message) {\n      console.warn('flow-runtime:', message);\n    }\n  }, {\n    key: 'propTypes',\n    value: function propTypes(type) {\n      return makeReactPropTypes(type.unwrap());\n    }\n  }, {\n    key: 'match',\n    value: function match() {\n      for (var _len16 = arguments.length, args = Array(_len16), _key16 = 0; _key16 < _len16; _key16++) {\n        args[_key16] = arguments[_key16];\n      }\n\n      var clauses = args.pop();\n      if (!Array.isArray(clauses)) {\n        throw new Error('Invalid pattern, last argument must be an array.');\n      }\n      clauses;\n      var pattern = this.pattern.apply(this, toConsumableArray(clauses));\n      return pattern.apply(undefined, args);\n    }\n  }, {\n    key: 'pattern',\n    value: function pattern() {\n      for (var _len17 = arguments.length, clauses = Array(_len17), _key17 = 0; _key17 < _len17; _key17++) {\n        clauses[_key17] = arguments[_key17];\n      }\n\n      var length = clauses.length;\n\n      var tests = new Array(length);\n      for (var i = 0; i < length; i++) {\n        var clause = clauses[i];\n        var annotation = this.getAnnotation(clause);\n        if (!annotation) {\n          if (i !== length - 1) {\n            throw new Error(`Invalid Pattern - found unannotated function in position ${i}, default clauses must be last.`);\n          }\n          tests[i] = true;\n        } else {\n          invariant(annotation instanceof FunctionType || annotation instanceof ParameterizedFunctionType, 'Pattern clauses must be annotated functions.');\n          tests[i] = annotation;\n        }\n      }\n      return function () {\n        for (var _i = 0; _i < tests.length; _i++) {\n          var test = tests[_i];\n          var _clause = clauses[_i];\n          if (test === true) {\n            return _clause.apply(undefined, arguments);\n          } else if (test.acceptsParams.apply(test, arguments)) {\n            return _clause.apply(undefined, arguments);\n          }\n        }\n        var error = new TypeError('Value did not match any of the candidates.');\n        error.name = 'RuntimeTypeError';\n        throw error;\n      };\n    }\n  }, {\n    key: 'wrapIterator',\n    value: function wrapIterator(type) {\n      var t = this;\n      return function* wrappedIterator(input) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var item = _step.value;\n\n            yield t.check(type, item);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      };\n    }\n  }, {\n    key: 'refinement',\n    value: function refinement(type) {\n      var target = new RefinementType(this);\n      target.type = type;\n\n      for (var _len18 = arguments.length, constraints = Array(_len18 > 1 ? _len18 - 1 : 0), _key18 = 1; _key18 < _len18; _key18++) {\n        constraints[_key18 - 1] = arguments[_key18];\n      }\n\n      target.addConstraint.apply(target, toConsumableArray(constraints));\n      return target;\n    }\n  }, {\n    key: '$exact',\n    value: function $exact(type) {\n      var target = new ObjectType(this);\n      type = type.unwrap();\n      if (Array.isArray(type.callProperties)) {\n        var _target$callPropertie2;\n\n        (_target$callPropertie2 = target.callProperties).push.apply(_target$callPropertie2, toConsumableArray(type.callProperties));\n      }\n      if (Array.isArray(type.indexers)) {\n        var _target$indexers2;\n\n        (_target$indexers2 = target.indexers).push.apply(_target$indexers2, toConsumableArray(type.indexers));\n      }\n      if (Array.isArray(type.properties)) {\n        var _target$properties;\n\n        (_target$properties = target.properties).push.apply(_target$properties, toConsumableArray(type.properties));\n      }\n      target.exact = true;\n      return target;\n    }\n  }, {\n    key: '$diff',\n    value: function $diff(aType, bType) {\n      var target = new $DiffType(this);\n      target.aType = aType;\n      target.bType = bType;\n      return target;\n    }\n  }, {\n    key: '$flowFixMe',\n    value: function $flowFixMe() {\n      return new $FlowFixMeType(this);\n    }\n  }, {\n    key: '$keys',\n    value: function $keys(type) {\n      var target = new $KeysType(this);\n      target.type = type;\n      return target;\n    }\n  }, {\n    key: '$objMap',\n    value: function $objMap(object, mapper) {\n      var target = new $ObjMapType(this);\n      target.object = object;\n      target.mapper = mapper;\n      return target;\n    }\n  }, {\n    key: '$objMapi',\n    value: function $objMapi(object, mapper) {\n      var target = new $ObjMapiType(this);\n      target.object = object;\n      target.mapper = mapper;\n      return target;\n    }\n  }, {\n    key: '$propertyType',\n    value: function $propertyType(object, property) {\n      var target = new $PropertyType(this);\n      target.object = object;\n      if (property instanceof Type) {\n        var unwrapped = property.unwrap();\n        target.property = unwrapped.value;\n      } else {\n        target.property = property;\n      }\n      return target;\n    }\n  }, {\n    key: '$shape',\n    value: function $shape(type) {\n      var target = new $ShapeType(this);\n      target.type = type;\n      return target;\n    }\n  }, {\n    key: '$subtype',\n    value: function $subtype(type) {\n      var target = new $SubType(this);\n      target.type = type;\n      return target;\n    }\n  }, {\n    key: '$supertype',\n    value: function $supertype(type) {\n      var target = new $SuperType(this);\n      target.type = type;\n      return target;\n    }\n  }, {\n    key: '$tupleMap',\n    value: function $tupleMap(tuple, mapper) {\n      var target = new $TupleMapType(this);\n      target.tuple = tuple;\n      target.mapper = mapper;\n      return target;\n    }\n  }, {\n    key: '$values',\n    value: function $values(type) {\n      var target = new $ValuesType(this);\n      target.type = type;\n      return target;\n    }\n  }, {\n    key: 'Class',\n    value: function Class(instanceType) {\n      var target = new ClassType(this);\n      target.instanceType = instanceType;\n      return target;\n    }\n  }, {\n    key: 'TypeParametersSymbol',\n\n\n    // Issue 252\n    get: function get$$1() {\n      return TypeParametersSymbol;\n    }\n  }]);\n  return TypeContext;\n}();\n\nvar globalContext$1 = void 0;\nif (typeof global !== 'undefined' && typeof global.__FLOW_RUNTIME_GLOBAL_CONTEXT_DO_NOT_USE_THIS_VARIABLE__ !== 'undefined') {\n  globalContext$1 = global.__FLOW_RUNTIME_GLOBAL_CONTEXT_DO_NOT_USE_THIS_VARIABLE__;\n} else {\n  globalContext$1 = new TypeContext();\n  registerPrimitiveTypes(globalContext$1);\n  registerBuiltinTypeConstructors(globalContext$1);\n  registerTypePredicates(globalContext$1);\n  if (typeof global !== 'undefined') {\n    global.__FLOW_RUNTIME_GLOBAL_CONTEXT_DO_NOT_USE_THIS_VARIABLE__ = globalContext$1;\n  }\n}\n\nvar globalContext$2 = globalContext$1;\n\nexport { AnyType, ArrayType, BooleanLiteralType, BooleanType, EmptyType, ExistentialType, FlowIntoType, FunctionType, FunctionTypeParam, FunctionTypeRestParam, FunctionTypeReturn, GeneratorType, GenericType, IntersectionType, MixedType, TypeAlias, NullableType, NullLiteralType, NumberType, NumericLiteralType, ObjectType, ObjectTypeCallProperty, ObjectTypeIndexer, ObjectTypeProperty, ParameterizedTypeAlias, ParameterizedFunctionType, PartialType, RefinementType, StringLiteralType, StringType, SymbolLiteralType, SymbolType, ThisType, TupleType, Type, TypeBox, TypeConstructor, TypeParameter, TypeParameterApplication, TypeReference, TypeTDZ, UnionType, VoidType, Declaration, TypeDeclaration, VarDeclaration, ModuleDeclaration, ModuleExports as ModuleExportsDeclaration, ClassDeclaration, ParameterizedClassDeclaration, ExtendsDeclaration, TypeParametersSymbol, TypeSymbol };export default globalContext$2;\n//# sourceMappingURL=flow-runtime.es2015.js.map\n","// @flow\n\nimport RedisClient from 'ioredis';\n\ntype Get = (string) => Promise<?string>;\ntype Sadd = (string, string) => Promise<number>;\ntype Set = (string, string) => Promise<void>;\ntype Smembers = (string) => Promise<$ReadOnlyArray<string>>;\ntype Srem = (string, string) => Promise<number>;\ntype Watch = (string) => Promise<void>;\n\ntype MultiGet = (string) => MultiRedis;\ntype MultiSadd = (string, string) => MultiRedis;\ntype MultiSet = (string, string) => MultiRedis;\ntype MultiSmembers = (string) => MultiRedis;\ntype MultiSrem = (string, string) => MultiRedis;\n\ntype MultiRedis = {\n    exec: () => Promise<?$ReadOnlyArray<mixed>>,\n    get: MultiGet,\n    sadd: MultiSadd,\n    set: MultiSet,\n    smembers: MultiSmembers,\n    srem: MultiSrem,\n};\n\nexport type Redis = {\n    get: Get,\n    multi: () => MultiRedis,\n    sadd: Sadd,\n    set: Set,\n    smembers: Smembers,\n    srem: Srem,\n    watch: Watch,\n};\n\nexport const createRedisClient = (): Redis => {\n    return new RedisClient({\n        host: process.env.REDIS_HOST,\n        port: process.env.REDIS_PORT,\n    });\n};\n","// @flow\n\nexport type Handler<TEvent = mixed, TResult = mixed> = (\n    event: TEvent,\n    context: Context,\n    callback: Callback<TResult>,\n) => void | Promise<TResult>;\n\nexport interface Context {\n    callbackWaitsForEmptyEventLoop: boolean;\n    functionName: string;\n    functionVersion: string;\n    invokedFunctionArn: string;\n    memoryLimitInMB: string;\n    awsRequestId: string;\n    logGroupName: string;\n    logStreamName: string;\n    identity?: CognitoIdentity;\n    clientContext?: ClientContext;\n\n    getRemainingTimeInMillis(): number;\n\n    done(error?: Error, result?: mixed): void;\n\n    fail(error: Error | string): void;\n\n    succeed(messageOrObject: mixed): void;\n\n    succeed(message: string, object: mixed): void;\n}\n\nexport interface CognitoIdentity {\n    cognitoIdentityId: string;\n    cognitoIdentityPoolId: string;\n}\n\nexport interface ClientContext {\n    client: ClientContextClient;\n    Custom?: mixed;\n    env: ClientContextEnv;\n}\n\nexport interface ClientContextClient {\n    installationId: string;\n    appTitle: string;\n    appVersionName: string;\n    appVersionCode: string;\n    appPackageName: string;\n}\n\nexport interface ClientContextEnv {\n    platformVersion: string;\n    platform: string;\n    make: string;\n    model: string;\n    locale: string;\n}\n\n\nexport type Callback<TResult = mixed> = (error?: Error | string | null, result?: TResult) => void;\n\nexport type APIGatewayEventRequestContext = {\n    accountId: string,\n    apiId: string,\n    authorizer?: ?AuthResponseContext,\n    connectedAt?: number,\n    connectionId?: string,\n    domainName?: string,\n    domainPrefix?: string,\n    eventType?: string,\n    extendedRequestId?: string,\n    protocol: string,\n    httpMethod: string,\n    identity: APIGatewayEventIdentity,\n    messageDirection?: string,\n    messageId?: ?string,\n    path: string,\n    stage: string,\n    requestId: string,\n    requestTime?: string,\n    requestTimeEpoch: number,\n    resourceId: string,\n    resourcePath: string,\n    routeKey?: string,\n}\n\nexport type APIGatewayEventIdentity = {\n    accessKey: ?string,\n    accountId: ?string,\n    apiKey: ?string,\n    apiKeyId: ?string,\n    caller: ?string,\n    cognitoAuthenticationProvider: ?string,\n    cognitoAuthenticationType: ?string,\n    cognitoIdentityId:?string,\n    cognitoIdentityPoolId:?string,\n    principalOrgId: ?string,\n    sourceIp: string,\n    user: ?string,\n    userAgent: ?string,\n    userArn: ?string,\n}\n\nexport type AuthResponseContext = {\n    [string]: mixed,\n}\n\nexport type APIGatewayProxyHandler = Handler<APIGatewayProxyEvent, APIGatewayProxyResult>;\nexport type APIGatewayProxyCallback = Callback<APIGatewayProxyResult>;\n\nexport type ProxyHandler = APIGatewayProxyHandler;\nexport type ProxyCallback = APIGatewayProxyCallback;\nexport type APIGatewayEvent = APIGatewayProxyEvent;\nexport type ProxyResult = APIGatewayProxyResult;\n\nexport type APIGatewayProxyEvent = {\n    body: ?string,\n    headers: { [string]: string },\n    multiValueHeaders: { [string]: string[] },\n    httpMethod: string,\n    isBase64Encoded: boolean,\n    path: string,\n    pathParameters: ?{ [string]: string },\n    queryStringParameters: ?{ [string]: string },\n    multiValueQueryStringParameters: ?{ [string]: string[] },\n    stageVariables: ?{ [string]: string },\n    requestContext: APIGatewayEventRequestContext,\n    resource: string,\n}\n\nexport interface APIGatewayProxyResult {\n    statusCode: number;\n    headers?: {\n        [header: string]: boolean | number | string;\n    };\n    multiValueHeaders?: {\n        [header: string]: Array<boolean | number | string>;\n    };\n    body: string;\n    isBase64Encoded?: boolean;\n}\n\nexport type CustomAuthorizerHandler = Handler<CustomAuthorizerEvent, CustomAuthorizerResult>;\nexport type CustomAuthorizerCallback = Callback<CustomAuthorizerResult>;\n\nexport interface CustomAuthorizerEvent {\n    type: string;\n    methodArn: string;\n    authorizationToken?: string;\n    resource?: string;\n    path?: string;\n    httpMethod?: string;\n    headers?: { [name: string]: string };\n    multiValueHeaders?: { [name: string]: string[] };\n    pathParameters?: { [name: string]: string } | null;\n    queryStringParameters?: { [name: string]: string } | null;\n    multiValueQueryStringParameters?: { [name: string]: string[] } | null;\n    stageVariables?: { [name: string]: string };\n    requestContext?: APIGatewayEventRequestContext;\n    domainName?: string;\n    apiId?: string;\n}\n\nexport interface CustomAuthorizerResult {\n    principalId: string;\n    policyDocument: PolicyDocument;\n    context?: AuthResponseContext;\n    usageIdentifierKey?: string;\n}\n\nexport type AuthResponse = CustomAuthorizerResult;\n\nexport interface PolicyDocument {\n    Version: string;\n    Id?: string;\n    Statement: Statement[];\n}\n\nexport interface ConditionBlock {\n    [condition: string]: Condition | Condition[];\n}\n\nexport interface Condition {\n    [key: string]: string | string[];\n}\n\nexport type Statement =\n    BaseStatement\n    & StatementAction\n    & (StatementResource | StatementPrincipal);\n\nexport interface BaseStatement {\n    Effect: string;\n    Sid?: string;\n    Condition?: ConditionBlock;\n}\n\nexport type PrincipalValue =\n    { [key: string]: string | string[] }\n    | string\n    | string[];\n\nexport interface MaybeStatementPrincipal {\n    Principal?: PrincipalValue;\n    NotPrincipal?: PrincipalValue;\n}\n\nexport interface MaybeStatementResource {\n    Resource?: string | string[];\n    NotResource?: string | string[];\n}\n\nexport type StatementAction =\n    { Action: string | string[], ... }\n    | { NotAction: string | string[], ... };\n\nexport type StatementResource = MaybeStatementPrincipal &\n    ({ Resource: string | string[], ... } | { NotResource: string | string[], ... });\n\nexport type StatementPrincipal = MaybeStatementResource &\n    ({ Principal: PrincipalValue, ... } | { NotPrincipal: PrincipalValue, ... });\n\nexport type ScheduledHandler = Handler<ScheduledEvent, void>;\n\nexport interface ScheduledEvent {\n    account: string;\n    region: string;\n    detail: mixed;\n\n    ['detail-type']: string;\n\n    source: string;\n    time: string;\n    id: string;\n    resources: string[];\n}\n","module.exports = require(\"ioredis\");","// @flow\n\nimport { createRedisClient } from '../../clients/redis';\nimport type {ProxyHandler} from '../types';\n\nconst redis = createRedisClient();\n\nexport const handler: ProxyHandler = async (event, context) => {\n    try {\n        const connectionId = event.requestContext.connectionId;\n\n        if (connectionId == null) {\n            throw Error('connectionId is missing');\n        }\n\n        await redis.srem('connection-ids', connectionId);\n    } catch (error) {\n        console.error(error.stack);\n        return { statusCode: 500, body: 'Disconnect error.' };\n    }\n    return { statusCode: 200, body: 'Disconnected.' };\n};\n"],"sourceRoot":""}